{"version":3,"sources":["models/CargaDeHoras/HoursModel.js","components/CargaDeHoras/ModalHours.js","components/CargaDeHoras/ModalModifyHours.js","components/CargaDeHoras/GridItemHours.js","components/CargaDeHoras/GridHours.js","pages/CargaDeHoras/CargaDeHorasPage.js","components/Proyectos/ProyectoCard.js","pages/Proyectos/MainProyectosPage.js","pages/Proyectos/AgregarProyectoPage.js","pages/Recursos/RecursosPage.js","pages/Proyectos/TareaPage.js","pages/Soporte.js","pages/Main.js","components/Proyectos/TareaCard.js","pages/Proyectos/MainTareasPage.js","pages/Proyectos/AgregarTareaPage.js","components/App.js","index.js"],"names":["HoursModel","id","file","idProject","idTask","quantityHours","quantityMinutes","date","loadingDate","nameProject","nameTask","this","newIdProject","newIdTask","minutesAsString","hoursAsString","dateString","toString","year","substr","mont","days","hours","minutes","ModalHours","props","state","isShow","hoursModel","lstProjects","lstTasks","isTaskDisabled","taskIsLoading","errorMessage","saveHours","bind","changeVisibility","saveHoursWithEnter","setState","setIdProject","setIdTask","e","key","isFormValid","data","dateAsString","getDateAsString","getHoursAsString","self","fetch","method","mode","headers","redirect","referrerPolicy","body","JSON","stringify","then","response","ok","Error","swal","text","icon","onReload","catch","error","newHours","setNewHours","parseInt","hour","minute","newDate","stringNewDate","replace","isNaN","completeData","r","json","projects","console","log","a","urlTask","getIdProject","tasks","shouldTaskDisabled","Button","color","onClick","Modal","isOpen","toggle","onKeyPress","ModalHeader","ModalBody","FormGroup","Label","Input","type","onChange","onProjectChange","target","value","map","p","codigo","nombre","Col","className","height","width","disabled","onTaskChange","t","Row","lg","theme","time","timeMode","timeConfig","from","to","step","unit","onTimeChange","max","Date","toISOString","split","onDateChange","check","row","sm","size","offset","Alert","Component","ModalModifyHours","hoursAux","saveHoursById","url","style","marginTop","GridItemHours","isLoading","deleteHoursById","title","dangerMode","buttons","answerIsNo","taskByProject","tarea","nombreProyecto","colSpan","GridHours","lstHours","onReloadGrid","hoursByFile","lstHoursModel","forEach","x","model","push","sort","b","Card","CardHeader","tag","display","xl","paddingLeft","CardBody","Container","length","Table","striped","hover","h","CargaDeHorasPage","resource","match","params","padding","Breadcrumb","BreadcrumbItem","active","Nombre","Apellido","CardTitle","CardText","legajo","ProyectoCard","estadoString","project","estado","charAt","toUpperCase","slice","Badge","descripcion","MainProyectosPage","AgregarProyectoPage","modalHeader","modalBody","modalOnClose","modal","document","getElementById","fechaInicio","fechaFin","horas","presupuesto","validateRequiredEntries","obtenerEstado","undefined","abrirModal","history","description","validation","message","header","onClose","checked","nombreClassList","classList","fechaClassList","descClassList","validate","element","valid","add","remove","toggleModal","Form","for","name","maxLength","required","crearProyecto","onClosed","withRouter","RecursosPage","lstResources","resources","TareaPage","errorModal","acceptModalButton","prioridad","codigoRecurso","recursosXhoras","content","validateInputText","validateRecursoAndAct","validarRadio","obtenerRadio","patch","fechaFinal","proyectoID","radio1","radio2","radio3","result1","result2","result3","elements","labelID","labelClassList","primero","segundo","tercero","classListId","acceptButton","tareaID","idtarea","obtenerTareas","obtenerRecursosPorTarea","obtenerHorasDeTarea","hora","recurso","trueTarea","closeBtn","codigoProyecto","noResources","asignarRecurso","modificarFechaFinal","modificarEstado","modificarPrioridad","close","Soporte","TareaCard","MainTareasPage","tareas","AgregarTareaPage","nombreTarea","differ","prioridadClassList","validatePriority","baja","media","alta","crearTarea","App","useHistory","exact","path","component","Main","ReactDOM","render","basename","process"],"mappings":"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","file":"static/js/main.899c633e.chunk.js","sourcesContent":["export default class HoursModel {\n\n    id = 0\n    file = 0\n    idProject = 0\n    idTask = 0\n    quantityHours = 0\n    quantityMinutes = 0\n    date = 0\n    loadingDate = 0\n    nameProject = \"\"\n    nameTask = \"\";\n\n    constructor(){\n        this.id = 0;\n        this.file = 0;\n        this.idProject = 0;\n        this.idTask = 0;\n        this.quantityHours = 0;\n        this.quantityMinutes = 15;\n        this.date = 0;\n        this.loadingDate = 0;\n        this.nameProject = \"\";\n        this.nameTask = \"\";\n    }\n\n    HoursModel(otherHours){\n        this.id = otherHours.id;\n        this.file = otherHours.file;\n        this.idProject = otherHours.idProject;\n        this.idTask = otherHours.idTask;\n        this.quantityHours = otherHours.quantityHours;\n        this.quantityMinutes = otherHours.quantityMinutes;\n        this.date = otherHours.date;\n        this.loadingDate = otherHours.loadingDate;\n        this.nameProject = otherHours.nameProject;\n        this.nameTask = otherHours.nameTask;\n    }\n\n    HoursModel(id, file, idProject, idTask, quantityHours, quantityMinutes, date, loadingDate, nameProject, nameTask){\n        this.id = id;\n        this.file = file;\n        this.idProject = idProject;\n        this.idTask = idTask;\n        this.quantityHours = quantityHours;\n        this.quantityMinutes = quantityMinutes;\n        this.date = date;\n        this.loadingDate = loadingDate;\n        this.nameProject = nameProject;\n        this.nameTask = nameTask;\n    }\n\n    getIdProject(){\n        return this.idProject;\n    }\n\n    setIdProject(newIdProject){\n        this.idProject = newIdProject;\n    }\n\n    getIdTask(){\n        return this.idTask;\n    }\n\n    setIdTask(newIdTask){\n        this.idTask = newIdTask;\n    }\n\n    getHoursAsString(){\n        var minutesAsString = this.quantityMinutes;\n        var hoursAsString = this.quantityHours;\n\n        if (minutesAsString == 0){\n            minutesAsString = \"00\";\n        }\n\n        if (hoursAsString < 10){\n            hoursAsString = \"0\"+hoursAsString;\n        }\n\n        return hoursAsString + \":\" + minutesAsString;\n    }\n\n    getDateAsString(){\n        let dateString = this.date.toString();\n\n        let year = dateString.substr(0,4),\n            mont = dateString.substr(4,2),\n            days = dateString.substr(6,2);\n\n        return `${days}/${mont}/${year}`;\n    }\n\n    setNewHours(hours, minutes){\n        this.quantityHours = hours;\n        this.quantityMinutes = minutes;\n    }\n\n    completeData(){\n        if ((this.idTask === 0) ||\n            ((this.quantityHours === 0) && (this.quantityMinutes === 0)) ||\n            (this.date === 0))\n            return false;\n\n        return true;\n    }\n}","import React, { Component } from 'react';\nimport { Alert, Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport TimePicker from 'react-times';\nimport HoursModel from '../../models/CargaDeHoras/HoursModel';\n\nimport 'react-times/css/classic/default.css';\nimport './ModalHours.css'\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport PropTypes from \"prop-types\";\nimport swal from \"sweetalert\";\n\nexport default class ModalHours extends Component {\n\n    static propTypes = {\n        onReload: PropTypes.func.isRequired\n    };\n\n    constructor(props){\n        super(props);\n\n        let hours = new HoursModel();\n        hours.file = props.file;\n\n        this.state = {\n            isShow: false,\n            hoursModel: hours,\n            lstProjects: [],\n            lstTasks: [],\n            isTaskDisabled: true,\n            taskIsLoading: false,\n            errorMessage:\"\"\n        };\n\n        this.saveHours = this.saveHours.bind(this);\n        this.changeVisibility = this.changeVisibility.bind(this);\n\n        this.saveHoursWithEnter = this.saveHoursWithEnter.bind(this);\n    }\n\n    changeVisibility() {\n        this.setState({\n            isShow: !this.state.isShow,\n            errorMessage: \"\",\n            isTaskDisabled: true\n        });\n        \n        this.state.hoursModel.setIdProject(0);\n        this.state.hoursModel.setIdTask(0);\n        this.state.hoursModel.date = 0;\n    }\n\n    saveHoursWithEnter(e){\n        if(e.key === 'Enter'){\n            this.changeVisibility();\n        }\n    }\n\n    saveHours() {\n\n        if (!this.isFormValid()){\n            this.setState({\n                errorMessage: \"Por favor, complete todos los campos obligatorios\"\n            });\n            return;\n        }\n\n        let url = \"https://squad6-backend.herokuapp.com/hours\";\n\n        let data = {\n            file: this.state.hoursModel.file,\n            idProject: this.state.hoursModel.idProject,\n            idTask: this.state.hoursModel.idTask,\n            quantityHours: this.state.hoursModel.quantityHours,\n            quantityMinutes: this.state.hoursModel.quantityMinutes,\n            date: this.state.hoursModel.date\n        };\n\n        var dateAsString = this.state.hoursModel.getDateAsString();\n        var hoursAsString = this.state.hoursModel.getHoursAsString();\n\n        let self = this;\n\n        fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        .then(function(response) {\n\n            if(!response.ok)\n                throw new Error();\n\n            swal({\n                text: \"Se cargaron \" + hoursAsString + \" horas del \" + dateAsString + \" con éxito.\",\n                icon: \"success\"\n            }).then(() => {\n                self.changeVisibility();\n                self.props.onReload();\n            });\n        })\n        .catch(function(error) {\n            self.setState({\n                errorMessage: \"No se puede cargar más de 24 horas un mismo día\"\n            });\n        });\n    }\n\n    onTimeChange(newHours) {\n        this.state.hoursModel.setNewHours(parseInt(newHours.hour), parseInt(newHours.minute));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    onDateChange(newDate){\n        var stringNewDate = newDate.replace(/-/gi, \"\");\n\n        if (isNaN(parseInt(stringNewDate))){\n            this.state.hoursModel.date = 0;\n            return;\n        }\n        this.state.hoursModel.date = parseInt(stringNewDate);\n    }\n\n    isFormValid(){\n        return this.state.hoursModel.completeData();\n    }\n\n    componentDidMount()\n    {\n        //https://proyectopsa.herokuapp.com/proyectos/\n        fetch('https://proyectopsa.herokuapp.com/proyectos/')\n            .then(r => r.json())\n            .then((projects) =>\n            {\n                this.setState({\n                    lstProjects: projects\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    async getListTasks(){\n\n        let urlTask = 'https://proyectopsa.herokuapp.com/proyectos/' + this.state.hoursModel.getIdProject() + '/tarea/';\n\n        fetch(urlTask)\n            .then(r => r.json())\n            .then((tasks) =>\n            {\n                this.setState({\n                    lstTasks: tasks\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    onProjectChange(newIdProject){\n\n        this.setState({taskIsLoading: true});\n\n        this.state.hoursModel.setIdProject(newIdProject);\n\n        let shouldTaskDisabled = (newIdProject == 0);\n\n        if (shouldTaskDisabled){\n            this.setState({\n                hoursModel: this.state.hoursModel,\n                lstTasks: [],\n                isTaskDisabled: shouldTaskDisabled,\n                taskIsLoading: false\n            });\n        } else {\n            let urlTask = 'https://proyectopsa.herokuapp.com/proyectos/' + this.state.hoursModel.getIdProject() + '/tarea/';\n\n            fetch(urlTask)\n                .then(r => r.json())\n                .then((tasks) =>\n                {\n                    this.setState({\n                        hoursModel: this.state.hoursModel,\n                        lstTasks: tasks,\n                        isTaskDisabled: false,\n                        taskIsLoading: false\n                    });\n                }, (error) => {console.log(error);});\n        }\n    }\n\n    onTaskChange(newIdTask){\n        this.state.hoursModel.setIdTask(parseInt(newIdTask));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    render(){\n\n        return (\n            <div>\n\n                <Button color=\"primary\" onClick={this.changeVisibility}>Nueva</Button>\n\n                <Modal isOpen={this.state.isShow}\n                       toggle={this.changeVisibility}\n                       onKeyPress={this.saveHoursWithEnter}>\n\n                    <ModalHeader toggle={this.changeVisibility}>Carga de Horas</ModalHeader>\n\n                    <ModalBody onKeyPress={this.saveHoursWithEnter}>\n                        <FormGroup>\n                            <Label>Proyecto *</Label>\n                            <Input type=\"select\"\n                                   onChange={e => this.onProjectChange(e.target.value)}>\n                                <option value=\"0\"></option>\n                                {this.state.lstProjects.map((p) => <option key={p.codigo} value={p.codigo}>{p.nombre}</option>)}\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Tarea *</Label>\n                            {\n                                this.state.taskIsLoading ?\n                                    <Col className=\"text-center\">\n                                        <Loader\n                                            type=\"TailSpin\"\n                                            color=\"#00BFFF\"\n                                            height={30}\n                                            width={30}></Loader>\n                                    </Col>\n                                    :\n                                    <Input type=\"select\"\n                                           disabled={this.state.isTaskDisabled}\n                                           onChange={e => this.onTaskChange(e.target.value)}>\n                                        <option value=\"0\"></option>\n                                        {this.state.lstTasks.map((t) => <option key={t.codigo} value={t.codigo}>{t.nombre}</option>)}\n                                    </Input>\n                            }\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Row>\n                                <Col lg={6}>\n                                    <Label>Cantidad de Horas *</Label>\n                                    <TimePicker\n                                        theme=\"classic\"\n                                        time={this.state.hoursModel.getHoursAsString()}\n                                        timeMode=\"24\"\n                                        timeConfig={{\n                                            from: '0:15',\n                                            to: '23:45',\n                                            step: 15,\n                                            unit: 'minutes'\n                                        }}\n                                        onTimeChange={this.onTimeChange.bind(this)}/>\n                                </Col>\n\n                                <Col lg={6}>\n                                    <Label>Fecha *</Label>\n                                    <Input type=\"date\"\n                                           max={(new Date().toISOString().split(\"T\")[0])}\n                                           onChange={e => this.onDateChange(e.target.value)}></Input>\n                                </Col>\n                            </Row>\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Col className=\"col-datos-oblig\">\n                                (*) para aquellos campos que sean requeridos obligatoriamente\n                                <hr/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup check row>\n                            <Col sm={{ size: 10, offset: 9 }}>\n                                <Button color=\"primary\" onClick={this.saveHours}>Guardar</Button>\n                            </Col>\n                        </FormGroup>\n\n                        {this.state.errorMessage ? (\n                          <Alert id=\"alerta\" color=\"danger\"> {this.state.errorMessage} </Alert>\n                        ) : (\n                          null\n                        )}\n                    </ModalBody>\n\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Alert, Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport TimePicker from 'react-times';\nimport HoursModel from '../../models/CargaDeHoras/HoursModel';\n\nimport 'react-times/css/classic/default.css';\nimport './ModalHours.css'\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport PropTypes from \"prop-types\";\nimport swal from \"sweetalert\";\n\nimport { FaPencilAlt } from \"react-icons/fa\";\n\nexport default class ModalModifyHours extends Component {\n\n    static propTypes = {\n        hours: PropTypes.object.isRequired,\n        onReload: PropTypes.func.isRequired,\n    };\n\n    constructor(props){\n        super(props);\n\n        let hoursAux = new HoursModel();\n        hoursAux.file = props.hours.file;\n\n        this.state = {\n            isShow: false,\n            hoursModel: hoursAux,\n            lstProjects: [],\n            lstTasks: [],\n            isTaskDisabled: true,\n            taskIsLoading: false,\n            errorMessage:\"\"\n        };\n        //this.state.hoursModel.setIdProject(this.props.hours.idProject);\n        //this.state.hoursModel.setIdTask(this.props.hours.idTask);\n        this.state.hoursModel.setNewHours(this.props.hours.quantityHours, this.props.hours.quantityMinutes);\n        //this.state.hoursModel.date = this.props.hours.date;\n        //this.state.hoursModel.nameProject = \"nombre por defecto\";\n        //this.state.hoursModel.nameTask = \"tarea por defecto\";\n\n        this.saveHoursById = this.saveHoursById.bind(this);\n        this.changeVisibility = this.changeVisibility.bind(this);\n\n        this.saveHoursWithEnter = this.saveHoursWithEnter.bind(this);\n    }\n\n    changeVisibility() {\n        this.setState({\n            isShow: !this.state.isShow,\n            errorMessage: \"\",\n            isTaskDisabled: true\n        });\n        \n        this.state.hoursModel.setIdProject(0);\n        this.state.hoursModel.setIdTask(0);\n        this.state.hoursModel.date = 0;\n    }\n\n    saveHoursWithEnter(e){\n        if(e.key === 'Enter'){\n            this.changeVisibility();\n        }\n    }\n\n    saveHoursById() {\n\n        if (!this.isFormValid()){\n            this.setState({\n                errorMessage: \"Por favor, complete todos los campos obligatorios\"\n            });\n            return;\n        }\n\n        let url = 'https://squad6-backend.herokuapp.com/hours/' + this.props.hours.id;\n\n        let data = {\n            id: this.props.hours.id,\n            file: this.props.hours.file,\n            idProject: this.state.hoursModel.idProject,\n            idTask: this.state.hoursModel.idTask,\n            quantityHours: this.state.hoursModel.quantityHours,\n            quantityMinutes: this.state.hoursModel.quantityMinutes,\n            date: this.state.hoursModel.date,\n            loadingDate: this.props.hours.loadingDate\n        };\n\n        var dateAsString = this.state.hoursModel.getDateAsString();\n        var hoursAsString = this.state.hoursModel.getHoursAsString();\n\n        let self = this;\n\n        fetch(url, {\n            method: 'PUT',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        .then(function(response) {\n\n            if(!response.ok)\n                throw new Error();\n\n            swal({\n                text: \"Se modificó la hora correctamente.\",\n                icon: \"success\"\n            }).then(() => {\n                self.changeVisibility();\n                self.props.onReload();\n            });\n        })\n        .catch(function(error) {\n            self.setState({\n                errorMessage: \"No se puede cargar más de 24 horas un mismo día\"\n            });\n        });\n    }\n\n    onTimeChange(newHours) {\n        this.state.hoursModel.setNewHours(parseInt(newHours.hour), parseInt(newHours.minute));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    onDateChange(newDate){\n        var stringNewDate = newDate.replace(/-/gi, \"\");\n\n        if (isNaN(parseInt(stringNewDate))){\n            this.state.hoursModel.date = 0;\n            return;\n        }\n        this.state.hoursModel.date = parseInt(stringNewDate);\n    }\n\n    isFormValid(){\n        return this.state.hoursModel.completeData();\n    }\n\n    componentDidMount()\n    {\n        //https://proyectopsa.herokuapp.com/proyectos/\n        fetch('https://proyectopsa.herokuapp.com/proyectos/')\n            .then(r => r.json())\n            .then((projects) =>\n            {\n                this.setState({\n                    lstProjects: projects\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    async getListTasks(){\n\n        let urlTask = 'https://proyectopsa.herokuapp.com/proyectos/' + this.state.hoursModel.getIdProject() + '/tarea/';\n\n        fetch(urlTask)\n            .then(r => r.json())\n            .then((tasks) =>\n            {\n                this.setState({\n                    lstTasks: tasks\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    onProjectChange(newIdProject){\n\n        this.setState({taskIsLoading: true});\n\n        this.state.hoursModel.setIdProject(newIdProject);\n\n        let shouldTaskDisabled = (newIdProject == 0);\n\n        if (shouldTaskDisabled){\n            this.setState({\n                hoursModel: this.state.hoursModel,\n                lstTasks: [],\n                isTaskDisabled: shouldTaskDisabled,\n                taskIsLoading: false\n            });\n        } else {\n            let urlTask = 'https://proyectopsa.herokuapp.com/proyectos/' + this.state.hoursModel.getIdProject() + '/tarea/';\n\n            fetch(urlTask)\n                .then(r => r.json())\n                .then((tasks) =>\n                {\n                    this.setState({\n                        hoursModel: this.state.hoursModel,\n                        lstTasks: tasks,\n                        isTaskDisabled: false,\n                        taskIsLoading: false\n                    });\n                }, (error) => {console.log(error);});\n        }\n    }\n\n    onTaskChange(newIdTask){\n        this.state.hoursModel.setIdTask(parseInt(newIdTask));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    render(){\n\n        return (\n            <div>\n\n                <button type=\"button\" className=\"btn btn-sm btn-rounded \" onClick = {this.changeVisibility} style={{marginTop: \"-7px\", color: \"blue\"}}>\n                                <FaPencilAlt/>\n                            </button>\n\n                <Modal isOpen={this.state.isShow}\n                       toggle={this.changeVisibility}\n                       onKeyPress={this.saveHoursWithEnter}>\n\n                    <ModalHeader toggle={this.changeVisibility}>Modificar hora cargada</ModalHeader>\n\n                    <ModalBody onKeyPress={this.saveHoursWithEnter}>\n                        <FormGroup>\n                            <Label>Proyecto *</Label>\n                            <Input type=\"select\"\n                                   onChange={e => this.onProjectChange(e.target.value)}>\n                                <option value=\"0\"></option>\n                                {this.state.lstProjects.map((p) => <option key={p.codigo} value={p.codigo}>{p.nombre}</option>)}\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Tarea *</Label>\n                            {\n                                this.state.taskIsLoading ?\n                                    <Col className=\"text-center\">\n                                        <Loader\n                                            type=\"TailSpin\"\n                                            color=\"#00BFFF\"\n                                            height={30}\n                                            width={30}></Loader>\n                                    </Col>\n                                    :\n                                    <Input type=\"select\"\n                                           disabled={this.state.isTaskDisabled}\n                                           onChange={e => this.onTaskChange(e.target.value)}>\n                                        <option value=\"0\"></option>\n                                        {this.state.lstTasks.map((t) => <option key={t.codigo} value={t.codigo}>{t.nombre}</option>)}\n                                    </Input>\n                            }\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Row>\n                                <Col lg={6}>\n                                    <Label>Cantidad de Horas *</Label>\n                                    <TimePicker\n                                        theme=\"classic\"\n                                        time={this.state.hoursModel.getHoursAsString()}\n                                        timeMode=\"24\"\n                                        timeConfig={{\n                                            from: '0:15',\n                                            to: '23:45',\n                                            step: 15,\n                                            unit: 'minutes'\n                                        }}\n                                        onTimeChange={this.onTimeChange.bind(this)}/>\n                                </Col>\n\n                                <Col lg={6}>\n                                    <Label>Fecha *</Label>\n                                    <Input type=\"date\"\n                                           max={(new Date().toISOString().split(\"T\")[0])}\n                                           onChange={e => this.onDateChange(e.target.value)}></Input>\n                                </Col>\n                            </Row>\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Col className=\"col-datos-oblig\">\n                                (*) para aquellos campos que sean requeridos obligatoriamente\n                                <hr/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup check row>\n                            <Col sm={{ size: 10, offset: 9 }}>\n                                <Button color=\"primary\" onClick={this.saveHoursById}>Guardar</Button>\n                            </Col>\n                        </FormGroup>\n\n                        {this.state.errorMessage ? (\n                          <Alert id=\"alerta\" color=\"danger\"> {this.state.errorMessage} </Alert>\n                        ) : (\n                          null\n                        )}\n                    </ModalBody>\n\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {Button, Table, Row, Col, Card, CardBody, Container} from 'reactstrap';\nimport HoursModel from \"../../models/CargaDeHoras/HoursModel\";\nimport PropTypes from \"prop-types\";\nimport { FaTrashAlt, FaPencilAlt } from \"react-icons/fa\";\nimport {Link} from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport swal from \"sweetalert\";\nimport ModalModifyHours from \"./ModalModifyHours\";\n\nexport default class GridItemHours extends Component {\n    static propTypes = {\n        hours: PropTypes.object.isRequired,\n        onReload: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            nameProject: \"\",\n            nameTask: \"\"\n        };\n\n        this.deleteHoursById = this.deleteHoursById.bind(this);\n    }\n\n    deleteHoursById(){\n        let url = 'https://squad6-backend.herokuapp.com/hours/' + this.props.hours.id;\n\n        swal({\n            title: \"Eliminar la hora\",\n            text: \"¿Estás seguro que desea eliminar \" + this.props.hours.getHoursAsString() + \" horas del \" + this.props.hours.getDateAsString() + \"?\",\n            icon: \"warning\",\n            dangerMode: \"true\",\n            buttons: [\"Si\", \"No\"]\n        }).then(answerIsNo=>{\n            if(!answerIsNo){\n\n                this.setState({isLoading: true});\n\n                fetch(url, {\n                    method: 'DELETE'}).then(() => {\n                    swal({text: \"Se borraron \" + this.props.hours.getHoursAsString() + \" horas del \" + this.props.hours.getDateAsString() + \" con éxito.\" ,\n                        icon: \"success\"});\n                    this.setState({isLoading: false});\n                    this.props.onReload();\n                })\n            }\n        });\n    }\n    \n    componentDidMount() {\n\n        let url = 'https://proyectopsa.herokuapp.com/proyectos/' +\n                   this.props.hours.idProject.toString() + '/tarea/' +\n                   this.props.hours.idTask.toString();\n\n        fetch(url)\n            .then(r => r.json())\n            .then((taskByProject) =>\n            {\n\n                let nameTask = \"-\",\n                    nameProject = \"-\";\n\n                if (taskByProject.tarea != null){\n                    nameTask = taskByProject.tarea.nombre;\n                    nameProject = taskByProject.tarea.nombreProyecto;\n                }\n\n                this.setState({\n                    isLoading: false,\n                    nameProject: nameProject,\n                    nameTask: nameTask\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render(){\n        return (\n\n            this.state.isLoading ?\n                    <tr>\n                        <td colSpan={7}>\n                            <Loader\n                                type=\"TailSpin\"\n                                color=\"#00BFFF\"\n                                height={15}\n                                width={15}></Loader>\n                        </td>\n                    </tr>\n                :\n                    <tr>\n                        <td>{this.state.nameProject}</td>\n                        <td>{this.state.nameTask}</td>\n                        <td>{this.props.hours.getDateAsString()}</td>\n                        <td>{this.props.hours.quantityHours}</td>\n                        <td>{this.props.hours.quantityMinutes}</td>\n                        <td>\n                            <ModalModifyHours hours={this.props.hours} onReload={this.props.onReload}> </ModalModifyHours>\n                        </td>\n                        <td>\n                            <button type=\"button\" className=\"btn btn-sm btn-rounded\" onClick = {this.deleteHoursById} style={{marginTop: \"-7px\", color: \"red\"}}>\n                                <FaTrashAlt/>\n                            </button>\n                        </td>\n                    </tr>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {Button, Table, Row, Col, Card, CardBody, Container, CardHeader, ButtonToolbar} from 'reactstrap';\nimport HoursModel from \"../../models/CargaDeHoras/HoursModel\";\nimport GridItemHours from \"./GridItemHours\";\nimport ModalHours from \"./ModalHours\";\nimport Loader from \"react-loader-spinner\";\nimport PropTypes from \"prop-types\";\n\nexport default class GridHours extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            lstHours: []\n        };\n\n        this.onReloadGrid = this.onReloadGrid.bind(this);\n    }\n\n    componentDidMount() {\n\n        fetch('https://squad6-backend.herokuapp.com/hoursFile/' + this.props.file.toString())\n            .then(r => r.json())\n            .then((hoursByFile) =>\n            {\n                let lstHoursModel = [];\n\n                hoursByFile.forEach(x => {\n                    let model = new HoursModel();\n\n                    model.id = x.id;\n                    model.file = x.file;\n                    model.idProject = x.idProject;\n                    model.idTask = x.idTask;\n                    model.quantityHours = x.quantityHours;\n                    model.quantityMinutes = x.quantityMinutes;\n                    model.date = x.date;\n                    model.loadingDate = x.loadingDate;\n\n                    lstHoursModel.push(model);\n                });\n\n                lstHoursModel.sort((a, b) => a.date < b.date ? 1 : -1);\n                this.setState({\n                    isLoading: false,\n                    lstHours: lstHoursModel\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    onReloadGrid(){\n        fetch('https://squad6-backend.herokuapp.com/hoursFile/' + this.props.file.toString())\n            .then(r => r.json())\n            .then((hoursByFile) =>\n            {\n                let lstHoursModel = [];\n\n                hoursByFile.forEach(x => {\n                    let model = new HoursModel();\n\n                    model.id = x.id;\n                    model.file = x.file;\n                    model.idProject = x.idProject;\n                    model.idTask = x.idTask;\n                    model.quantityHours = x.quantityHours;\n                    model.quantityMinutes = x.quantityMinutes;\n                    model.date = x.date;\n                    model.loadingDate = x.loadingDate;\n\n                    lstHoursModel.push(model);\n                });\n\n                lstHoursModel.sort((a, b) => a.date < b.date ? 1 : -1);\n                this.setState({\n                    isLoading: false,\n                    lstHours: lstHoursModel\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render(){\n        return (\n            <div>\n                <Card>\n\n                    <CardHeader tag=\"h2\" style={{display: \"flex\"}}>\n                        <Col xl={10} style={{paddingLeft: \"12%\"}}>\n                            Horas Cargadas\n                        </Col>\n\n                        <Col xl={2}>\n                            <ModalHours file={this.props.file} onReload={this.onReloadGrid}></ModalHours>\n                        </Col>\n                    </CardHeader>\n\n                    <CardBody>\n                        <Container>\n\n                            {this.state.isLoading ?\n                                <Col className=\"text-center\">\n                                    <Loader\n                                        type=\"TailSpin\"\n                                        color=\"#00BFFF\"\n                                        height={50}\n                                        width={50}></Loader>\n                                </Col>\n                            :\n                                this.state.lstHours.length ?\n                                    <Table striped hover size=\"sm\">\n                                        <thead>\n                                        <tr>\n                                            <th>Proyecto</th>\n                                            <th>Tarea</th>\n                                            <th>Fecha</th>\n                                            <th>Horas</th>\n                                            <th>Minutos</th>\n                                            <th>Modificar</th>\n                                            <th>Eliminar</th>\n                                        </tr>\n                                        </thead>\n\n                                        <tbody>\n                                        {this.state.lstHours.map((h) =>\n                                            <GridItemHours key={h.id} hours={h} onReload={this.onReloadGrid}></GridItemHours>\n                                        )}\n                                        </tbody>\n                                    </Table>\n                                    :\n                                    <h4>El recurso no posee horas cargadas.</h4>\n                            }\n                        </Container>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {\n    Breadcrumb, BreadcrumbItem, Card, CardImg, CardText, CardBody, CardHeader, CardTitle,\n    CardSubtitle, Button, Label, ButtonToolbar, Row, Col, Container, Badge\n} from 'reactstrap';\nimport ModalHours from '../../components/CargaDeHoras/ModalHours';\nimport {Link} from \"react-router-dom\";\nimport GridHours from \"../../components/CargaDeHoras/GridHours\";\nimport Loader from \"react-loader-spinner\";\n\nexport default class CargaDeHorasPage extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            resource: { },\n            isLoading: true,\n            lstHours: []\n        };\n    }\n\n    componentDidMount()\n    {\n        const id = this.props.match.params.id;\n        fetch(`https://squad6-backend.herokuapp.com/resources/${id}`)\n            .then(r => r.json())\n            .then((resource) =>\n            {\n                this.setState({\n                    isLoading: false,\n                    resource: resource\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render() {\n        return (\n            <div style={{padding: 10 + 'px'}}>\n                <Row>\n                    <Col xl={12} lg={12}>\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem><Link to=\"/recursos\">Recursos</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{this.state.resource.Nombre} {this.state.resource.Apellido}</BreadcrumbItem>\n                        </Breadcrumb>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={4} lg={4}> \n                        <Card>\n                            <CardHeader tag=\"h4\">Datos Principales</CardHeader>\n\n                            <CardBody>\n                                <Container>\n\n                                    {this.state.isLoading ?\n                                        <Row>\n                                            <Col className=\"text-center\">\n                                                <Loader\n                                                    type=\"TailSpin\"\n                                                    color=\"#00BFFF\"\n                                                    height={50}\n                                                    width={50}></Loader>\n                                            </Col>\n                                        </Row>\n\n                                        :\n                                        <Row>\n                                            <Col xl={4} lg={4}>\n                                                <CardTitle tag=\"h6\">Legajo</CardTitle>\n                                                <CardText>{this.state.resource.legajo}</CardText>\n                                            </Col>\n\n                                            <Col xl={4} lg={4}>\n                                                <CardTitle tag=\"h6\">Nombre</CardTitle>\n                                                <CardText>{this.state.resource.Nombre}</CardText>\n                                            </Col>\n\n                                            <Col xl={4} lg={4}>\n                                                <CardTitle tag=\"h6\">Apellido</CardTitle>\n                                                <CardText>{this.state.resource.Apellido}</CardText>\n                                            </Col>\n\n                                        </Row>\n                                    }\n                                </Container>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n                    <Col xl={8} lg={8}>\n                        <GridHours file={this.props.match.params.id}></GridHours>\n                    </Col>\n\n                </Row>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button, Col, Row, Container, Badge\n} from 'reactstrap';\n\nexport default function ProyectoCard (props)\n{\n    const estadoString = props.project.estado.charAt(0).toUpperCase() + props.project.estado.slice(1);\n    const estadoColor = \"success\";\n    return (\n        <div>\n            <Card>\n                <CardBody>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <CardTitle tag=\"h4\">{props.project.nombre}</CardTitle>\n                            </Col>\n                            <Col>\n                                <h4><Badge color={estadoColor}>{estadoString}</Badge></h4>\n                            </Col>\n                            <Col>\n                                <CardText>{props.project.descripcion}</CardText>\n                            </Col>\n                            <Col>\n                            </Col>\n                            <Col body className=\"text-center\">\n                                <Link to={`/proyectos/${props.project.codigo}/tareas`}>\n                                <Button color=\"info\">Ver Tareas</Button>\n                                </Link>\n                            </Col>\n                        </Row>\n                    </Container>\n                </CardBody>\n            </Card>\n            <br />\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport ProyectoCard from '../../components/Proyectos/ProyectoCard';\nimport './MainProyectosPage.css';\nimport { Button } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\n\nexport default class MainProyectosPage extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            projects: []\n        }\n    }\n\n    componentDidMount()\n    {\n        fetch('https://proyectopsa.herokuapp.com/proyectos/')\n            .then(r => r.json())\n            .then((projects) =>\n            {\n                this.setState({\n                    projects: projects\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render()\n    {\n        return  (<div className='paginaProyectos'>\n                    <h1 id='tituloProyectos'>Proyectos</h1>\n                    <br/>\n                    <div id='titlesContainer'>\n                        <p>Nombre Proyecto</p>\n                        <p id=\"estadoTitle\">Estado</p>\n                        <NavLink to=\"/nuevoProyecto\" className=\"botonAgregarProyectoContainer\">Agregar Proyecto</NavLink>\n                    </div>\n                    <br />\n                    {this.state.projects.map((p) => <ProyectoCard key={p.codigo} project={p} />)}\n                </div>);\n        \n    }\n}\n","import React, { Component } from 'react'\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\nimport './AgregarProyectoPage.css';\n\nclass AgregarProyectoPage extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            modalHeader: null,\n            modalBody: null,\n            modalOnClose: null,\n            modal: false,\n        }\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n    crearProyecto(){\n\n        let url = \"https://proyectopsa.herokuapp.com/proyectos/\";\n\n        let nombreProyecto = document.getElementById(\"nombreProyecto\").value;\n        let fechaInicio = document.getElementById(\"fechaInicio\").value;\n        let descripcion = document.getElementById(\"descripcion\").value;\n        let fechaFin = document.getElementById(\"fechaFin\").value;\n        let horas = document.getElementById(\"horas\").value;\n        let presupuesto = document.getElementById(\"presupuesto\").value;\n\n        if (!this.validateRequiredEntries(nombreProyecto, fechaInicio, descripcion)) return;\n\n        let estado = this.obtenerEstado();\n\n        let data = {\n            \"nombre\": nombreProyecto,\n            \"fechaInicio\": fechaInicio,\n            \"fechaFin\": fechaFin == '' ? undefined : fechaFin,\n            \"estado\": estado == null ? undefined : estado ,\n            \"horas\": horas == \"\" ? undefined : parseInt(horas) ,\n            \"presupuesto\": presupuesto == '' ? undefined : parseInt(presupuesto),\n            \"descripcion\": descripcion\n        };\n        \n        let self = this;\n\n        fetch(url, {\n            method: 'POST', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n            .then(response => response.json())\n            .then(function(json) {\n                if(json.codigo) {\n                    self.abrirModal(\"ÉXITO\", `El proyecto se generó exitosamente con código: ${json.codigo}`, () => self.props.history.push(`/proyectos/`));\n                } else {\n                    self.abrirModal(\"ERROR\", json.description +  json.validation, () => {});\n                }\n            })\n            .catch(function(error) {\n                self.abrirModal(\"ERROR\", error.message, () => {})\n            });\n    }\n\n    abrirModal(header, body, onClose){\n        this.setState({\n            modalHeader: header,\n            modalBody: body,\n            modalOnClose: onClose,\n            modal: true,\n        })\n    }\n\n    obtenerEstado(){\n        if (document.getElementById(\"iniciado\").checked) return 'iniciado';\n        if (document.getElementById(\"enProceso\").checked) return 'en proceso';\n        if (document.getElementById(\"finalizado\").checked) return 'finalizado';\n    }\n\n    validateRequiredEntries(nombreProyecto, fechaInicio, descripcion){\n        let valid = true;\n        let nombreClassList = document.getElementById(\"nombre\").classList;\n        let fechaClassList = document.getElementById(\"startDate\").classList;\n        let descClassList = document.getElementById(\"desc\").classList;\n        \n        valid = this.validate(nombreProyecto, nombreClassList);\n        valid = this.validate(fechaInicio, fechaClassList);\n        valid = this.validate(descripcion, descClassList);\n        return valid;\n    }\n\n    validate(element, classList){\n        let valid = true;\n\n        if (element == ''){\n            classList.add(\"incorrect\");\n            valid = false;\n        } else {\n            classList.remove(\"incorrect\");\n        }\n\n        return valid;\n    }\n\n    render() {\n        let self = this;\n        const toggleModal = () =>self.setState({modal:!self.state.modal});\n\n        return (\n            <div>\n                <div className='formContainer'>\n                    <Form>\n                        <FormGroup>\n                            <Label className='parametro' for=\"nombreProyecto\" id='nombre'>Nombre Proyecto *</Label>\n                            <Input type=\"string\" name=\"nombreProyecto\" id=\"nombreProyecto\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaInicio\" id='startDate'>Fecha Inicio *</Label>\n                            <Input type=\"date\" name=\"fechaInicio\" id=\"fechaInicio\" className='general fecha' required/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaFin\" >Fecha Fin</Label>\n                            <Input type=\"date\" name=\"fechaFin\" id=\"fechaFin\" className='general fecha' />\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\">\n                            <Label className='parametro'>Estado</Label>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='iniciado'  />{' '}\n                                    Iniciado\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='enProceso' />{' '}\n                                    En Proceso\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check >\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='finalizado'  />{' '}\n                                    Finalizado\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"horas\">Horas</Label>\n                            <Input type=\"number\" name=\"horas\" id=\"horas\" className='general' />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"presupuesto\" >Presupuesto</Label>\n                            <Input type=\"number\" name=\"presupuesto\" id=\"presupuesto\" className='general' />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"descripcion\" id='desc'>Descripción *</Label>\n                            <Input type=\"textarea\" name=\"descripcion\" id=\"descripcion\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <Button onClick={() => this.crearProyecto()}>Crear Proyecto</Button>\n                    </Form>\n                    <label id='requisitosLabel'>(*) para aquellos campos que sean requeridos obligatoriamente</label>\n                </div>\n                <Modal isOpen={this.state.modal} toggle={toggleModal} className='popupError' onClosed={this.state.modalOnClose}>\n                    <ModalHeader toggle={toggleModal}>{this.state.modalHeader}</ModalHeader>\n                    <ModalBody>\n                        {this.state.modalBody}\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AgregarProyectoPage);","import React, { Component } from 'react'\nimport {Button, Table, Row, Col, Card, CardBody, Container, CardHeader, Breadcrumb, BreadcrumbItem} from 'reactstrap';\nimport HoursModel from \"../../models/CargaDeHoras/HoursModel\";\nimport { FaRegHandPointer } from 'react-icons/fa'\nimport {Link} from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\n\nexport default class RecursosPage extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            lstResources: []\n        };\n    }\n\n    componentDidMount()\n    {\n        fetch('https://squad6-backend.herokuapp.com/resources')\n            .then(r => r.json())\n            .then((resources) =>\n            {\n                this.setState({\n                    isLoading: false,\n                    lstResources: resources\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render() {\n        return (\n            <div className=\"block\" style={{padding: 10 + 'px'}}>\n\n                <Row>\n                    <Col xl={12} lg={12}>\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Recursos</BreadcrumbItem>\n                        </Breadcrumb>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={{size: 6, offset: 3}}>\n                        <Card>\n                            <CardHeader tag=\"h2\">Recursos</CardHeader>\n\n                            <CardBody>\n                                <Container>\n\n                                    {this.state.isLoading ?\n                                        <Row>\n                                            <Col className=\"text-center\">\n                                                <Loader\n                                                    type=\"TailSpin\"\n                                                    color=\"#00BFFF\"\n                                                    height={50}\n                                                    width={50}></Loader>\n                                            </Col>\n                                        </Row>\n                                        :\n                                        <Row>\n                                            <Col>\n                                                <Table striped>\n                                                    <thead>\n                                                    <tr>\n                                                        <th>Legajo</th>\n                                                        <th>Nombre</th>\n                                                        <th>Apellido</th>\n                                                        <th>Seleccionar</th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n\n                                                    {this.state.lstResources.map((r) =>\n                                                        <tr key={r.legajo}>\n                                                            <td>{r.legajo}</td>\n                                                            <td>{r.Nombre}</td>\n                                                            <td>{r.Apellido}</td>\n                                                            <td>\n                                                                <Link to={`/cargadehoras/${r.legajo}`}>\n                                                                    <button type=\"button\" className=\"btn btn-sm btn-rounded \">\n                                                                        <FaRegHandPointer/>\n                                                                    </button>\n                                                                </Link>\n\n                                                            </td>\n                                                        </tr>\n\n                                                    )}\n                                                    </tbody>\n                                                </Table>\n                                            </Col>\n                                        </Row>\n                                    }\n\n\n                                </Container>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Row, Card, CardBody, CardTitle, CardText, Button,  Col } from 'reactstrap';\nimport {Form, FormGroup, Label, Input } from 'reactstrap';\nimport './TareaPage.css';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\n\n\nclass TareaPage extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            tarea: [],\n            modal: false,\n            errorModal: false,\n            modalBody: null,\n            modalHeader: null,\n            acceptModalButton: null,\n            errorMessage: \"\",\n            prioridad: \"\",\n            estado: \"\",\n            codigoRecurso: \"\",\n            fechaFin: \"\",\n            recursosXhoras: [],\n        }\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n    asignarRecurso(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"codigoRecurso\" id=\"codigoRecursoLabel\">Código Recurso:</Label>\n                        <Input type=\"number\" name=\"codigoRecurso\" id=\"codigoRecurso\" />\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n        this.abrirModal(\n            \"Asignar Recurso\",\n            content,\n            () => {\n                let codigoRecurso = document.getElementById(\"codigoRecurso\").value;\n                if (!self.validateInputText(codigoRecurso, \"codigoRecursoLabel\")) return;\n\n                self.validateRecursoAndAct(codigoRecurso);\n            }\n        )\n    }\n\n    validateRecursoAndAct(codigoRecurso){\n        let self = this;\n        fetch(`https://squad6-backend.herokuapp.com/resources/${codigoRecurso}`)\n            .then(r => r.json())\n            .then(function(json) {\n                if(json.Nombre) {\n                    self.props.history.push(\"/cargadehoras/\" + codigoRecurso)\n                    this.setState({modal:false});\n                } else {\n                    console.log(json)\n                    self.setState({\n                        errorMessage: \"ERROR: \" + json.description +  json.validation + \" Verificar que sea un recurso válido\",\n                        errorModal: true,\n            \n                    })\n                }\n            })\n            .catch(function(error) {\n                self.setState({\n                    errorMessage: \"ERROR: \" + error.message,\n                    errorModal: true,\n                })\n            });\n    }\n\n    modificarPrioridad(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup tag=\"fieldset\">\n                        <Label className='parametro' id='priorityLabel'>Prioridad</Label>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio2' id='bajaTarea'  />{' '}\n                                Baja\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio2' id='mediaTarea' />{' '}\n                                Media\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check >\n                            <Label check>\n                                <Input type=\"radio\" name='radio2' id='altaTarea'  />{' '}\n                                Alta\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n        this.abrirModal(\n            \"Modificar Prioridad\",\n            content,\n            () => {\n                if (!self.validarRadio([\"bajaTarea\", \"mediaTarea\", \"altaTarea\"], \"priorityLabel\")) return;\n                    let prioridad = self.obtenerRadio(\"bajaTarea\", \"mediaTarea\", \"altaTarea\", \n                                                            \"baja\", \"media\", \"alta\");\n                    self.patch({\n                        \"prioridad\":prioridad\n                    });\n                    \n                    self.setState({modal:false});\n\n            }\n        )\n    }\n\n    modificarFechaFinal(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"fechaFinal\" id=\"fechaFinalLabel\" >Fecha Fin:</Label>\n                        <Input type=\"date\" name=\"fechaFinal\" id=\"fechaFinal\"/>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n\n        this.abrirModal(\n            \"Modificar Fecha Final\",\n            content,\n            () => {\n                let fechaFinal = document.getElementById(\"fechaFinal\").value;\n                if(!self.validateInputText(fechaFinal, \"fechaFinalLabel\")) return;\n                \n                self.patch({\n                    \"fechaFin\":fechaFinal\n                });\n\n                self.setState({modal:false});\n            }\n        )\n    }\n\n    modificarEstado(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup tag=\"fieldset\">\n                        <Label id=\"estadoLabel\">Estado</Label>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio' id='iniciadoTarea'  />{' '}\n                                Iniciado\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio' id='enProcesoTarea' />{' '}\n                                En Proceso\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check >\n                            <Label check>\n                                <Input type=\"radio\" name='radio' id='finalizadoTarea'  />{' '}\n                                Finalizado\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n        this.abrirModal(\n            \"Modificar Estado\",\n            content,\n            () => {\n                if (!self.validarRadio([\"iniciadoTarea\", \"enProcesoTarea\", \"finalizadoTarea\"], \"estadoLabel\")) return;\n                let estado = self.obtenerRadio(\"iniciadoTarea\", \"enProcesoTarea\", \"finalizadoTarea\", \n                                                      \"iniciado\", \"en proceso\", \"finalizado\");\n                self.patch({\n                    \"estado\":estado\n                });\n\n                self.setState({modal:false});\n            }\n        )\n    }\n    \n    patch(data, url){\n        if (url == null) {\n            url = `https://proyectopsa.herokuapp.com/proyectos/${this.state.tarea.proyectoID}/tarea/${this.state.tarea.codigo}`;\n        }\n        let self = this;\n        fetch(url, {\n            method: 'PATCH', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n          .then(response => response.json())\n          .then(function(json) {\n              if(json.codigo) {\n                  self.setState(data);\n                  return;\n              } else {\n                    self.setState({\n                        errorMessage : json.descripcion + json.validation,\n                        errorModal: true,\n                    })\n              }\n          })\n          .catch(function(error) {\n                self.setState({\n                    errorMessage : error.message,\n                    errorModal: true,\n                })\n          });\n    }\n\n\n    obtenerRadio(radio1, radio2, radio3, result1, result2, result3){\n        if (document.getElementById(radio1).checked) return result1;\n        if (document.getElementById(radio2).checked) return result2;\n        if (document.getElementById(radio3).checked) return result3;\n    }\n\n    validarRadio(elements, labelID){\n        let labelClassList = document.getElementById(labelID).classList;\n\n        let primero = document.getElementById(elements[0]);\n        let segundo = document.getElementById(elements[1]);\n        let tercero = document.getElementById(elements[2]);\n\n        if (!primero.checked && !segundo.checked && !tercero.checked){\n            labelClassList.add(\"incorrect\");\n            return false\n        } else {\n            labelClassList.remove(\"incorrect\");\n        }\n\n        return true\n    }\n\n    \n    validateInputText(value, classListId){\n        if (value == null || value == ''){\n            let label = document.getElementById(classListId);\n            label.classList.add(\"incorrect\");\n            \n            return false;\n        }\n        return true;\n    }\n\n    abrirModal(header, body, acceptButton){\n        this.setState({\n            modalHeader: header,\n            modalBody: body,\n            acceptModalButton: acceptButton,\n            modal: true,\n        })\n    }\n\n    componentDidMount(){\n        this.tareaID = this.props.match.params.idtarea;\n        this.proyectoID = this.props.match.params.id;\n\n        this.obtenerTareas();\n        this.obtenerRecursosPorTarea();\n    }\n\n    obtenerRecursosPorTarea(){\n        let self = this;\n        fetch(`https://squad6-backend.herokuapp.com/hours`)\n            .then(r => r.json())\n            .then((horas) => {\n                self.obtenerHorasDeTarea(horas)\n            })\n    }\n\n    obtenerHorasDeTarea(horas){\n        for(let hora in horas){\n            if(horas[hora].idProject == this.proyectoID && horas[hora].idTask == this.tareaID){\n                \n                fetch(`https://squad6-backend.herokuapp.com/resources/${horas[hora].file}`)\n                    .then(r => r.json())\n                    .then((recurso) => {\n                        this.setState({\n                            recursosXhoras: [...this.state.recursosXhoras, {\n                                nombre: recurso.Nombre + \" \" + recurso.Apellido,\n                                codigo: horas[hora].file,\n                                horas: horas[hora].quantityHours +  horas[hora].quantityMinutes == 0 ? \"\" : \":\" + horas[hora].quantityMinutes\n                            }]\n                        })\n                    })\n            }\n        }\n    }\n\n    obtenerTareas(){\n        fetch(`https://proyectopsa.herokuapp.com/proyectos/${this.proyectoID}/tarea/${this.tareaID}`)\n            .then(r => r.json())\n            .then((tarea) =>\n            {\n                let trueTarea = tarea['tarea'];\n                this.setState({\n                    tarea: trueTarea,\n                    prioridad: trueTarea.prioridad,\n                    estado: trueTarea.estado,\n                    fechaFin: trueTarea.fechaFin,\n                    codigoRecurso: trueTarea.codigoRecurso,\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    noResources(){\n        if(this.state.recursosXhoras.length == 0){\n            return <div id=\"sinAsignados\">\n                No hay recursos asignados a esta tarea.\n            </div>                          \n        }\n    }\n\n    render() {\n        const tarea = this.state.tarea;\n        let self = this;\n        const toggleModal = () =>self.setState({modal:!self.state.modal});\n        const toggleErrorModal = () => self.setState({errorModal: !self.state.errorModal});\n        const closeBtn = <Button id=\"closebtn\" onClick={() => self.setState({errorModal:false})}> X </Button>\n        return (\n            <div id='paginaTareas'>\n                <div id='subheaderTarea'>\n                    <br/>\n                    <h1>{tarea.nombre}</h1>\n                </div>\n                <div id='cardsContainer'> \n                    <Row>\n                        <Col sm=\"6\">\n                            <div id='cardGeneral' className='card'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">General</CardTitle>\n                            \n                                <CardText><b>Descripción:</b> {tarea.descripcion}</CardText>\n                                <div id='infoCodigos'>\n                                    <p className='cardText'><b>Código Tarea:</b> {tarea.codigo}.</p>\n                                    <p className='cardText'><b>Código Proyecto:</b> {tarea.codigoProyecto}.</p>\n                                    <p className='cardText'><b>Nombre Proyecto:</b> {tarea.nombreProyecto}</p>\n                                </div>\n                                \n                                </Card>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"6\">\n                            <div id='cardRecursos' className='card cardsLeft cardsTop'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">Horas Asignadas A Recursos</CardTitle>\n                                <div id =\"recursosConHoras\">\n                                    {this.noResources()}\n                                    {this.state.recursosXhoras.map((p) => {\n                                        console.log(p)\n                                        return (<div className=\"recursosHoras\">\n                                                    <p id=\"codigoRecursoCard\"><b>Código Recurso:</b> {p.codigo} <b>Nombre Recurso:</b> {p.nombre} <b>Horas asignadas:</b> {p.horas}</p>\n                                                </div>\n                                        )})}\n                                </div> \n                                \n                                {/* <CardText id=\"recursosText\"><b>Código Recurso:</b> {this.state.codigoRecurso == null ? \"Ningún recurso asignado\" : tarea.codigoRecurso}</CardText> */}\n                                <Button id=\"recursosButton\" onClick={() => this.asignarRecurso()}>Asignar Horas a Recurso</Button>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col sm=\"6\">\n                            <div id='cardFechas' className='card cardsRight cardsTop'>\n                                <Card body>\n                                <CardTitle tag=\"h5\" className=\"cardTitle\">Fechas</CardTitle>\n                                <div id=\"fechasTareas\">\n                                    <CardText><b>Fecha Inicial:</b> {tarea.fechaInicio}</CardText>\n                                    <CardText><b>Fecha Final:</b> {this.state.fechaFin == null ? \"No hay fecha final\" : this.state.fechaFin}</CardText>\n                                </div>\n                                <Button id=\"fechaButton\" onClick={() => this.modificarFechaFinal()}>Modificar Fecha Final </Button>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col sm=\"6\">\n                            <div id='cardEstado' className='card cardsLeft'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">Estado</CardTitle>\n                                <CardText className={this.state.estado}>{this.state.estado}</CardText>\n                                <Button onClick={() => this.modificarEstado()}>Modificar Estado</Button>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col sm=\"6\">\n                            <div id='cardPrioridad' className='card cardsRight'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">Prioridad</CardTitle>\n                                <CardText className={this.state.prioridad + \" prioridadValue\"}>{this.state.prioridad}</CardText>\n                                <Button onClick={() => this.modificarPrioridad()}>Modificar Prioridad </Button>\n                                </Card>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n                <div id=\"modals\">\n                    <Modal isOpen={this.state.modal} toggle={toggleModal}>\n                        <ModalHeader toggle={toggleModal}>{this.state.modalHeader}</ModalHeader>\n                        <ModalBody>\n                            {this.state.modalBody}\n                        </ModalBody>\n                        <Button onClick={this.state.acceptModalButton} id=\"boton\">\n                            Aceptar\n                        </Button>\n                    </Modal>\n                    <Modal isOpen={this.state.errorModal} toggle={toggleErrorModal}>\n                        <ModalHeader toggle={toggleModal} close={closeBtn}>ERROR</ModalHeader>\n                        <ModalBody>\n                            {this.state.errorMessage}\n                        </ModalBody>\n                        <Button onClick={() => self.setState({errorModal:false})} id=\"boton\">\n                            Cancelar\n                        </Button>\n                    </Modal>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(TareaPage);\n","import React, { Component } from 'react'\n\nexport default class Soporte extends Component {\n    render() {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Route } from 'react-router';\nimport {Link} from \"react-router-dom\";\n\nexport default () => (\n    <header>\n        <nav>\n            <Link to='/'>Inicio</Link>\n            <br />\n            <Link to='/proyectos'>Proyectos</Link>\n            <br />\n            <Link to='/recursos'>Recursos</Link>\n            <br />\n            <Link to='/soporte'>Soporte</Link>\n            <br />\n        </nav>\n    </header>\n);","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport {\n    Card, CardText, CardBody,\n    CardTitle, Button, Col, Row, Container, Badge\n} from 'reactstrap';\n\nexport default function TareaCard (props)\n{\n    const estadoString = props.tarea.estado.charAt(0).toUpperCase() + props.tarea.estado.slice(1);\n    const estadoColor = \"success\";\n    return (\n        <div>\n            <Card>\n                <CardBody>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <CardTitle tag=\"h3\">{props.tarea.nombre}</CardTitle>\n                            </Col>\n                            <Col>\n                                <h4><Badge color={estadoColor}>Iniciado{/*estadoString*/}</Badge></h4>\n                            </Col>\n                            <Col>\n                                <CardText>{props.tarea.descripcion}</CardText>\n                            </Col>\n                            <Col>\n                            </Col>\n                            <Col body className=\"text-center\">\n                                <Link to={`/proyectos/${props.codigoProyecto}/tareas/${props.tarea.codigo}`}>\n                                    <Button color=\"info\">Ver Tarea</Button>\n                                </Link>\n                            </Col>\n                        </Row>\n                    </Container>\n                </CardBody>\n            </Card>\n            <br />\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport './MainTareasPage.css';\nimport { NavLink } from 'react-router-dom';\nimport TareaCard from \"../../components/Proyectos/TareaCard\";\n\n\nexport default class MainTareasPage extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            tareas: []\n        }\n    }\n\n    componentDidMount()\n    {\n        const id = this.props.match.params.id;\n        fetch(`https://proyectopsa.herokuapp.com/proyectos/${id}/tarea`)\n            .then(r => r.json())\n            .then((tareas) =>\n            {\n                this.setState({\n                    tareas: tareas\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render()\n    {\n        const id = this.props.match.params.id;\n        return  (<div className='paginaProyectos'>\n                    <div id=\"subheader\"> \n                        <h1 id=\"proyectoName\">Proyecto: {}</h1>\n                        <h2 id='tituloProyectos2'>Tareas</h2>\n                    </div>\n                    \n                    <br/>\n                    <div id='titlesContainer2'>\n                        <p>Nombre Tarea</p>\n                        <p id=\"estadoTitle2\">Estado</p>\n                        <NavLink to={`/proyectos/${id}/nuevaTarea`} className=\"botonAgregarProyectoContainer\">Agregar Tarea</NavLink>\n                    </div>\n                    <br />\n                    {this.state.tareas.map((t) => <TareaCard key={t.codigo} codigoProyecto={id} tarea={t} />)}\n                </div>);\n        \n    }\n}\n","\nimport React, { Component } from 'react'\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\nimport './AgregarProyectoPage.css';\n\nclass AgregarTareaPage extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            modalHeader: null,\n            modalBody: null,\n            modalOnClose: null,\n            modal: false,\n        }\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n\n    crearTarea(){\n\n        let url = `https://proyectopsa.herokuapp.com/proyectos/${this.id}/tarea/`;\n\n        let nombreTarea = document.getElementById(\"nombreTarea\").value;\n        let fechaInicio = document.getElementById(\"fechaInicio\").value;\n        let descripcion = document.getElementById(\"descripcion\").value;\n        let fechaFin = document.getElementById(\"fechaFin\").value;\n        let prioridad = this.obtenerRadio(\"baja\", \"media\", \"alta\");\n\n        if (!this.validateRequiredEntries(nombreTarea, fechaInicio, prioridad)) return;\n\n        let estado = this.obtenerRadio(\"iniciado\", \"enProceso\", \"finalizado\", \"en proceso\");\n\n        let data = {\n            \"nombre\": nombreTarea,\n            \"fechaInicio\": fechaInicio,\n            \"prioridad\": prioridad,\n            \"fechaFin\": fechaFin == '' ? undefined : fechaFin,\n            \"estado\": estado == null ? undefined : estado ,\n            \"descripcion\": descripcion\n        };\n        \n        let self = this;\n\n        fetch(url, {\n            method: 'POST', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n            .then(response => response.json())\n            .then(function(json) {\n                if(json.codigo) {\n                    self.abrirModal(\"ÉXITO\", `La tarea se generó exitosamente con código: ${json.codigo}`, () => self.props.history.push(`/proyectos/${self.id}/tareas`));\n                } else {\n                    self.abrirModal(\"ERROR DE LA REQUEST\", json.description + json.validation, () => {});\n                }\n            })\n            .catch(function(error) {\n                self.abrirModal(\"ERROR DEL FETCH\", error.message)\n            });\n    }\n    \n    componentDidMount(){\n        this.id = this.props.match.params.id;\n    }\n\n    abrirModal(header, body, onClose){\n        this.setState({\n            modalHeader: header,\n            modalBody: body,\n            modalOnClose: onClose,\n            modal: true,\n        })\n    }\n\n    obtenerRadio(radio1, radio2, radio3, differ=null){\n        if (document.getElementById(radio1).checked) return radio1;\n        if (document.getElementById(radio2).checked) return differ == null ? radio2 : differ;\n        if (document.getElementById(radio3).checked) return radio3;\n    }\n\n    validateRequiredEntries(nombreTarea, fechaInicio, prioridad){\n        let valid = true;\n        let nombreClassList = document.getElementById(\"nombre\").classList;\n        let fechaClassList = document.getElementById(\"startDate\").classList;\n        let prioridadClassList = document.getElementById(\"priority\").classList;\n\n        \n        valid = this.validate(nombreTarea, nombreClassList);\n        valid = this.validate(fechaInicio, fechaClassList);\n        valid = this.validatePriority(prioridadClassList);\n        \n        return valid;\n    }\n\n    validatePriority(classList){\n\n        let baja = document.getElementById(\"baja\");\n        let media = document.getElementById(\"media\");\n        let alta = document.getElementById(\"alta\");\n\n        if (!baja.checked && !media.checked && !alta.checked){\n            classList.add(\"incorrect\");\n            return false\n        } else {\n            classList.remove(\"incorrect\");\n        }\n\n        return true\n    }\n\n    validate(element, classList){\n\n        if (element == ''){\n            classList.add(\"incorrect\");\n            return false;\n        } else {\n            classList.remove(\"incorrect\");\n        }\n\n        return true;\n    }\n\n    render() {\n        let self = this;\n        const toggleModal = () =>self.setState({modal:!self.state.modal});\n\n        return (\n            <div>\n                <div className='formContainer'>\n                    <Form>\n                        <FormGroup>\n                            <Label className='parametro' for=\"nombreTarea\" id='nombre'>Nombre Tarea *</Label>\n                            <Input type=\"string\" name=\"nombreTarea\" id=\"nombreTarea\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaInicio\" id='startDate'>Fecha Inicio *</Label>\n                            <Input type=\"date\" name=\"fechaInicio\" id=\"fechaInicio\" className='general fecha' required/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaFin\" >Fecha Fin</Label>\n                            <Input type=\"date\" name=\"fechaFin\" id=\"fechaFin\" className='general fecha' />\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\">\n                            <Label className='parametro'>Estado</Label>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='iniciado'  />{' '}\n                                    Iniciado\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='enProceso' />{' '}\n                                    En Proceso\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check >\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='finalizado'  />{' '}\n                                    Finalizado\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\">\n                            <Label className='parametro' id='priority'>Prioridad *</Label>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio2' id='baja'  />{' '}\n                                    Baja\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio2' id='media' />{' '}\n                                    Media\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check >\n                                <Label check>\n                                    <Input type=\"radio\" name='radio2' id='alta'  />{' '}\n                                    Alta\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"descripcion\" id='desc'>Descripción </Label>\n                            <Input type=\"textarea\" name=\"descripcion\" id=\"descripcion\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <Button onClick={() => this.crearTarea()}>Crear Tarea</Button>\n                    </Form>\n                    <label id='requisitosLabel'>(*) para aquellos campos que sean requeridos obligatoriamente</label>\n                </div>\n                <Modal isOpen={this.state.modal} toggle={toggleModal} className='popupError' onClosed={this.state.modalOnClose}>\n                    <ModalHeader toggle={toggleModal}>{this.state.modalHeader}</ModalHeader>\n                    <ModalBody>\n                        {this.state.modalBody}\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AgregarTareaPage);","import './App.css';\nimport React from \"react\";\nimport CargaDeHorasPage from '../pages/CargaDeHoras/CargaDeHorasPage';\nimport MainProyectosPage from '../pages/Proyectos/MainProyectosPage';\nimport AgregarProyectoPage from '../pages/Proyectos/AgregarProyectoPage';\nimport RecursosPage from './../pages/Recursos/RecursosPage';\nimport TareaPage from '../pages/Proyectos/TareaPage';\nimport Soporte from './../pages/Soporte';\nimport Main from './../pages/Main';\nimport {Route, Switch} from \"react-router\";\nimport { Col } from 'reactstrap';\nimport { useHistory} from \"react-router-dom\";\nimport MainTareasPage from \"../pages/Proyectos/MainTareasPage\";\nimport { FaHome } from \"react-icons/fa\";\nimport AgregarTareaPage from '../pages/Proyectos/AgregarTareaPage';\n\nfunction App(props) {\n    const history = useHistory();\n\n  return (\n    <div className=\"App\">\n        <header className=\"App-header-ppal\">\n            <div id='headerContainer' className=\"MuiToolbar-root MuiToolbar-root App-subheader-height MuiToolbar-gutters\">\n                <div id='homeButton' onClick={() => history.push('/')}>\n                    <Col xl={12} lg={12}> {/*????*/}\n                        <FaHome/> HOME\n                    </Col>\n                </div>\n                <div id='companyName'>\n                    <Col xl={12} lg={12}>\n                        PSA\n                    </Col>\n                </div>\n            </div>\n            \n        </header>\n\n        <main>\n            <Switch>\n                <Route exact path=\"/proyectos\" component={MainProyectosPage} />\n                <Route exact path=\"/nuevoProyecto\" component={AgregarProyectoPage}/>\n                <Route exact path=\"/proyectos/:id/tareas\" component={MainTareasPage} />\n                <Route exact path=\"/proyectos/:id/tareas/:idtarea\" component={TareaPage} />\n                <Route exact path=\"/\" component={Main} />\n                <Route exact path=\"/recursos\" component={RecursosPage} />\n                <Route exact path=\"/cargadehoras/:id\" component={CargaDeHorasPage} />\n                <Route exact path=\"/soporte\" component={Soporte} />\n                <Route exact path=\"/proyectos/:id/nuevaTarea\" component={AgregarTareaPage} />\n            </Switch>\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter  } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}