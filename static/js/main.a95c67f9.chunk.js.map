{"version":3,"sources":["models/CargaDeHoras/HoursModel.js","components/CargaDeHoras/ModalHours.js","components/CargaDeHoras/ModalModifyHours.js","components/CargaDeHoras/GridItemHours.js","components/CargaDeHoras/GridHours.js","pages/CargaDeHoras/CargaDeHorasPage.js","components/Proyectos/ModalAgregarProyecto.js","pages/Proyectos/MainProyectosPage.js","pages/Recursos/RecursosPage.js","components/Proyectos/ModalAsignarRecurso.js","pages/Proyectos/TareaPage.js","components/CargaDeTickets/ModalTickets.js","components/CargaDeTickets/ModalFilter.js","pages/Soporte/Soporte.js","components/CargaDeTickets/ModalEdit.js","components/CargaDeTickets/ModalTasks.js","pages/Soporte/DetalleTicket.js","pages/Main.js","components/Proyectos/ModalAgregarTarea.js","pages/Proyectos/MainTareasPage.js","components/App.js","index.js"],"names":["HoursModel","id","file","idProject","idTask","quantityHours","quantityMinutes","date","loadingDate","nameProject","nameTask","this","newIdProject","newIdTask","minutesAsString","hoursAsString","dateString","toString","year","substr","mont","days","hours","minutes","ModalHours","props","state","isShow","hoursModel","lstProjects","lstTasks","isTaskDisabled","taskIsLoading","errorMessage","saveHours","bind","changeVisibility","saveHoursWithEnter","setState","setIdProject","setIdTask","e","key","isFormValid","data","dateAsString","getDateAsString","getHoursAsString","self","swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","dangerMode","confirmButtonText","cancelButtonText","then","answer","isConfirmed","fetch","method","mode","headers","redirect","referrerPolicy","body","JSON","stringify","response","ok","Error","onReload","catch","error","newHours","setNewHours","parseInt","hour","minute","newDate","stringNewDate","replace","isNaN","completeData","r","json","projects","console","log","a","urlTask","getIdProject","tasks","shouldTaskDisabled","listTaskAsigned","forEach","x","url","codigo","oneTask","tarea","codigoRecurso","push","Button","color","onClick","Modal","isOpen","toggle","onKeyPress","ModalHeader","ModalBody","FormGroup","Label","Input","type","onChange","onProjectChange","target","value","map","p","nombre","Col","className","height","width","disabled","onTaskChange","t","Row","lg","theme","time","timeMode","timeConfig","from","to","step","unit","onTimeChange","max","Date","toISOString","split","onDateChange","check","row","sm","size","offset","Alert","Component","ModalModifyHours","hoursAux","saveHoursById","getListTasks","style","marginTop","GridItemHours","isLoading","deleteHoursById","reloadItem","fetchTaskAndProjectNames","taskByProject","nombreProyecto","colSpan","GridHours","lstHours","onReloadGrid","hoursByFile","lstHoursModel","model","sort","b","Card","CardHeader","tag","display","xl","paddingLeft","CardBody","Container","length","Table","striped","hover","h","CargaDeHorasPage","resource","match","params","padding","Breadcrumb","BreadcrumbItem","active","Nombre","Apellido","CardTitle","CardText","legajo","ModalAgregarProyecto","modalHeader","modalBody","modalOnClose","modal","modalTotal","document","getElementById","fechaInicio","descripcion","fechaFin","horas","presupuesto","validateRequiredEntries","estado","obtenerEstado","undefined","onClose","abrirModal","description","validation","message","header","checked","valid","nombreClassList","classList","fechaClassList","descClassList","validate","element","add","remove","toggleModal","toggleModalError","for","name","maxLength","required","min","crearProyecto","onClosed","withRouter","MainProyectosPage","loadProyectos","estadoString","charAt","toUpperCase","slice","badgeColor","getBadgeColor","Badge","RecursosPage","lstResources","resources","ModalAsignarRecurso","TareaPage","errorModal","acceptModalButton","prioridad","recurso","content","Form","validateInputText","patch","obtenerTareas","validarRadio","obtenerRadio","fechaFinal","proyectoID","radio1","radio2","radio3","result1","result2","result3","elements","labelID","labelClassList","primero","segundo","tercero","classListId","acceptButton","tareaID","idtarea","obtenerHorasDeTarea","hora","recursosXhoras","trueTarea","selfDelete","codigoProyecto","history","horasDelRecurso","index","deleteHora","defaultValue","setTimeout","obtenerRecursosPorTarea","closeBtn","editarNombreODescripcion","noResources","showResources","asignarRecurso","modificarFechaFinal","modificarEstado","modificarPrioridad","close","eliminarTarea","ModalTickets","priority","resource_id","saveTicket","saveTicketWithEnter","handleTypeChange","handlePriorityChange","handleDescriptionChange","handleSubmit","handleResourceChange","handleNameChange","Math","floor","random","event","ModalFilter","ticket_tasks","available_status","available_priorities","handleTaskCheckboxChange","isTaskChecked","tickets","i","status","Set","defaultChecked","Soporte","ButtonToolbar","ticket_original_data","handleStatusChange","task_id","getTasksToSave","splitted_url","window","location","href","request_data","ticket_id","checkAssignedProjects","j","arr","task_name","ref","modal_tasks","TicketDetail","editable","assignedTasks","ticket","creation_date","limit_date","resource_name","modal_edit","xs","styles","backgroundColor","borderColor","inverse","ModalAgregarTarea","nombreTarea","differ","prioridadClassList","validatePriority","baja","media","alta","crearTarea","MainTareasPage","tareas","loadTareas","proyecto","App","useHistory","exact","path","component","Main","ReactDOM","render","basename","process"],"mappings":"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","file":"static/js/main.a95c67f9.chunk.js","sourcesContent":["export default class HoursModel {\n\n    id = 0\n    file = 0\n    idProject = 0\n    idTask = 0\n    quantityHours = 0\n    quantityMinutes = 0\n    date = 0\n    loadingDate = 0\n    nameProject = \"\"\n    nameTask = \"\";\n\n    constructor(){\n        this.id = 0;\n        this.file = 0;\n        this.idProject = 0;\n        this.idTask = 0;\n        this.quantityHours = 0;\n        this.quantityMinutes = 15;\n        this.date = 0;\n        this.loadingDate = 0;\n        this.nameProject = \"\";\n        this.nameTask = \"\";\n    }\n\n    HoursModel(otherHours){\n        this.id = otherHours.id;\n        this.file = otherHours.file;\n        this.idProject = otherHours.idProject;\n        this.idTask = otherHours.idTask;\n        this.quantityHours = otherHours.quantityHours;\n        this.quantityMinutes = otherHours.quantityMinutes;\n        this.date = otherHours.date;\n        this.loadingDate = otherHours.loadingDate;\n        this.nameProject = otherHours.nameProject;\n        this.nameTask = otherHours.nameTask;\n    }\n\n    HoursModel(id, file, idProject, idTask, quantityHours, quantityMinutes, date, loadingDate, nameProject, nameTask){\n        this.id = id;\n        this.file = file;\n        this.idProject = idProject;\n        this.idTask = idTask;\n        this.quantityHours = quantityHours;\n        this.quantityMinutes = quantityMinutes;\n        this.date = date;\n        this.loadingDate = loadingDate;\n        this.nameProject = nameProject;\n        this.nameTask = nameTask;\n    }\n\n    getIdProject(){\n        return this.idProject;\n    }\n\n    setIdProject(newIdProject){\n        this.idProject = newIdProject;\n    }\n\n    getIdTask(){\n        return this.idTask;\n    }\n\n    setIdTask(newIdTask){\n        this.idTask = newIdTask;\n    }\n\n    getHoursAsString(){\n        var minutesAsString = this.quantityMinutes;\n        var hoursAsString = this.quantityHours;\n\n        if (minutesAsString == 0){\n            minutesAsString = \"00\";\n        }\n\n        if (hoursAsString < 10){\n            hoursAsString = \"0\"+hoursAsString;\n        }\n\n        return hoursAsString + \":\" + minutesAsString;\n    }\n\n    getDateAsString(){\n        let dateString = this.date.toString();\n\n        let year = dateString.substr(0,4),\n            mont = dateString.substr(4,2),\n            days = dateString.substr(6,2);\n\n        return `${days}/${mont}/${year}`;\n    }\n\n    setNewHours(hours, minutes){\n        this.quantityHours = hours;\n        this.quantityMinutes = minutes;\n    }\n\n    completeData(){\n        if ((this.idTask === 0) ||\n            ((this.quantityHours === 0) && (this.quantityMinutes === 0)) ||\n            (this.date === 0))\n            return false;\n\n        return true;\n    }\n}","import React, { Component } from 'react';\nimport { Alert, Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport TimePicker from 'react-times';\nimport HoursModel from '../../models/CargaDeHoras/HoursModel';\n\nimport 'react-times/css/classic/default.css';\nimport './ModalHours.css'\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport PropTypes from \"prop-types\";\nimport swal from \"sweetalert2\";\n\nexport default class ModalHours extends Component {\n\n    static propTypes = {\n        onReload: PropTypes.func.isRequired\n    };\n\n    constructor(props){\n        super(props);\n\n        let hours = new HoursModel();\n        hours.file = props.file;\n\n        this.state = {\n            isShow: false,\n            hoursModel: hours,\n            lstProjects: [],\n            lstTasks: [],\n            isTaskDisabled: true,\n            taskIsLoading: false,\n            errorMessage:\"\"\n        };\n\n        this.saveHours = this.saveHours.bind(this);\n        this.changeVisibility = this.changeVisibility.bind(this);\n\n        this.saveHoursWithEnter = this.saveHoursWithEnter.bind(this);\n    }\n\n    changeVisibility() {\n        this.setState({\n            isShow: !this.state.isShow,\n            errorMessage: \"\",\n            isTaskDisabled: true\n        });\n        \n        this.state.hoursModel.setIdProject(0);\n        this.state.hoursModel.setIdTask(0);\n        this.state.hoursModel.date = 0;\n    }\n\n    saveHoursWithEnter(e){\n        if(e.key === 'Enter'){\n            this.changeVisibility();\n        }\n    }\n\n    saveHours() {\n\n        if (!this.isFormValid()){\n            this.setState({\n                errorMessage: \"Por favor, complete todos los campos obligatorios\"\n            });\n            return;\n        }\n\n        let url = \"https://squad6-backend.herokuapp.com/hours\";\n\n        let data = {\n            file: this.state.hoursModel.file,\n            idProject: this.state.hoursModel.idProject,\n            idTask: this.state.hoursModel.idTask,\n            quantityHours: this.state.hoursModel.quantityHours,\n            quantityMinutes: this.state.hoursModel.quantityMinutes,\n            date: this.state.hoursModel.date\n        };\n\n        var dateAsString = this.state.hoursModel.getDateAsString();\n        var hoursAsString = this.state.hoursModel.getHoursAsString();\n\n        let self = this;\n\n        swal.fire({\n            title: 'Cargar horas',\n            text: \"¿Está seguro que desea agregar \" + hoursAsString + \" horas del \" + dateAsString + \"?\",\n            icon: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            dangerMode: 'true',\n            confirmButtonText: 'Confirmar',\n            cancelButtonText: 'Cancelar'\n        }).then(answer=>{\n            if(answer.isConfirmed){\n\n\n                fetch(url, {\n                    method: 'POST',\n                    mode: 'cors',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    redirect: 'follow',\n                    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n                    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n                })\n                    .then(function(response) {\n\n                        if(!response.ok)\n                            throw new Error();\n\n                        self.changeVisibility();\n                        self.props.onReload();\n                        swal.fire({\n                            title: \"Se agregaron \" + hoursAsString + \" horas del \" + dateAsString + \".\",\n                            icon: \"success\"\n                        })\n                    })\n                    .catch(function(error) {\n                        self.setState({\n                            errorMessage: \"No se puede cargar más de 24 horas un mismo día\"\n                        });\n                    });\n            }\n        });\n    }\n\n    onTimeChange(newHours) {\n        this.state.hoursModel.setNewHours(parseInt(newHours.hour), parseInt(newHours.minute));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    onDateChange(newDate){\n        var stringNewDate = newDate.replace(/-/gi, \"\");\n\n        if (isNaN(parseInt(stringNewDate))){\n            this.state.hoursModel.date = 0;\n            return;\n        }\n        this.state.hoursModel.date = parseInt(stringNewDate);\n    }\n\n    isFormValid(){\n        return this.state.hoursModel.completeData();\n    }\n\n    componentDidMount()\n    {\n        //https://proyectopsa.herokuapp.com/proyectos/\n        fetch('https://proyectopsa.herokuapp.com/proyectos/')\n            .then(r => r.json())\n            .then((projects) =>\n            {\n                this.setState({\n                    lstProjects: projects\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    async getListTasks(){\n\n        let urlTask = 'https://proyectopsa.herokuapp.com/proyectos/' + this.state.hoursModel.getIdProject() + '/tarea/';\n\n        fetch(urlTask)\n            .then(r => r.json())\n            .then((tasks) =>\n            {\n                this.setState({\n                    lstTasks: tasks\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    onProjectChange(newIdProject){\n\n        this.setState({taskIsLoading: true});\n\n        this.state.hoursModel.setIdProject(newIdProject);\n\n        let shouldTaskDisabled = (newIdProject == 0);\n\n        if (shouldTaskDisabled){\n            this.setState({\n                hoursModel: this.state.hoursModel,\n                lstTasks: [],\n                isTaskDisabled: shouldTaskDisabled,\n                taskIsLoading: false\n            });\n        } else {\n\n            let urlTask = 'https://proyectopsa.herokuapp.com/proyectos/' + this.state.hoursModel.getIdProject() + '/tarea/';\n\n            fetch(urlTask)\n                .then(r => r.json())\n                .then((tasks) =>\n                {\n                    var listTaskAsigned = [];\n\n                    tasks.forEach(x => {\n\n                        let url = 'https://proyectopsa.herokuapp.com/proyectos/' +\n                            newIdProject.toString() + '/tarea/' +\n                            x.codigo.toString();\n\n                        fetch(url)\n                            .then(r => r.json())\n                            .then((oneTask) =>\n                            {\n                                if (oneTask.tarea.codigoRecurso == this.state.hoursModel.file){\n                                    listTaskAsigned.push(oneTask.tarea);\n                                }\n\n                                this.setState({\n                                    hoursModel: this.state.hoursModel,\n                                    lstTasks: listTaskAsigned,\n                                    isTaskDisabled: false,\n                                    taskIsLoading: false\n                                });\n\n                            }, (error) => {console.log(error);});\n                    });\n\n                }, (error) => {console.log(error);});\n        }\n    }\n\n    onTaskChange(newIdTask){\n        this.state.hoursModel.setIdTask(parseInt(newIdTask));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    render(){\n\n        return (\n            <div>\n\n                <Button color=\"primary\" onClick={this.changeVisibility}>Nueva</Button>\n\n                <Modal isOpen={this.state.isShow}\n                       toggle={this.changeVisibility}\n                       onKeyPress={this.saveHoursWithEnter}>\n\n                    <ModalHeader toggle={this.changeVisibility}>Carga de Horas</ModalHeader>\n\n                    <ModalBody onKeyPress={this.saveHoursWithEnter}>\n                        <FormGroup>\n                            <Label>Proyecto *</Label>\n                            <Input type=\"select\"\n                                   onChange={e => this.onProjectChange(e.target.value)}>\n                                <option value=\"0\"></option>\n                                {this.state.lstProjects.map((p) => <option key={p.codigo} value={p.codigo}>{p.nombre}</option>)}\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Tarea *</Label>\n                            {\n                                this.state.taskIsLoading ?\n                                    <Col className=\"text-center\">\n                                        <Loader\n                                            type=\"TailSpin\"\n                                            color=\"#00BFFF\"\n                                            height={30}\n                                            width={30}></Loader>\n                                    </Col>\n                                    :\n                                    <Input type=\"select\"\n                                           disabled={this.state.isTaskDisabled}\n                                           onChange={e => this.onTaskChange(e.target.value)}>\n                                        <option value=\"0\"></option>\n                                        {this.state.lstTasks.map((t) => <option key={t.codigo} value={t.codigo}>{t.nombre}</option>)}\n                                    </Input>\n                            }\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Row>\n                                <Col lg={6}>\n                                    <Label>Cantidad de Horas *</Label>\n                                    <TimePicker\n                                        theme=\"classic\"\n                                        time={this.state.hoursModel.getHoursAsString()}\n                                        timeMode=\"24\"\n                                        timeConfig={{\n                                            from: '0:15',\n                                            to: '23:45',\n                                            step: 15,\n                                            unit: 'minutes'\n                                        }}\n                                        onTimeChange={this.onTimeChange.bind(this)}/>\n                                </Col>\n\n                                <Col lg={6}>\n                                    <Label>Fecha *</Label>\n                                    <Input type=\"date\"\n                                           max={(new Date().toISOString().split(\"T\")[0])}\n                                           onChange={e => this.onDateChange(e.target.value)}></Input>\n                                </Col>\n                            </Row>\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Col className=\"col-datos-oblig\">\n                                (*) Campos obligatorios\n                                <hr/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup check row>\n                            <Col sm={{ size: 10, offset: 9 }}>\n                                <Button color=\"primary\" onClick={this.saveHours}>Guardar</Button>\n                            </Col>\n                        </FormGroup>\n\n                        {this.state.errorMessage ? (\n                          <Alert id=\"alerta\" color=\"danger\"> {this.state.errorMessage} </Alert>\n                        ) : (\n                          null\n                        )}\n                    </ModalBody>\n\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Alert, Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport TimePicker from 'react-times';\nimport HoursModel from '../../models/CargaDeHoras/HoursModel';\n\nimport 'react-times/css/classic/default.css';\nimport './ModalHours.css'\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport PropTypes from \"prop-types\";\nimport swal from \"sweetalert2\";\n\nimport { FaPencilAlt } from \"react-icons/fa\";\n\nexport default class ModalModifyHours extends Component {\n\n    static propTypes = {\n        hours: PropTypes.object.isRequired,\n        onReload: PropTypes.func.isRequired,\n    };\n\n    constructor(props){\n        super(props);\n\n        let hoursAux = new HoursModel();\n        hoursAux.file = props.hours.file;\n\n        this.state = {\n            isShow: false,\n            hoursModel: hoursAux,\n            lstProjects: [],\n            lstTasks: [],\n            isTaskDisabled: false,\n            taskIsLoading: false,\n            errorMessage:\"\"\n        };\n\n        this.state.hoursModel.setIdProject(this.props.hours.idProject);\n        this.state.hoursModel.setIdTask(this.props.hours.idTask);\n        this.state.hoursModel.setNewHours(this.props.hours.quantityHours, this.props.hours.quantityMinutes);\n        this.state.hoursModel.date = this.props.hours.date;\n\n        this.saveHoursById = this.saveHoursById.bind(this);\n        this.changeVisibility = this.changeVisibility.bind(this);\n        this.saveHoursWithEnter = this.saveHoursWithEnter.bind(this);\n        this.getListTasks = this.getListTasks.bind(this);\n        this.getListTasks();\n    }\n\n    changeVisibility() {\n        this.setState({\n            isShow: !this.state.isShow,\n            errorMessage: \"\",\n        });\n    }\n\n    saveHoursWithEnter(e){\n        if(e.key === 'Enter'){\n            this.changeVisibility();\n        }\n    }\n\n    saveHoursById() {\n\n        if (!this.isFormValid()){\n            this.setState({\n                errorMessage: \"Por favor, complete todos los campos obligatorios\"\n            });\n            return;\n        }\n\n        let url = 'https://squad6-backend.herokuapp.com/hours/' + this.props.hours.id;\n\n        let data = {\n            id: this.props.hours.id,\n            file: this.props.hours.file,\n            idProject: this.state.hoursModel.idProject,\n            idTask: this.state.hoursModel.idTask,\n            quantityHours: this.state.hoursModel.quantityHours,\n            quantityMinutes: this.state.hoursModel.quantityMinutes,\n            date: this.state.hoursModel.date,\n            loadingDate: this.props.hours.loadingDate\n        };\n\n        var dateAsString = this.state.hoursModel.getDateAsString();\n        var hoursAsString = this.state.hoursModel.getHoursAsString();\n\n        let self = this;\n\n        swal.fire({\n            title: 'Modificar horas',\n            text:\n                \"¿Está seguro que desea modificar estas horas?\",\n            icon: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            dangerMode: 'true',\n            confirmButtonText: 'Confirmar',\n            cancelButtonText: 'Cancelar'\n        }).then(answer=>{\n            if(answer.isConfirmed){\n\n                fetch(url, {\n                    method: 'PUT',\n                    mode: 'cors',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    redirect: 'follow',\n                    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n                    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n                })\n                    .then(function(response) {\n                        if(!response.ok)\n                            throw new Error();\n\n                        self.props.hours.idTask = self.state.hoursModel.idTask;\n                        self.props.hours.idProject = self.state.hoursModel.idProject;\n\n                        self.changeVisibility();\n                        self.props.onReload();\n                        swal.fire({\n                            title: \"Se modificaron las horas correctamente.\",\n                            icon: \"success\"\n                        })\n                    })\n                    .catch(function(error) {\n                        self.setState({\n                            errorMessage: \"No se puede cargar más de 24 horas un mismo día\"\n                        });\n                    });\n            }\n        });\n    }\n\n    onTimeChange(newHours) {\n        this.state.hoursModel.setNewHours(parseInt(newHours.hour), parseInt(newHours.minute));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    onDateChange(newDate){\n        var stringNewDate = newDate.replace(/-/gi, \"\");\n\n        if (isNaN(parseInt(stringNewDate))){\n            this.state.hoursModel.date = 0;\n            return;\n        }\n        this.state.hoursModel.date = parseInt(stringNewDate);\n        this.setState({ \n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    isFormValid(){\n        return this.state.hoursModel.completeData();\n    }\n\n    componentDidMount()\n    {\n        //https://proyectopsa.herokuapp.com/proyectos/\n        fetch('https://proyectopsa.herokuapp.com/proyectos/')\n            .then(r => r.json())\n            .then((projects) =>\n            {\n                this.setState({\n                    lstProjects: projects\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    getListTasks(){\n\n        let idProject = this.state.hoursModel.getIdProject();\n        let urlTask = 'https://proyectopsa.herokuapp.com/proyectos/' + idProject + '/tarea/';\n\n\n        fetch(urlTask)\n            .then(r => r.json())\n            .then((tasks) =>\n            {\n                var listTaskAsigned = [];\n\n                tasks.forEach(x => {\n\n                    let url = 'https://proyectopsa.herokuapp.com/proyectos/' +\n                        idProject.toString() + '/tarea/' +\n                        x.codigo.toString();\n\n                    fetch(url)\n                        .then(r => r.json())\n                        .then((oneTask) =>\n                        {\n                            if (oneTask.tarea.codigoRecurso == this.state.hoursModel.file){\n                                listTaskAsigned.push(oneTask.tarea);\n                            }\n\n                            this.setState({\n                                hoursModel: this.state.hoursModel,\n                                lstTasks: listTaskAsigned,\n                                isTaskDisabled: false,\n                                taskIsLoading: false\n                            });\n\n                        }, (error) => {console.log(error);});\n                });\n\n            }, (error) => {console.log(error);});\n    }\n\n    onProjectChange(newIdProject){\n\n        this.setState({taskIsLoading: true});\n\n        this.state.hoursModel.setIdProject(newIdProject);\n        this.state.hoursModel.setIdTask(0);\n        let shouldTaskDisabled = (newIdProject == 0);\n\n        if (shouldTaskDisabled){\n            this.setState({\n                hoursModel: this.state.hoursModel,\n                lstTasks: [],\n                isTaskDisabled: shouldTaskDisabled,\n                taskIsLoading: false\n            });\n            \n        } else {\n            this.getListTasks();\n        }\n    }\n\n    onTaskChange(newIdTask){\n        this.state.hoursModel.setIdTask(parseInt(newIdTask));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    render(){\n\n        return (\n            <div>\n\n                <button type=\"button\" className=\"btn btn-sm btn-rounded \" onClick = {this.changeVisibility} style={{marginTop: \"-7px\", color: \"blue\"}}>\n                                <FaPencilAlt/>\n                            </button>\n\n                <Modal isOpen={this.state.isShow}\n                       toggle={this.changeVisibility}\n                       onKeyPress={this.saveHoursWithEnter}>\n\n                    <ModalHeader toggle={this.changeVisibility}>Modificar hora cargada</ModalHeader>\n\n                    <ModalBody onKeyPress={this.saveHoursWithEnter}>\n                        <FormGroup>\n                            <Label>Proyecto *</Label>\n                            <Input type=\"select\"\n                                   onChange={e => this.onProjectChange(e.target.value)}\n                                   value={this.state.hoursModel.idProject.toString()}>\n                                <option value=\"0\"></option>\n                                {this.state.lstProjects.map((p) => <option key={p.codigo} value={p.codigo}>{p.nombre}</option>)}\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Tarea *</Label>\n                            {\n                                this.state.taskIsLoading ?\n                                    <Col className=\"text-center\">\n                                        <Loader\n                                            type=\"TailSpin\"\n                                            color=\"#00BFFF\"\n                                            height={30}\n                                            width={30}></Loader>\n                                    </Col>\n                                    :\n                                    <Input type=\"select\"\n                                           disabled={this.state.isTaskDisabled}\n                                           onChange={e => this.onTaskChange(e.target.value)} \n                                           value={this.state.hoursModel.idTask.toString()}>\n                                        <option value=\"0\"></option>\n                                        {this.state.lstTasks.map((t) => <option key={t.codigo} value={t.codigo}>{t.nombre}</option>)}\n                                    </Input>\n                            }\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Row>\n                                <Col lg={6}>\n                                    <Label>Cantidad de Horas *</Label>\n                                    <TimePicker\n                                        theme=\"classic\"\n                                        time={this.state.hoursModel.getHoursAsString()}\n                                        timeMode=\"24\"\n                                        timeConfig={{\n                                            from: '0:15',\n                                            to: '23:45',\n                                            step: 15,\n                                            unit: 'minutes'\n                                        }}\n                                        onTimeChange={this.onTimeChange.bind(this)}\n                                        />\n                                </Col>\n\n                                <Col lg={6}>\n                                    <Label>Fecha *</Label>\n                                    <Input type=\"date\"\n                                           max={(new Date().toISOString().split(\"T\")[0])}\n                                           onChange={e => this.onDateChange(e.target.value)}\n                                           value={\n                                            this.state.hoursModel.date.toString().substr(0,4) + \"-\" + \n                                            this.state.hoursModel.date.toString().substr(4,2) + \"-\" + \n                                            this.state.hoursModel.date.toString().substr(6,2)}></Input>\n                                </Col>\n                            </Row>\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Col className=\"col-datos-oblig\">\n                                (*) para aquellos campos que sean requeridos obligatoriamente\n                                <hr/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup check row>\n                            <Col sm={{ size: 10, offset: 9 }}>\n                                <Button color=\"primary\" onClick={this.saveHoursById}>Guardar</Button>\n                            </Col>\n                        </FormGroup>\n\n                        {this.state.errorMessage ? (\n                          <Alert id=\"alerta\" color=\"danger\"> {this.state.errorMessage} </Alert>\n                        ) : (\n                          null\n                        )}\n                    </ModalBody>\n\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {Button, Table, Row, Col, Card, CardBody, Container} from 'reactstrap';\nimport HoursModel from \"../../models/CargaDeHoras/HoursModel\";\nimport PropTypes from \"prop-types\";\nimport { FaTrashAlt, FaPencilAlt } from \"react-icons/fa\";\nimport {Link} from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport swal from \"sweetalert2\";\nimport ModalModifyHours from \"./ModalModifyHours\";\n\nexport default class GridItemHours extends Component {\n    static propTypes = {\n        hours: PropTypes.object.isRequired,\n        onReload: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            nameProject: \"\",\n            nameTask: \"\"\n        };\n\n        this.deleteHoursById = this.deleteHoursById.bind(this);\n        this.reloadItem = this.reloadItem.bind(this);\n        this.fetchTaskAndProjectNames = this.fetchTaskAndProjectNames.bind(this);\n    }\n\n    deleteHoursById(){\n        let url = 'https://squad6-backend.herokuapp.com/hours/' + this.props.hours.id;\n\n        swal.fire({\n            title: 'Eliminar la hora',\n            text: \"¿Está seguro que desea eliminar \" + this.props.hours.getHoursAsString() + \" horas del \" + this.props.hours.getDateAsString() + \"?\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            dangerMode: 'true',\n            confirmButtonText: 'Confirmar',\n            cancelButtonText: 'Cancelar'\n        }).then(answer=>{\n            if(answer.isConfirmed){\n                this.setState({isLoading: true});\n                fetch(url, {\n                    method: 'DELETE'}).then(() => {\n                    swal.fire({\n                        title: \"Se borraron \" + this.props.hours.getHoursAsString() + \" horas del \" + this.props.hours.getDateAsString() + \" con éxito.\" ,\n                        icon: \"success\"});\n                    this.setState({isLoading: false});\n                    this.props.onReload();\n                })\n            }\n        });\n    }\n\n    fetchTaskAndProjectNames(){\n        let url = 'https://proyectopsa.herokuapp.com/proyectos/' +\n            this.props.hours.idProject.toString() + '/tarea/' +\n            this.props.hours.idTask.toString();\n\n        fetch(url)\n            .then(r => r.json())\n            .then((taskByProject) =>\n            {\n\n                let nameTask = \"-\",\n                    nameProject = \"-\";\n\n                if (taskByProject.tarea != null){\n                    nameTask = taskByProject.tarea.nombre;\n                    nameProject = taskByProject.tarea.nombreProyecto;\n                }\n                this.setState({\n                    isLoading: false,\n                    nameProject: nameProject,\n                    nameTask: nameTask\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    componentDidMount() {\n        this.fetchTaskAndProjectNames();\n    }\n\n    reloadItem(){\n        this.props.onReload();\n        this.fetchTaskAndProjectNames();\n    }\n\n    render(){\n        return (\n\n            this.state.isLoading ?\n                    <tr>\n                        <td colSpan={7}>\n                            <Loader\n                                type=\"TailSpin\"\n                                color=\"#00BFFF\"\n                                height={15}\n                                width={15}></Loader>\n                        </td>\n                    </tr>\n                :\n                    <tr>\n                        <td>{this.state.nameProject}</td>\n                        <td>{this.state.nameTask}</td>\n                        <td>{this.props.hours.getDateAsString()}</td>\n                        <td>{this.props.hours.quantityHours}</td>\n                        <td>{this.props.hours.quantityMinutes}</td>\n                        <td>\n                            <ModalModifyHours hours={this.props.hours} onReload={this.reloadItem}> </ModalModifyHours>\n                        </td>\n                        <td>\n                            <button type=\"button\" className=\"btn btn-sm btn-rounded\" onClick = {this.deleteHoursById} style={{marginTop: \"-7px\", color: \"red\"}}>\n                                <FaTrashAlt/>\n                            </button>\n                        </td>\n                    </tr>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {Button, Table, Row, Col, Card, CardBody, Container, CardHeader, ButtonToolbar} from 'reactstrap';\nimport HoursModel from \"../../models/CargaDeHoras/HoursModel\";\nimport GridItemHours from \"./GridItemHours\";\nimport ModalHours from \"./ModalHours\";\nimport Loader from \"react-loader-spinner\";\nimport PropTypes from \"prop-types\";\n\nexport default class GridHours extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            lstHours: []\n        };\n\n        this.onReloadGrid = this.onReloadGrid.bind(this);\n    }\n\n    componentDidMount() {\n\n        fetch('https://squad6-backend.herokuapp.com/hoursFile/' + this.props.file.toString())\n            .then(r => r.json())\n            .then((hoursByFile) =>\n            {\n                let lstHoursModel = [];\n\n                hoursByFile.forEach(x => {\n                    let model = new HoursModel();\n\n                    model.id = x.id;\n                    model.file = x.file;\n                    model.idProject = x.idProject;\n                    model.idTask = x.idTask;\n                    model.quantityHours = x.quantityHours;\n                    model.quantityMinutes = x.quantityMinutes;\n                    model.date = x.date;\n                    model.loadingDate = x.loadingDate;\n\n                    lstHoursModel.push(model);\n                });\n\n                lstHoursModel.sort((a, b) => a.date < b.date ? 1 : -1);\n                this.setState({\n                    isLoading: false,\n                    lstHours: lstHoursModel\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    onReloadGrid(){\n        fetch('https://squad6-backend.herokuapp.com/hoursFile/' + this.props.file.toString())\n            .then(r => r.json())\n            .then((hoursByFile) =>\n            {\n                let lstHoursModel = [];\n\n                hoursByFile.forEach(x => {\n                    let model = new HoursModel();\n\n                    model.id = x.id;\n                    model.file = x.file;\n                    model.idProject = x.idProject;\n                    model.idTask = x.idTask;\n                    model.quantityHours = x.quantityHours;\n                    model.quantityMinutes = x.quantityMinutes;\n                    model.date = x.date;\n                    model.loadingDate = x.loadingDate;\n\n                    lstHoursModel.push(model);\n                });\n\n                lstHoursModel.sort((a, b) => a.date < b.date ? 1 : -1);\n                this.setState({\n                    isLoading: false,\n                    lstHours: lstHoursModel\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render(){\n        return (\n            <div>\n                <Card>\n\n                    <CardHeader tag=\"h2\" style={{display: \"flex\"}}>\n                        <Col xl={10} style={{paddingLeft: \"12%\"}}>\n                            Horas Cargadas\n                        </Col>\n\n                        <Col xl={2}>\n                            <ModalHours file={this.props.file} onReload={this.onReloadGrid}></ModalHours>\n                        </Col>\n                    </CardHeader>\n\n                    <CardBody>\n                        <Container>\n\n                            {this.state.isLoading ?\n                                <Col className=\"text-center\">\n                                    <Loader\n                                        type=\"TailSpin\"\n                                        color=\"#00BFFF\"\n                                        height={50}\n                                        width={50}></Loader>\n                                </Col>\n                            :\n                                this.state.lstHours.length ?\n                                    <Table striped hover size=\"sm\">\n                                        <thead>\n                                        <tr>\n                                            <th>Proyecto</th>\n                                            <th>Tarea</th>\n                                            <th>Fecha</th>\n                                            <th>Horas</th>\n                                            <th>Minutos</th>\n                                            <th>Modificar</th>\n                                            <th>Eliminar</th>\n                                        </tr>\n                                        </thead>\n\n                                        <tbody>\n                                        {this.state.lstHours.map((h) =>\n                                            <GridItemHours key={h.id} hours={h} onReload={this.onReloadGrid}></GridItemHours>\n                                        )}\n                                        </tbody>\n                                    </Table>\n                                    :\n                                    <h4>El recurso no posee horas cargadas.</h4>\n                            }\n                        </Container>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {\n    Breadcrumb, BreadcrumbItem, Card, CardImg, CardText, CardBody, CardHeader, CardTitle,\n    CardSubtitle, Button, Label, ButtonToolbar, Row, Col, Container, Badge\n} from 'reactstrap';\nimport ModalHours from '../../components/CargaDeHoras/ModalHours';\nimport {Link} from \"react-router-dom\";\nimport GridHours from \"../../components/CargaDeHoras/GridHours\";\nimport Loader from \"react-loader-spinner\";\n\nexport default class CargaDeHorasPage extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            resource: { },\n            isLoading: true,\n            lstHours: []\n        };\n    }\n\n    componentDidMount()\n    {\n        const id = this.props.match.params.id;\n        fetch(`https://squad6-backend.herokuapp.com/resources/${id}`)\n            .then(r => r.json())\n            .then((resource) =>\n            {\n                this.setState({\n                    isLoading: false,\n                    resource: resource\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render() {\n        return (\n            <div style={{padding: 10 + 'px'}}>\n                <Row>\n                    <Col xl={12} lg={12}>\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem><Link to=\"/recursos\">Recursos</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{this.state.resource.Nombre} {this.state.resource.Apellido}</BreadcrumbItem>\n                        </Breadcrumb>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={4} lg={4}> \n                        <Card>\n                            <CardHeader tag=\"h4\">Datos Principales</CardHeader>\n\n                            <CardBody>\n                                <Container>\n\n                                    {this.state.isLoading ?\n                                        <Row>\n                                            <Col className=\"text-center\">\n                                                <Loader\n                                                    type=\"TailSpin\"\n                                                    color=\"#00BFFF\"\n                                                    height={50}\n                                                    width={50}></Loader>\n                                            </Col>\n                                        </Row>\n\n                                        :\n                                        <Row>\n                                            <Col xl={4} lg={4}>\n                                                <CardTitle tag=\"h6\">Legajo</CardTitle>\n                                                <CardText>{this.state.resource.legajo}</CardText>\n                                            </Col>\n\n                                            <Col xl={4} lg={4}>\n                                                <CardTitle tag=\"h6\">Nombre</CardTitle>\n                                                <CardText>{this.state.resource.Nombre}</CardText>\n                                            </Col>\n\n                                            <Col xl={4} lg={4}>\n                                                <CardTitle tag=\"h6\">Apellido</CardTitle>\n                                                <CardText>{this.state.resource.Apellido}</CardText>\n                                            </Col>\n\n                                        </Row>\n                                    }\n                                </Container>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n                    <Col xl={8} lg={8}>\n                        <GridHours file={this.props.match.params.id}></GridHours>\n                    </Col>\n\n                </Row>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\nimport './Modal.css';\n\nclass ModalAgregarProyecto extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            modalHeader: null,\n            modalBody: null,\n            modalOnClose: null,\n            modal: false,\n            modalTotal: false,\n        }\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired,\n    };\n\n    crearProyecto(){\n        let url = \"https://proyectopsa.herokuapp.com/proyectos/\";\n\n        let nombreProyecto = document.getElementById(\"nombreProyecto\").value;\n        let fechaInicio = document.getElementById(\"fechaInicio\").value;\n        let descripcion = document.getElementById(\"descripcion\").value;\n        let fechaFin = document.getElementById(\"fechaFin\").value;\n        let horas = document.getElementById(\"horas\").value;\n        let presupuesto = document.getElementById(\"presupuesto\").value;\n\n        if (!this.validateRequiredEntries(nombreProyecto, fechaInicio, descripcion)) return;\n        if (fechaFin != '' && fechaInicio > fechaFin) return;\n\n        let estado = this.obtenerEstado();\n\n        let data = {\n            \"nombre\": nombreProyecto,\n            \"fechaInicio\": fechaInicio,\n            \"fechaFin\": fechaFin == '' ? undefined : fechaFin,\n            \"estado\": estado == null ? undefined : estado ,\n            \"horas\": horas == \"\" ? undefined : parseInt(horas) ,\n            \"presupuesto\": presupuesto == '' ? undefined : parseInt(presupuesto),\n            \"descripcion\": descripcion\n        };\n        \n        let self = this;\n\n        fetch(url, {\n            method: 'POST', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n            .then(response => response.json())\n            .then(function(json) {\n                if(json.codigo) {\n                    self.setState({modalTotal:false});\n                    self.props.onClose();\n                    self.abrirModal(\"ÉXITO\", `El proyecto se generó exitosamente con código: ${json.codigo}`, () => {});\n                } else {\n                    self.abrirModal(\"ERROR\", json.description +  json.validation, () => {});\n                }\n            })\n            .catch(function(error) {\n                self.abrirModal(\"ERROR\", error.message, () => {})\n            });\n    }\n\n    abrirModal(header, body, onClose){\n        this.setState({\n            modalHeader: header,\n            modalBody: body,\n            modalOnClose: onClose,\n            modal: true,\n        })\n    }\n\n    obtenerEstado(){\n        if (document.getElementById(\"iniciado\").checked) return 'iniciado';\n        if (document.getElementById(\"enProceso\").checked) return 'en proceso';\n        if (document.getElementById(\"finalizado\").checked) return 'finalizado';\n    }\n\n    validateRequiredEntries(nombreProyecto, fechaInicio, descripcion){\n        let valid = true;\n        let nombreClassList = document.getElementById(\"nombre\").classList;\n        let fechaClassList = document.getElementById(\"startDate\").classList;\n        let descClassList = document.getElementById(\"desc\").classList;\n        \n        valid &= this.validate(nombreProyecto, nombreClassList);\n        valid &= this.validate(fechaInicio, fechaClassList);\n        valid &= this.validate(descripcion, descClassList);\n        return valid;\n    }\n\n    validate(element, classList){\n        let valid = true;\n\n        if (element == ''){\n            classList.add(\"incorrect\");\n            valid = false;\n        } else {\n            classList.remove(\"incorrect\");\n        }\n\n        return valid;\n    }   \n\n    render() {\n        let self = this;\n        const toggleModal = () => self.setState({modalTotal:!self.state.modalTotal});\n        const toggleModalError = () => self.setState({modal: !self.state.modal});\n        return (\n            <div>\n                <Button color=\"secondary\" onClick={toggleModal}>Agregar Proyecto</Button>\n\n                <Modal isOpen={this.state.modalTotal} toggle={toggleModal}>\n                    <ModalHeader id=\"header\" toggle={toggleModal}>Nuevo Proyecto</ModalHeader>\n                    <ModalBody>\n                        <FormGroup>\n                            <Label className='parametro' for=\"nombreProyecto\" id='nombre'>Nombre Proyecto *</Label>\n                            <Input type=\"string\" name=\"nombreProyecto\" id=\"nombreProyecto\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaInicio\" id='startDate'>Fecha Inicio *</Label>\n                            <Input type=\"date\" name=\"fechaInicio\" id=\"fechaInicio\" className='general fecha' required/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaFin\" >Fecha Fin</Label>\n                            <Input type=\"date\" name=\"fechaFin\" id=\"fechaFin\" className='general fecha' />\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\">\n                            <Label className='parametro'>Estado</Label>\n                            <FormGroup check>\n                                <Label check className=\"radio\">\n                                    <Input type=\"radio\" name='radio' id='iniciado'  />{' '}\n                                    Iniciado\n                                </Label>\n                                <Label check className=\"radio\">\n                                    <Input type=\"radio\" name='radio' id='enProceso' />{' '}\n                                    En Proceso\n                                </Label>\n                                <Label check className=\"radio\">\n                                    <Input type=\"radio\" name='radio' id='finalizado'  />{' '}\n                                    Finalizado\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"horas\">Horas</Label>\n                            <Input type=\"number\" name=\"horas\" id=\"horas\" className='general' min={0} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"presupuesto\" >Presupuesto</Label>\n                            <Input type=\"number\" name=\"presupuesto\" id=\"presupuesto\" className='general' min={0} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"descripcion\" id='desc'>Descripción *</Label>\n                            <Input type=\"textarea\" name=\"descripcion\" id=\"descripcion\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <Button onClick={() => this.crearProyecto()}>Crear Proyecto</Button>\n                        <label id='requisitosLabel'>(*) para aquellos campos que sean requeridos obligatoriamente</label>\n                    </ModalBody>\n                </Modal>\n                <Modal isOpen={this.state.modal} toggle={toggleModalError} className='popupError' onClosed={this.state.modalOnClose}>\n                    <ModalHeader toggle={toggleModalError}>{this.state.modalHeader}</ModalHeader>\n                    <ModalBody>\n                        {this.state.modalBody}\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(ModalAgregarProyecto);    \n","import React, { Component } from 'react';\nimport {Button, Table, Row, Col, Card, CardBody, Container, CardHeader, Breadcrumb, BreadcrumbItem, Badge   } from 'reactstrap';\nimport './MainProyectosPage.css';\nimport {Link} from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport ModalAgregarProyecto from \"../../components/Proyectos/ModalAgregarProyecto\";\n\n\nexport default class MainProyectosPage extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            projects: [],\n            isLoading: true,\n        }\n    }\n\n    componentDidMount()\n    {\n        this.loadProyectos();\n    }\n\n    loadProyectos(){\n        fetch('https://proyectopsa.herokuapp.com/proyectos/')\n        .then(r => r.json())\n        .then((projects) =>\n        {\n            this.setState({\n                projects: projects,\n                isLoading: false,\n            });\n        }, (error) => {console.log(error);});\n    }\n\n    getBadgeColor(estado){\n        switch (estado){\n            case \"Iniciado\":\n                return \"danger\"\n            case \"Finalizado\":\n                return \"success\"\n            case \"En proceso\":\n                return \"warning\"\n        }\n    }\n\n    render()\n    {\n       return  <div>\n            <Row>\n                    <Col xl={12} lg={12}>\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Proyectos</BreadcrumbItem>\n                        </Breadcrumb>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={{size: 6, offset: 3}}>\n                        <Card>\n                            <CardHeader tag=\"h2\">Proyectos</CardHeader>\n\n                            <CardBody>\n                                <Container>\n\n                                    {this.state.isLoading ?\n                                        <Row>\n                                            <Col className=\"text-center\">\n                                                <Loader\n                                                    type=\"TailSpin\"\n                                                    color=\"#00BFFF\"\n                                                    height={50}\n                                                    width={50}></Loader>\n                                            </Col>\n                                        </Row>\n                                        :\n                                        <Row>\n                                            <Col>\n                                                <Table striped>\n                                                    <thead>\n                                                    <tr>\n                                                        <th>Nombre</th>\n                                                        <th>Estado</th>\n                                                        <th><ModalAgregarProyecto onClose={() => this.loadProyectos()}></ModalAgregarProyecto></th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    \n                                                    {this.state.projects.map((r) =>{\n                                                        const estadoString = r.estado.charAt(0).toUpperCase() + r.estado.slice(1);\n                                                        let badgeColor = this.getBadgeColor(estadoString);\n                                                        return <tr key={r.legajo}>\n                                                            <td>{r.nombre}</td>\n                                                            <td><Badge color={badgeColor}>{estadoString}</Badge></td>\n                                                            <td>\n                                                                <Link to={`/proyectos/${r.codigo}/tareas`}>\n                                                                    <Button color=\"info\">Ver Tareas</Button>\n                                                                </Link>\n                                                            </td>\n                                                        </tr>\n                                                    }\n                                                    )}\n                                                    </tbody>\n                                                </Table>\n                                            </Col>\n                                        </Row>\n                                    }\n\n\n                                </Container>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n        </div>\n        \n    }\n}\n","import React, { Component } from 'react'\nimport {Button, Table, Row, Col, Card, CardBody, Container, CardHeader, Breadcrumb, BreadcrumbItem} from 'reactstrap';\nimport HoursModel from \"../../models/CargaDeHoras/HoursModel\";\nimport { FaRegHandPointer } from 'react-icons/fa'\nimport {Link} from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\n\nexport default class RecursosPage extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            lstResources: []\n        };\n    }\n\n    componentDidMount()\n    {\n        fetch('https://squad6-backend.herokuapp.com/resources')\n            .then(r => r.json())\n            .then((resources) =>\n            {\n                this.setState({\n                    isLoading: false,\n                    lstResources: resources\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render() {\n        return (\n            <div className=\"block\" style={{padding: 10 + 'px'}}>\n\n                <Row>\n                    <Col xl={12} lg={12}>\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Recursos</BreadcrumbItem>\n                        </Breadcrumb>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={{size: 6, offset: 3}}>\n                        <Card>\n                            <CardHeader tag=\"h2\">Recursos</CardHeader>\n\n                            <CardBody>\n                                <Container>\n\n                                    {this.state.isLoading ?\n                                        <Row>\n                                            <Col className=\"text-center\">\n                                                <Loader\n                                                    type=\"TailSpin\"\n                                                    color=\"#00BFFF\"\n                                                    height={50}\n                                                    width={50}></Loader>\n                                            </Col>\n                                        </Row>\n                                        :\n                                        <Row>\n                                            <Col>\n                                                <Table striped>\n                                                    <thead>\n                                                    <tr>\n                                                        <th>Legajo</th>\n                                                        <th>Nombre</th>\n                                                        <th>Apellido</th>\n                                                        <th>Seleccionar</th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n\n                                                    {this.state.lstResources.map((r) =>\n                                                        <tr key={r.legajo}>\n                                                            <td>{r.legajo}</td>\n                                                            <td>{r.Nombre}</td>\n                                                            <td>{r.Apellido}</td>\n                                                            <td>\n                                                                <Link to={`/cargadehoras/${r.legajo}`}>\n                                                                    <button type=\"button\" className=\"btn btn-primary btn-sm\">\n                                                                        Ver recurso\n                                                                    </button>\n                                                                </Link>\n\n                                                            </td>\n                                                        </tr>\n\n                                                    )}\n                                                    </tbody>\n                                                </Table>\n                                            </Col>\n                                        </Row>\n                                    }\n\n\n                                </Container>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport {Col, Row, Table} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\n\nexport default class ModalAsignarRecurso extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            isLoading: true,\n            lstResources: []\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://squad6-backend.herokuapp.com/resources')\n            .then(r => r.json())\n            .then((resources) =>\n            {\n                this.setState({\n                    isLoading: false,\n                    lstResources: resources\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render()\n    {\n        return this.state.isLoading ?\n                <Row>\n                    <Col className=\"text-center\">\n                        <Loader\n                            type=\"TailSpin\"\n                            color=\"#00BFFF\"\n                            height={50}\n                            width={50}></Loader>\n                    </Col>\n                </Row>\n                :<Row>\n                    <Col>\n                        <Table striped>\n                            <thead>\n                            <tr>\n                                <th>Legajo</th>\n                                <th>Nombre</th>\n                                <th>Apellido</th>\n                                <th>Seleccionar</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n\n                            {this.state.lstResources.map((r) =>\n                                <tr key={r.legajo}>\n                                    <td>{r.legajo}</td>\n                                    <td>{r.Nombre}</td>\n                                    <td>{r.Apellido}</td>\n                                    <td>\n                                        <button type=\"button\"  className=\"btn btn-outline-primary btn-sm\" onClick={() => this.props.onClick(r.legajo)}>\n                                            Seleccionar recurso\n                                        </button>\n                                    </td>\n                                </tr>\n\n                            )}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>;\n    }\n}","import React, { Component } from 'react'\nimport { Row, Card, CardBody, CardTitle, CardText, Button,  Col } from 'reactstrap';\nimport {Form, FormGroup, Label, Input } from 'reactstrap';\nimport {Link} from \"react-router-dom\";\nimport './TareaPage.css';\nimport { Modal, ModalHeader, ModalBody, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\nimport ModalAsignarRecurso from \"../../components/Proyectos/ModalAsignarRecurso\";\n\n\nclass TareaPage extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            tarea: [],\n            modal: false,\n            errorModal: false,\n            modalBody: null,\n            modalHeader: null,\n            acceptModalButton: null,\n            errorMessage: \"\",\n            prioridad: \"\",\n            estado: \"\",\n            codigoRecurso: \"\",\n            fechaFin: \"\",\n            recurso: null,\n        }\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n    asignarRecurso(){\n        let self = this;\n        const onClick = (legajo) => {\n            if (!self.validateInputText(legajo, \"codigoRecursoLabel\")) return;\n\n\n            self.patch({\n                codigoRecurso: legajo\n            }).then(r => self.obtenerTareas());\n\n            this.setState({\n                modal: false,\n            });\n        };\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup>\n                        <ModalAsignarRecurso onClick={onClick} />\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n        this.abrirModal(\n            \"Asignar Recurso\",\n            content,\n            null\n        )\n    }\n\n    modificarPrioridad(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup tag=\"fieldset\">\n                        <Label className='parametro' id='priorityLabel'>Prioridad</Label>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio2' id='bajaTarea'  />{' '}\n                                Baja\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio2' id='mediaTarea' />{' '}\n                                Media\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check >\n                            <Label check>\n                                <Input type=\"radio\" name='radio2' id='altaTarea'  />{' '}\n                                Alta\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n        this.abrirModal(\n            \"Modificar Prioridad\",\n            content,\n            () => {\n                if (!self.validarRadio([\"bajaTarea\", \"mediaTarea\", \"altaTarea\"], \"priorityLabel\")) return;\n                    let prioridad = self.obtenerRadio(\"bajaTarea\", \"mediaTarea\", \"altaTarea\", \n                                                            \"baja\", \"media\", \"alta\");\n                    self.patch({\n                        \"prioridad\":prioridad\n                    });\n                    \n                    self.setState({modal:false});\n\n            }\n        )\n    }\n\n    modificarFechaFinal(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"fechaFinal\" id=\"fechaFinalLabel\" >Fecha Fin:</Label>\n                        <Input type=\"date\" name=\"fechaFinal\" id=\"fechaFinal\"/>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n\n        this.abrirModal(\n            \"Modificar Fecha Final\",\n            content,\n            () => {\n                let fechaFinal = document.getElementById(\"fechaFinal\").value;\n                if(!self.validateInputText(fechaFinal, \"fechaFinalLabel\")) return;\n                \n                self.patch({\n                    \"fechaFin\":fechaFinal\n                });\n\n                self.setState({modal:false});\n            }\n        )\n    }\n\n    modificarEstado(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup tag=\"fieldset\">\n                        <Label id=\"estadoLabel\">Estado</Label>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio' id='iniciadoTarea'  />{' '}\n                                Iniciado\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio' id='enProcesoTarea' />{' '}\n                                En Proceso\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check >\n                            <Label check>\n                                <Input type=\"radio\" name='radio' id='finalizadoTarea'  />{' '}\n                                Finalizado\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n        this.abrirModal(\n            \"Modificar Estado\",\n            content,\n            () => {\n                if (!self.validarRadio([\"iniciadoTarea\", \"enProcesoTarea\", \"finalizadoTarea\"], \"estadoLabel\")) return;\n                let estado = self.obtenerRadio(\"iniciadoTarea\", \"enProcesoTarea\", \"finalizadoTarea\", \n                                                      \"iniciado\", \"en proceso\", \"finalizado\");\n                self.patch({\n                    \"estado\":estado\n                });\n\n                self.setState({modal:false});\n            }\n        )\n    }\n    \n    patch(data, url){\n        if (url == null) {\n            url = `https://proyectopsa.herokuapp.com/proyectos/${this.state.tarea.proyectoID}/tarea/${this.state.tarea.codigo}`;\n        }\n        let self = this;\n        return fetch(url, {\n            method: 'PATCH', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n          .then(response => response.json())\n          .then(function(json) {\n              if(json.codigo) {\n                  self.setState(data);\n                  return;\n              } else {\n                    self.setState({\n                        errorMessage : json.descripcion + json.validation,\n                        errorModal: true,\n                    })\n              }\n          })\n          .catch(function(error) {\n                self.setState({\n                    errorMessage : error.message,\n                    errorModal: true,\n                })\n              console.log(error);\n          });\n    }\n\n\n    obtenerRadio(radio1, radio2, radio3, result1, result2, result3){\n        if (document.getElementById(radio1).checked) return result1;\n        if (document.getElementById(radio2).checked) return result2;\n        if (document.getElementById(radio3).checked) return result3;\n    }\n\n    validarRadio(elements, labelID){\n        let labelClassList = document.getElementById(labelID).classList;\n\n        let primero = document.getElementById(elements[0]);\n        let segundo = document.getElementById(elements[1]);\n        let tercero = document.getElementById(elements[2]);\n\n        if (!primero.checked && !segundo.checked && !tercero.checked){\n            labelClassList.add(\"incorrect\");\n            return false\n        } else {\n            labelClassList.remove(\"incorrect\");\n        }\n\n        return true\n    }\n\n    \n    validateInputText(value, classListId){\n        if (value == null || value == ''){\n            let label = document.getElementById(classListId);\n            label.classList.add(\"incorrect\");\n            \n            return false;\n        }\n        return true;\n    }\n\n    abrirModal(header, body, acceptButton){\n        this.setState({\n            modalHeader: header,\n            modalBody: body,\n            acceptModalButton: acceptButton,\n            modal: true,\n        })\n    }\n\n    componentDidMount(){\n        this.tareaID = this.props.match.params.idtarea;\n        this.proyectoID = this.props.match.params.id;\n\n        this.obtenerTareas();\n        //this.obtenerRecursosPorTarea();\n    }\n\n    obtenerRecursosPorTarea(){\n        let self = this;\n        fetch(`https://squad6-backend.herokuapp.com/hours`)\n            .then(r => r.json())\n            .then((horas) => {\n                self.obtenerHorasDeTarea(horas)\n            })\n    }\n\n    obtenerHorasDeTarea(horas){\n        for(let hora in horas){\n            if(horas[hora].idProject == this.proyectoID && horas[hora].idTask == this.tareaID){\n                \n                fetch(`https://squad6-backend.herokuapp.com/resources/${horas[hora].file}`)\n                    .then(r => r.json())\n                    .then((recurso) => {\n\n                        this.setState({\n                            recursosXhoras: [...this.state.recursosXhoras, {\n                                nombre: recurso.Nombre + \" \" + recurso.Apellido,\n                                codigo: horas[hora].file,\n                                horas: horas[hora].quantityHours +  (horas[hora].quantityMinutes == 0 ? \"\" : \":\" + horas[hora].quantityMinutes)\n                            }]\n                        })\n                    })\n            }\n        }\n    }\n\n    obtenerTareas(){\n        let self = this;\n        fetch(`https://proyectopsa.herokuapp.com/proyectos/${this.proyectoID}/tarea/${this.tareaID}`)\n            .then(r => r.json())\n            .then((tarea) =>\n            {\n                let trueTarea = tarea['tarea'];\n                this.setState({\n                    tarea: trueTarea,\n                    prioridad: trueTarea.prioridad,\n                    estado: trueTarea.estado,\n                    fechaFin: trueTarea.fechaFin,\n                    codigoRecurso: trueTarea.codigoRecurso,\n                });\n                if (trueTarea.codigoRecurso)\n                {\n                    fetch(`https://squad6-backend.herokuapp.com/resources/${trueTarea.codigoRecurso}`)\n                        .then(r => r.json())\n                        .then((r) =>\n                        {\n                            self.setState({\n                                recurso: r\n                            });\n                        }, (error) => {console.log(error);});\n                }\n            }, (error) => {console.log(error);});\n    }\n\n    noResources(){\n        if(!this.state.codigoRecurso)\n        {\n            return <div id=\"sinAsignados\">\n                No hay recursos asignados a esta tarea.\n            </div>                          \n        }\n    }\n\n    showResources() {\n        return (this.state.codigoRecurso && this.state.recurso && <div className=\"recursosHoras\">\n            <p id=\"codigoRecursoCard\"><b>Código Recurso:</b> {this.state.recurso.legajo}&nbsp;&nbsp;&nbsp;&nbsp;<b>Nombre\n                Recurso:</b> {this.state.recurso.Nombre + \" \" + this.state.recurso.Apellido}&nbsp;&nbsp;&nbsp;&nbsp;</p>\n        </div>);\n    }\n\n    eliminarTarea(){\n        \n        let confirmar = () => {\n            // if(this.state.codigoRecurso != \"\"){\n            //     this.deleteHorasRecurso();\n            // }\n            this.selfDelete();\n        }\n\n        let content = <div>\n            <div id=\"confirmButtons\">\n                <Button className=\"botoneh\" onClick={confirmar}>Confirmar</Button>\n                <Button className=\"botoneh\" onClick={() => this.setState({modal:false})}>Cancelar</Button>\n            </div>\n            \n        </div>\n\n        this.abrirModal(\n            \"Esta seguro que desea eliminar esta tarea?\",\n            content,\n            null\n        )\n    }\n\n    selfDelete(){\n        let self=this;\n        let url = `https://proyectopsa.herokuapp.com/proyectos/${this.state.tarea.codigoProyecto}/tarea/${this.state.tarea.codigo}`\n        fetch(url, {\n            method: 'DELETE', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n            .then(r => {\n                self.props.history.push(`/proyectos/${this.state.tarea.codigoProyecto}/tareas`)\n            })\n    }\n\n    deleteHora(hora){\n        console.log(hora)\n        let url = `https://squad6-backend.herokuapp.com/hours/${hora.id}`\n        fetch(url, {\n            method: 'DELETE', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n    }\n\n    deleteHorasRecurso(){\n        let horasDelRecurso = []\n        fetch(\"https://squad6-backend.herokuapp.com/hours\")\n            .then(r => r.json())\n            .then(hours => {\n                for (let index in hours){\n                    let hour = hours[index];\n                    if (!hour.file == this.state.codigoRecurso) continue;\n                    if (hour.idProject == this.state.tarea.codigoProyecto && hour.idTask == this.state.tarea.codigo){\n                        horasDelRecurso.push(hour);\n                    }\n                }\n            }, (error) => {console.log(error);})\n            .then(r => {\n                for (let index = 0 ; index < horasDelRecurso.length; index ++){\n                    this.deleteHora(horasDelRecurso[index]);\n                }\n            })\n\n        return horasDelRecurso;\n    }\n\n    editarNombreODescripcion(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"nombreTarea\" >Nombre Tarea:</Label>\n                        <Input type=\"string\" name=\"nombreTarea\" id=\"nombreTareaPatch\" defaultValue={self.state.tarea.nombre}/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"descripcion\" >Descripción:</Label>\n                        <Input type=\"textarea\" name=\"descripcion\" id=\"descripcionTareaPatch\" className='general' defaultValue={self.state.tarea.descripcion}/>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n\n        this.abrirModal(\n            \"Editar Atributos Generales\",\n            content,\n            () => {\n                let descripcion = document.getElementById(\"descripcionTareaPatch\").value;\n                let nombre = document.getElementById(\"nombreTareaPatch\").value\n                \n                self.patch({\n                    \"nombre\":nombre,\n                    \"descripcion\":descripcion\n                });\n                setTimeout(() => {\n                    self.obtenerTareas();\n                self.obtenerRecursosPorTarea();\n                }, 1000)\n                \n                self.setState({modal:false});\n            }\n        )\n    }\n\n    render() {\n        const tarea = this.state.tarea;\n        let self = this;\n        const toggleModal = () =>self.setState({modal:!self.state.modal});\n        const toggleErrorModal = () => self.setState({errorModal: !self.state.errorModal});\n        const closeBtn = <Button id=\"closebtn\" onClick={() => self.setState({errorModal:false})}> X </Button>\n        return (\n            <div id='paginaTareas'>\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem><Link to={`/proyectos/`}>Proyectos</Link></BreadcrumbItem>\n                    <BreadcrumbItem><Link to={`/proyectos/${tarea.codigoProyecto}/tareas/`}>Tareas</Link></BreadcrumbItem>\n                    <BreadcrumbItem>Tarea {tarea.codigo}</BreadcrumbItem>\n                </Breadcrumb>\n                <div id='subheaderTarea'>\n                    <br/>\n                    <h1 id=\"taskName\">{this.state.tarea.nombre}</h1>\n                </div>\n                <div id='cardsContainer'> \n                    <Row>\n                        <Col sm=\"6\">\n                            <div id='cardGeneral' className='card'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">General</CardTitle>\n                            \n                                <CardText><b>Descripción:</b> {this.state.tarea.descripcion}</CardText>\n                                <div id='infoCodigos'>\n                                    <p className='cardText'><b>Código Tarea:</b> {tarea.codigo}.</p>\n                                    <p className='cardText'><b>Código Proyecto:</b> {tarea.codigoProyecto}.</p>\n                                    <p className='cardText'><b>Nombre Proyecto:</b> {tarea.nombreProyecto}</p>\n                                </div>\n                                <Button color=\"secondary\" onClick={() => this.editarNombreODescripcion()}>Editar</Button>\n                                </Card>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"6\">\n                            <div id='cardRecursos' className='card cardsLeft cardsTop'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">Recursos asignados</CardTitle>\n                                <div id =\"recursosConHoras\">\n                                    {this.noResources()}\n                                    {this.showResources()}\n                                </div> \n                                \n                                {/* <CardText id=\"recursosText\"><b>Código Recurso:</b> {this.state.codigoRecurso == null ? \"Ningún recurso asignado\" : tarea.codigoRecurso}</CardText> */}\n                                <Button id=\"recursosButton\" onClick={() => this.asignarRecurso()}>Asignar Recurso</Button>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col sm=\"6\">\n                            <div id='cardFechas' className='card cardsRight cardsTop'>\n                                <Card body>\n                                <CardTitle tag=\"h5\" className=\"cardTitle\">Fechas</CardTitle>\n                                <div id=\"fechasTareas\">\n                                    <CardText><b>Fecha Inicial:</b> {tarea.fechaInicio}</CardText>\n                                    <CardText><b>Fecha Final:</b> {this.state.fechaFin == null ? \"No hay fecha final\" : this.state.fechaFin}</CardText>\n                                </div>\n                                <Button id=\"fechaButton\" onClick={() => this.modificarFechaFinal()}>Modificar Fecha Final </Button>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col sm=\"6\">\n                            <div id='cardEstado' className='card cardsLeft'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">Estado</CardTitle>\n                                <CardText className={this.state.estado}>{this.state.estado}</CardText>\n                                <Button onClick={() => this.modificarEstado()}>Modificar Estado</Button>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col sm=\"6\">\n                            <div id='cardPrioridad' className='card cardsRight'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">Prioridad</CardTitle>\n                                <CardText className={this.state.prioridad + \" prioridadValue\"}>{this.state.prioridad}</CardText>\n                                <Button onClick={() => this.modificarPrioridad()}>Modificar Prioridad </Button>\n                                </Card>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n                \n                <div id=\"modals\">\n                    <Modal isOpen={this.state.modal} toggle={toggleModal}>\n                        <ModalHeader toggle={toggleModal}>{this.state.modalHeader}</ModalHeader>\n                        <ModalBody>\n                            {this.state.modalBody}\n                        </ModalBody>\n                        {this.state.acceptModalButton && <Button onClick={this.state.acceptModalButton} id=\"boton\">\n                            Aceptar\n                        </Button>}\n                    </Modal>\n                    <Modal isOpen={this.state.errorModal} toggle={toggleErrorModal}>\n                        <ModalHeader toggle={toggleModal} close={closeBtn}>ERROR</ModalHeader>\n                        <ModalBody>\n                            {this.state.errorMessage}\n                        </ModalBody>\n                        <Button onClick={() => self.setState({errorModal:false})} id=\"boton\">\n                            Cancelar\n                        </Button>\n                    </Modal>\n                </div>\n                <Button color=\"danger\" onClick={() => this.eliminarTarea()} className=\"eliminar\">Eliminar Tarea</Button>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(TareaPage);\n","import React, { Component } from 'react';\nimport { Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport TimePicker from 'react-times';\n\nimport 'react-times/css/classic/default.css';\nimport './ModalTickets.css'\nimport swal from \"sweetalert2\";\n\nexport default class ModalTickets extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isShow: false,\n            resources: [{}],\n            description: \"\",\n            type: \"consulta\",\n            priority: 1,\n            resource_id: null,\n            name: \"\"\n        };\n\n        this.saveTicket = this.saveTicket.bind(this);\n        this.changeVisibility = this.changeVisibility.bind(this);\n\n        this.saveTicketWithEnter = this.saveTicketWithEnter.bind(this);\n\n        this.handleTypeChange = this.handleTypeChange.bind(this);\n        this.handlePriorityChange = this.handlePriorityChange.bind(this);\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleResourceChange = this.handleResourceChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this)\n    }\n\n    changeVisibility() {\n        this.setState({\n            isShow: !this.state.isShow\n        });\n\n    }\n\n    saveTicketWithEnter(e){\n        if(e.key === 'Enter'){\n            this.changeVisibility();\n        }\n\n    }\n\n    saveTicket() {\n        this.changeVisibility();\n        var url = 'https://aninfo-soporte.herokuapp.com/create_ticket';\n        var data = {\n            \"type\" : this.state.type,\n            \"description\": this.state.description,\n            \"priority\": this.state.priority,\n            \"resource_id\": this.state.resource_id,\n            \"name\": this.state.name,\n            \"id\": Math.floor(Math.random() * (10000 - 0 + 1)) + 0\n        };\n        if (data[\"description\"] == \"\" || data[\"name\"] == \"\") {\n            swal.fire({\n                            title: \"Debe ingresar nombre y descripcion\",\n                            icon: \"warning\"\n                        })\n        }\n        else {\n            fetch(url, {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                mode: 'cors'\n            })\n            swal.fire({\n                            title: \"ticket creado correctamente\",\n                            icon: \"success\"\n                        })\n        }\n\n    }\n\n    handleTypeChange(event) {\n        this.setState({type: event.target.value});\n        console.log(event.target.value)\n    }\n    handlePriorityChange(event) {\n        this.setState({priority: event.target.value});\n        console.log(event.target.value)\n    }\n    handleDescriptionChange(event) {\n        this.setState({description: event.target.value});\n        console.log(event.target.value)\n    }\n    handleNameChange(event) {\n        this.setState({name: event.target.value});\n        console.log(event.target.value)\n    }\n    handleResourceChange(event) {\n        this.setState({resource_id: event.target.value});\n        console.log(event.target.value)\n    }\n\n    handleSubmit(event) {\n        //alert('A name was submitted: ' + this.state.value);\n        //event.preventDefault();\n      }\n\n\n    componentDidMount() {\n        var url_resources = 'https://squad6-backend.herokuapp.com/resources';\n        fetch(url_resources, {\n            method: 'GET'\n        }).then(response => response.json().then(data => {\n            this.setState({resources: data});\n            if (data.length > 0){\n                this.state.resource_id = data[0].legajo\n            }\n        }));\n    }\n\n    render(){\n\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.changeVisibility}>Crear Ticket</Button>\n\n                <Modal isOpen={this.state.isShow}\n                       toggle={this.changeVisibility}\n                       onKeyPress={this.saveTicketWithEnter}>\n\n                    <ModalHeader toggle={this.changeVisibility}>Crear Ticket</ModalHeader>\n\n                    <ModalBody>\n                        <FormGroup>\n                            <Label>Nombre</Label>\n                            <Input type=\"text\" value={this.state.name} onChange={this.handleNameChange}></Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Recurso</Label>\n                                <Input type=\"select\" onChange={this.handleResourceChange} >\n                                    {this.state.resources.map((p) => <option key={p.legajo} value={p.legajo}>{p.Nombre} {p.Apellido}</option>)} </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Tipo</Label>\n                            <Input type=\"select\" value={this.state.type} onChange={this.handleTypeChange}>\n                                <option value=\"consulta\">Consulta</option>\n                                <option value=\"error\">Error</option>\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Descripcion</Label>\n                            <Input type=\"text\" value={this.state.description} onChange={this.handleDescriptionChange}></Input>\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Prioridad</Label>\n                            <Input type=\"select\" value={this.state.priority} onChange={this.handlePriorityChange}>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n\n                        </FormGroup>\n                        <FormGroup check row>\n                            <Col sm={{ size: 10, offset: 9 }}>\n                                <Button color=\"primary\" onClick={this.saveTicket}>Guardar</Button>\n                            </Col>\n                        </FormGroup>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport TimePicker from 'react-times';\n\nimport 'react-times/css/classic/default.css';\nimport './ModalTickets.css'\nimport swal from \"sweetalert2\";\n\nexport default class ModalFilter extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            isShow: false,\n            tasks: [{}],\n            ticket_tasks: [{}],\n            available_status: [],\n            available_priorities: []\n        };\n\n        this.changeVisibility = this.changeVisibility.bind(this);\n\n        this.handleTaskCheckboxChange = this.handleTaskCheckboxChange.bind(this)\n        this.isTaskChecked = this.isTaskChecked.bind(this)\n\n    }\n        componentDidMount() {\n        var url = 'https://aninfo-soporte.herokuapp.com/tickets_main_data';\n        var data = {};\n\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            mode:'cors'\n        }).then(response => response.json().then(data => {this.setState({\n            tickets: data\n        });console.log(data);\n        for (var i = 0; i < data.length; i++) {\n                    this.state.available_status.push(data[i].status);\n                    this.state.available_priorities.push(data[i].priority);\n                }\n        this.state.available_priorities = [...new Set(this.state.available_priorities)];\n        this.state.available_status = [...new Set(this.state.available_status)];\n\n        }));\n\n\n    }\n\n\n    changeVisibility() {\n        this.setState({\n            isShow: !this.state.isShow\n        });\n\n    }\n\n\n    handleTaskCheckboxChange(event) {\n        console.log(event.target.value);\n        for (var i = 0; i < this.state.tasks.length; i++) {\n            if (this.state.tasks[i][\"codigo\"] == event.target.value) {\n                var task = this.state.tasks[i];\n                if (task[\"checked\"]) {\n                    this.state.tasks[i][\"checked\"] = false;\n                }\n                else {\n                    this.state.tasks[i][\"checked\"] = true;\n                }\n            }\n        }\n        //this.state.tasks[event.target.value].checked = true;\n    }\n\n    isTaskChecked(id){\n       return this.state.tasks[id].checked == true;\n    }\n\n\n    handleSubmit(event) {\n        //alert('A name was submitted: ' + this.state.value);\n        //event.preventDefault();\n    }\n\n    render(){\n\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.changeVisibility}>Filtrar</Button>\n\n                <Modal isOpen={this.state.isShow}\n                       toggle={this.changeVisibility}\n                       >\n\n                    <ModalHeader toggle={this.changeVisibility}>Filtrar</ModalHeader>\n\n                    <ModalBody>\n                        Estado:\n                        <FormGroup>\n                            {this.state.available_status.map((p) =>\n                           <li><input key={p} onClick={this.handleTaskCheckboxChange} type=\"checkbox\" defaultChecked={false}   value={p}/> {p}</li>)}\n                        </FormGroup>\n                    </ModalBody>\n                    <ModalBody>\n                        Prioridad:\n                        <FormGroup>\n                            {this.state.available_priorities.map((p) =>\n                           <li><input key={p} onClick={this.handleTaskCheckboxChange} type=\"checkbox\" defaultChecked={false}   value={p}/> {p}</li>)}\n                        </FormGroup>\n                    </ModalBody>\n                    <FormGroup check row>\n                            <Col sm={{ size: 10, offset: 9 }}>\n                                <Button color=\"primary\" >Filtrar</Button>\n                            </Col>\n                    </FormGroup>\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\nimport {\n    Button,\n    ButtonToolbar,\n    Row,\n    Col,\n    Card,\n    CardHeader,\n    CardBody,\n    Container,\n    Table,\n    Breadcrumb,\n    BreadcrumbItem\n} from 'reactstrap';\nimport {Link, NavLink} from \"react-router-dom\";\nimport TicketCard from \"../../components/CargaDeTickets/TicketCard\";\nimport ModalTickets from '../../components/CargaDeTickets/ModalTickets';\nimport ModalFilter from '../../components/CargaDeTickets/ModalFilter';\nimport Loader from \"react-loader-spinner\";\n\n\nexport default class Soporte extends Component {\n\n     constructor(props)\n    {\n        super(props);\n        this.state = {\n            tickets: []\n        }\n    }\n\n    componentDidMount() {\n        var url = 'https://aninfo-soporte.herokuapp.com/tickets_main_data';\n        var data = {};\n\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            mode:'cors'\n        }).then(response => response.json().then(data => {this.setState({\n            tickets: data\n        });console.log(data) }));\n\n    }\n\n\n\n    render()\n    {\n        return  (<div className='paginaTickets' style={{padding: 10 + 'px'}}>\n                    <div>\n\n                        <Row>\n                            <Col xl={12} lg={12}>\n                                <Breadcrumb>\n                                    <BreadcrumbItem><Link to=\"/\">Home</Link></BreadcrumbItem>\n                                    <BreadcrumbItem active>Soporte</BreadcrumbItem>\n                                </Breadcrumb>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col>\n                                <ButtonToolbar>\n                                    <ModalTickets></ModalTickets>\n                                </ButtonToolbar>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <ButtonToolbar>\n                                    <ModalFilter></ModalFilter>\n                                </ButtonToolbar>\n                            </Col>\n                        </Row>\n                    </div>\n                                <Row>\n                    <Col xl={{size: 8, offset: 2}}>\n                        <Card>\n                            <CardHeader tag=\"h2\">Tickets disponibles</CardHeader>\n\n                            <CardBody>\n                                <Container>\n\n                                    {this.state.isLoading ?\n                                        <Row>\n                                            <Col className=\"text-center\">\n                                                <Loader\n                                                    type=\"TailSpin\"\n                                                    color=\"#00BFFF\"\n                                                    height={50}\n                                                    width={50}></Loader>\n                                            </Col>\n                                        </Row>\n                                        :\n                                        <Row>\n                                            <Col>\n                                                <Table striped>\n                                                    <thead>\n                                                    <tr>\n                                                        <th>Nombre</th>\n                                                        <th>Estado</th>\n                                                        <th>Prioridad</th>\n                                                        <th>Fecha limite</th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n\n                                                    {this.state.tickets.map((r) =>\n                                                        <tr key={r[\"name\"]}>\n                                                            <td>{r[\"name\"]}</td>\n                                                            <td>{r[\"status\"]}</td>\n                                                            <td>{r[\"priority\"]}</td>\n                                                            <td>{r[\"limit date\"]}</td>\n                                                            <td>\n                                                                <Link to={`/soporte/ticket_detail/${r.id}`}>\n                                                                    <button type=\"button\" className=\"btn btn-primary btn-sm\">\n                                                                        Ver ticket\n                                                                    </button>\n                                                                </Link>\n\n\n                                                            </td>\n                                                        </tr>\n\n                                                    )}\n                                                    </tbody>\n                                                </Table>\n                                            </Col>\n                                        </Row>\n                                    }\n\n\n                                </Container>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n\n                </div>);\n\n    }\n\n\n}","import React, { Component } from 'react';\nimport { Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport TimePicker from 'react-times';\n\nimport 'react-times/css/classic/default.css';\nimport './ModalTickets.css'\nimport swal from \"sweetalert2\";\n\nexport default class ModalTickets extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            isShow: false,\n            ticket_original_data: props.data,\n            resources: [{}]\n        };\n\n        this.saveTicket = this.saveTicket.bind(this);\n        this.changeVisibility = this.changeVisibility.bind(this);\n\n        this.saveTicketWithEnter = this.saveTicketWithEnter.bind(this);\n\n        this.handleTypeChange = this.handleTypeChange.bind(this);\n        this.handlePriorityChange = this.handlePriorityChange.bind(this);\n\n        //this.handleTaskChange = this.handleTaskChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this)\n        this.handleStatusChange = this.handleStatusChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleResourceChange = this.handleResourceChange.bind(this);\n\n    }\n    componentDidMount() {\n        var url = 'https://squad6-backend.herokuapp.com/resources';\n\n        fetch(url, {\n            method: 'GET'\n        }).then(response => response.json().then(data => this.setState({\n            resources: data\n        })));\n        var url_tasks = 'https://aninfo-soporte.herokuapp.com/tasks';\n        fetch(url_tasks, {\n            method: 'GET'\n        }).then(response => response.json().then(data => {\n            this.setState({tasks: data});\n            if (data.length > 0){\n                this.state.task_id = data[0].codigo\n            }\n        }\n        ))\n    }\n\n    changeVisibility() {\n        this.setState({\n            isShow: !this.state.isShow\n        });\n\n    }\n\n    saveTicketWithEnter(e){\n        if(e.key === 'Enter'){\n            this.changeVisibility();\n        }\n\n    }\n\n    saveTicket() {\n        this.changeVisibility();\n        var url = 'https://aninfo-soporte.herokuapp.com/edit_ticket';\n        var data = {\n            \"ticket_id\": this.state.id,\n            \"name\": this.state.name,\n            \"description\": this.state.description,\n            \"priority\": this.state.priority,\n            \"status\": this.state.status,\n            \"resource_id\": this.state.resource_id\n        };\n        if (data[\"description\"] == \"\" || data[\"name\"] == \"\") {\n            swal.fire({\n                            title: \"Debe ingresar nombre y descripcion\",\n                            icon: \"warning\"\n                        })\n        } else {\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            mode:'cors'\n        });\n        swal.fire({\n                            title: \"Se modificó el ticket correctamente\",\n                            icon: \"success\"\n                        })};\n\n\n    }\n\n    handleTypeChange(event) {\n        this.setState({type: event.target.value});\n        console.log(event.target.value)\n    }\n    handleNameChange(event) {\n        this.setState({name: event.target.value});\n        console.log(event.target.value)\n    }\n    //handleTaskChange(event) {\n    //    this.setState({task: event.target.value});\n    //    console.log(event.target.value)\n    //}\n    handlePriorityChange(event) {\n        this.setState({priority: event.target.value});\n        console.log(event.target.value)\n    }\n    handleDescriptionChange(event) {\n        this.setState({description: event.target.value});\n        console.log(event.target.value)\n    }\n    handleStatusChange(event) {\n        this.setState({status: event.target.value});\n        console.log(event.target.value)\n    }\n    handleResourceChange(event) {\n        this.setState({resource_id: event.target.value});\n        console.log(event.target.value)\n    }\n\n\n    handleSubmit(event) {\n        //alert('A name was submitted: ' + this.state.value);\n        //event.preventDefault();\n    }\n\n    render(){\n\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.changeVisibility}>Editar Ticket</Button>\n\n                <Modal isOpen={this.state.isShow}\n                       toggle={this.changeVisibility}\n                       onKeyPress={this.saveTicketWithEnter}>\n\n                    <ModalHeader toggle={this.changeVisibility}>Editar Ticket</ModalHeader>\n\n                    <ModalBody>\n                        <FormGroup>\n                            <Label>Nombre</Label>\n                            <Input type=\"text\" value={this.state.name} onChange={this.handleNameChange}></Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Descripcion</Label>\n                            <Input type=\"text\" value={this.state.description} onChange={this.handleDescriptionChange}></Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Prioridad </Label>\n                            <Input type=\"select\" value={this.state.priority} onChange={this.handlePriorityChange}>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Estado </Label>\n                            <Input type=\"select\" value={this.state.status} onChange={this.handleStatusChange}>\n                                <option value=\"en progreso soporte\">en progreso soporte</option>\n                                <option value=\"escalado en ingeneria\">escalado en ingeneria</option>\n                                <option value=\"esperando respuesta del cliente\">esperando respuesta del cliente</option>\n                                <option value=\"resuelto\">resuelto</option>\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Recurso</Label>\n                                <Input type=\"select\" value={this.state.resource_id} onChange={this.handleResourceChange} >\n                                    {this.state.resources.map((p) => <option key={p.legajo} value={p.legajo}>{p.Nombre} {p.Apellido}</option>)}                                </Input>\n                        </FormGroup>\n                        <FormGroup check row>\n                            <Col sm={{ size: 10, offset: 9 }}>\n                                <Button color=\"primary\" onClick={this.saveTicket}>Guardar</Button>\n\n                            </Col>\n                        </FormGroup>\n\n\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport TimePicker from 'react-times';\n\nimport 'react-times/css/classic/default.css';\nimport './ModalTickets.css'\nimport swal from \"sweetalert2\";\n\nexport default class ModalTickets extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            isShow: false,\n            ticket_original_data: props.data,\n            tasks: [{}],\n            ticket_tasks: [{}]\n        };\n\n        this.saveTicket = this.saveTicket.bind(this);\n        this.changeVisibility = this.changeVisibility.bind(this);\n\n        this.saveTicketWithEnter = this.saveTicketWithEnter.bind(this);\n        this.handleTaskCheckboxChange = this.handleTaskCheckboxChange.bind(this)\n        this.isTaskChecked = this.isTaskChecked.bind(this)\n        this.getTasksToSave = this.getTasksToSave.bind(this)\n\n    }\n    componentDidMount() {\n        var url_tasks = 'https://aninfo-soporte.herokuapp.com/tasks';\n        fetch(url_tasks, {\n            method: 'GET'\n        }).then(response => response.json().then(data => {\n                this.setState({tasks: data});\n                for (var i = 0; i < this.state.tasks.length; i++) {\n                    this.state.tasks[i].checked = false;\n                }\n                var splitted_url = window.location.href.split('/');\n                console.log(splitted_url);\n                var ticket_id = splitted_url[splitted_url.length - 1];\n\n                var url_ticket_tasks = 'https://aninfo-soporte.herokuapp.com/tasks_by_id'\n                var request_data = {ticket_id: ticket_id}\n                fetch(url_ticket_tasks, {\n                    method: 'POST',\n                    body: JSON.stringify(request_data),\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    mode: 'cors'\n                }).then(response => response.json().then(tasks => {\n                    this.setState({ticket_tasks: tasks});\n                    console.log(this.state);\n                    this.checkAssignedProjects();\n                }))\n            }\n        ))\n\n\n    }\n\n    checkAssignedProjects() {\n        for (var i = 0; i < this.state.tasks.length; i++) {\n            for (var j = 0; j < this.state.ticket_tasks.length; j++) {\n\n                if (this.state.tasks[i][\"codigo\"] == this.state.ticket_tasks[j][\"task_id\"]) {\n                    this.state.tasks[i].checked = true;\n                    break;\n                }\n                this.state.tasks[i].checked=false;\n            }\n        }\n    }\n\n    changeVisibility() {\n        this.setState({\n            isShow: !this.state.isShow\n        });\n\n    }\n\n    saveTicketWithEnter(e){\n        if(e.key === 'Enter'){\n            this.changeVisibility();\n        }\n    }\n\n    handleTaskCheckboxChange(event) {\n        console.log(event.target.value);\n        for (var i = 0; i < this.state.tasks.length; i++) {\n            if (this.state.tasks[i][\"codigo\"] == event.target.value) {\n                var task = this.state.tasks[i];\n                if (task[\"checked\"]) {\n                    this.state.tasks[i][\"checked\"] = false;\n                }\n                else {\n                    this.state.tasks[i][\"checked\"] = true;\n                }\n            }\n        }\n        //this.state.tasks[event.target.value].checked = true;\n    }\n\n    isTaskChecked(id){\n       return this.state.tasks[id].checked == true;\n    }\n\n    getTasksToSave() {\n        var arr = []\n        for (var i = 0; i < this.state.tasks.length; i++) {\n            if (this.state.tasks[i].checked == true) {\n                arr.push({\n                    task_id: this.state.tasks[i][\"codigo\"],\n                    task_name: this.state.tasks[i][\"nombre\"]\n                });\n            }\n        }\n        return arr;\n    }\n    saveTicket() {\n        this.changeVisibility();\n        var url = 'https://aninfo-soporte.herokuapp.com/edit_tasks_ticket';\n        var data = {\n            \"ticket_id\": this.state.id,\n            \"tasks\": this.getTasksToSave()\n        };\n        console.log(data);\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            mode:'cors'\n        })\n        swal.fire({\n                            title: \"Tareas asignadas al ticket correctamente\",\n                            icon: \"success\"\n                        })\n    }\n\n\n    handleSubmit(event) {\n        //alert('A name was submitted: ' + this.state.value);\n        //event.preventDefault();\n    }\n\n    render(){\n\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.changeVisibility}>Editar tareas asignadas</Button>\n\n                <Modal isOpen={this.state.isShow}\n                       toggle={this.changeVisibility}\n                       onKeyPress={this.saveTicketWithEnter}>\n\n                    <ModalHeader toggle={this.changeVisibility}>Editar tareas asignadas</ModalHeader>\n\n                    <ModalBody>\n                        <FormGroup>\n                            {this.state.tasks.map((p) =>\n                           <li><input key={p.codigo} onClick={this.handleTaskCheckboxChange} type=\"checkbox\" defaultChecked={p.checked}  ref={ref => (this.modal_tasks = ref)} value={p.codigo}/> {p.nombre}</li>)}\n                        </FormGroup>\n                    </ModalBody>\n                    <FormGroup check row>\n                            <Col sm={{ size: 10, offset: 9 }}>\n                                <Button color=\"primary\" onClick={this.saveTicket}>Guardar</Button>\n                            </Col>\n                    </FormGroup>\n                </Modal>\n            </div>\n        );\n    }\n}","import {\n    Breadcrumb,\n    BreadcrumbItem,\n    ButtonToolbar,\n    Card,\n    CardBody,\n    CardHeader,\n    Col,\n    Container,\n    Row,\n    Table\n} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport React, {Component} from \"react\";\nimport ModalEdit from '../../components/CargaDeTickets/ModalEdit';\nimport ModalTasks from '../../components/CargaDeTickets/ModalTasks';\nimport Loader from \"react-loader-spinner\";\n\n\nexport default class TicketDetail extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            editable: false,\n            ticket_tasks: []\n        }\n        this.assignedTasks = this.assignedTasks.bind(this);\n\n    }\n    componentDidMount() {\n        var splitted_url = window.location.href.split('/');\n        var ticket_id = splitted_url[splitted_url.length - 1];\n\n        var tasks_url = 'https://aninfo-soporte.herokuapp.com/tasks_by_id'\n        var data = {ticket_id: ticket_id}\n        fetch(tasks_url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            mode:'cors'\n        }).then(response => response.json().then(tasks => {\n            this.setState({tasks: tasks});\n            //console.log(tasks);\n            //this.modal_tasks.setState({tasks: tasks})\n\n        }))\n\n\n        var ticket_data_url = 'https://aninfo-soporte.herokuapp.com/ticket_data'\n        var data = {ticket_id: ticket_id}\n        fetch(ticket_data_url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            mode:'cors'\n        }).then(response => response.json().then(ticket => {\n            this.setState({\n            id: ticket[\"id\"],\n            name: ticket[\"name\"],\n            description: ticket[\"description\"],\n            status: ticket[\"status\"],\n            priority: ticket[\"priority\"],\n            type: ticket[\"type\"],\n            creation_date: ticket[\"creation date\"],\n            limit_date:  ticket[\"limit date\"],\n            resource_id: ticket[\"resource id\"],\n            resource_name: ticket[\"resource name\"]\n        });\n            var url_ticket_tasks = 'https://aninfo-soporte.herokuapp.com/tasks_by_id'\n            var request_data = {ticket_id: ticket_id}\n                fetch(url_ticket_tasks, {\n                    method: 'POST',\n                    body: JSON.stringify(request_data),\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    mode: 'cors'\n                }).then(response => response.json().then(tasks => {\n                    this.setState({...this.state, ticket_tasks: tasks});\n                    console.log(this.state);\n                }));\n\n        if (ticket[\"status\"] !== \"resuelto\") {\n                this.setState({...this.state, editable: true});\n                console.log(this.state.editable);\n                this.modal_edit.setState({\n                    id: ticket[\"id\"],\n                    name: ticket[\"name\"],\n                    description: ticket[\"description\"],\n                    status: ticket[\"status\"],\n                    priority: ticket[\"priority\"],\n                    type: ticket[\"type\"],\n                    creation_date: ticket[\"creation date\"],\n                    limit_date: ticket[\"limit date\"],\n                    resource_id: ticket[\"resource id\"],\n                    resource_name: ticket[\"resource name\"]\n                });\n                this.modal_tasks.setState({\n                    id: ticket[\"id\"],\n                    name: ticket[\"name\"],\n                    description: ticket[\"description\"],\n                    status: ticket[\"status\"],\n                    priority: ticket[\"priority\"],\n                    type: ticket[\"type\"],\n                    creation_date: ticket[\"creation date\"],\n                    limit_date: ticket[\"limit date\"],\n                    resource_id: ticket[\"resource id\"],\n                    resource_name: ticket[\"resource name\"]\n                })\n            }\n            else {\n                this.setState({...this.state, editable: false});\n                console.log(this.state.editable);\n            }\n\n        }));\n    }\n\n    assignedTasks(){\n        if (this.state.ticket_tasks.length == 0) {\n            return \"Ninguna\"\n        }\n        else {\n            return \"\"\n        }\n    }\n\n    render() {\n        return (\n            <div style={{padding: 10 + 'px'}}>\n\n                <Row>\n                    <Col xl={12} lg={12}>\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem><Link to=\"/soporte\">Soporte</Link></BreadcrumbItem>\n                            <BreadcrumbItem>Detalle Ticket</BreadcrumbItem>\n                        </Breadcrumb>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={{size: 8, offset: 2}}>\n                        <Card>\n                            <CardHeader tag=\"h2\">Detalle de ticket</CardHeader>\n\n                            <CardBody>\n                                <Container>\n\n                                    {this.state.isLoading ?\n                                        <Row>\n                                            <Col className=\"text-center\">\n                                                <Loader\n                                                    type=\"TailSpin\"\n                                                    color=\"#00BFFF\"\n                                                    height={50}\n                                                    width={50}></Loader>\n                                            </Col>\n                                        </Row>\n                                        :\n                                        <Row>\n                                            <Col>\n                                                <Table striped>\n                                                    <thead>\n                                                    <tr>\n                                                        <th>Estado</th>\n                                                        <th>Prioridad</th>\n                                                        <th>Descripcion</th>\n                                                        <th>Tipo</th>\n                                                        <th>Recurso trabajando</th>\n                                                        <th>Fecha Creacion</th>\n                                                        <th>Fecha Limite</th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        <tr >\n                                                            <td>{this.state.status}</td>\n                                                            <td>{this.state.priority}</td>\n                                                            <td>{this.state.description}</td>\n                                                            <td>{this.state.type}</td>\n                                                            <td>{this.state.resource_name}</td>\n                                                            <td>{this.state.creation_date}</td>\n                                                            <td>{this.state.limit_date}</td>\n\n                                                        </tr>\n\n                                                    </tbody>\n                                                </Table>\n                                            </Col>\n                                        </Row>\n                                    }\n                    <Col>\n                        Tareas asignadas: {this.assignedTasks()}\n                    {this.state.ticket_tasks.map((p) =>\n                           <Row><li key={p.codigo}>{p.name}</li></Row>)}\n\n                        </Col>\n                    <Row>\n                        { this.state.editable &&\n                        <Row>\n                            <Col  xs=\"6\" >\n                                <ButtonToolbar>\n                                    <ModalEdit data={this.state} ref={ref => (this.modal_edit = ref)}></ModalEdit>\n                                </ButtonToolbar>\n                            </Col>\n                            <Col xs=\"auto\" >\n                                <ButtonToolbar>\n                                    <ModalTasks data={this.state} ref={ref => (this.modal_tasks = ref)}></ModalTasks>\n                                </ButtonToolbar>\n                            </Col>\n                        </Row>\n                        }\n                    </Row>\n                                </Container>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n\n            </div>)\n    }\n}","import React from 'react';\nimport { Route } from 'react-router';\nimport {Link} from \"react-router-dom\";\nimport \"./Main.css\";\nimport { Card, CardTitle, CardText, Col } from 'reactstrap';\n\nconst styles = {\n    backgroundColor: '#343a40',\n    borderColor: 'rgb(112 170 255)'\n}\n\nexport default () => (\n\n\n    <header>\n        <nav>\n            <div id=\"container\">\n                <br/>\n                <div className=\"button\" >\n                    <Link to='/proyectos'>\n                        <Card body inverse style={styles}>\n                            <CardTitle tag=\"h5\">Proyectos</CardTitle>\n                        </Card>\n                    </Link>\n                </div>\n                <br />\n                <div className=\"button\">\n                    <Link to='/recursos'>\n                        <Card body inverse style={styles}>\n                            <CardTitle tag=\"h5\">Recursos</CardTitle>\n                        </Card>\n                    </Link>\n                </div>\n                <br />\n                <div className=\"button\">              \n                    <Link to='/soporte'>\n                        <Card body inverse style={styles}>\n                            <CardTitle tag=\"h5\">Soporte</CardTitle>\n                        </Card>\n                    </Link>\n                </div>\n            </div>\n        </nav>\n    </header>\n);\n","import React, { Component } from 'react';\nimport { Form, Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\nimport './Modal.css';\nimport ModalAsignarRecurso from \"../../components/Proyectos/ModalAsignarRecurso\";\n\n\nclass ModalAgregarTarea extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            modalHeader: null,\n            modalBody: null,\n            modalOnClose: null,\n            modal: false,\n            modalTotal: false,\n        }\n        this.codigoRecurso = \"\";\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired,\n    };\n\n    crearTarea(){\n        let url = `https://proyectopsa.herokuapp.com/proyectos/${this.id}/tarea/`;\n\n        let nombreTarea = document.getElementById(\"nombreTarea\").value;\n        let fechaInicio = document.getElementById(\"fechaInicio\").value;\n        let descripcion = document.getElementById(\"descripcion\").value;\n        let fechaFin = document.getElementById(\"fechaFin\").value;\n        let prioridad = this.obtenerRadio(\"baja\", \"media\", \"alta\");\n\n        if (!this.validateRequiredEntries(nombreTarea, fechaInicio, prioridad)) return;\n        if (fechaFin != '' && fechaInicio > fechaFin) return;\n\n        let estado = this.obtenerRadio(\"iniciado\", \"enProceso\", \"finalizado\", \"en proceso\");\n\n        let data = {\n            \"nombre\": nombreTarea,\n            \"fechaInicio\": fechaInicio,\n            \"prioridad\": prioridad,\n            \"fechaFin\": fechaFin == '' ? undefined : fechaFin,\n            \"estado\": estado == null ? undefined : estado ,\n            \"descripcion\": descripcion,\n            \"codigoRecurso\": this.codigoRecurso == \"\" ? undefined : this.codigoRecurso,\n        };\n        \n        let self = this;\n\n        fetch(url, {\n            method: 'POST', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n            .then(response => response.json())\n            .then(function(json) {\n                if(json.codigo) {\n                    self.setState({modalTotal:false});\n                    self.props.onClose();\n                    self.abrirModal(\"ÉXITO\", `La tarea se generó exitosamente con código: ${json.codigo}`, () => self.props.history.push(`/proyectos/${self.id}/tareas`));\n                } else {\n                    self.abrirModal(\"ERROR DE LA REQUEST\", json.description + json.validation, () => {});\n                }\n            })\n            .catch(function(error) {\n                self.abrirModal(\"ERROR DEL FETCH\", error.message)\n            });\n    }\n\n    asignarRecurso(){\n        let self = this;\n\n        const onClick = (legajo) => {  \n            self.codigoRecurso = legajo;\n            this.setState({\n                modal: false,\n            });\n        };\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup>\n                        <ModalAsignarRecurso onClick={onClick} />\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n        this.abrirModal(\n            \"Asignar Recurso\",\n            content,\n            () => {} \n        )\n    }\n\n    componentDidMount(){\n        this.id = this.props.match.params.id;\n    }\n\n    abrirModal(header, body, onClose){\n        this.setState({\n            modalHeader: header,\n            modalBody: body,\n            modalOnClose: onClose,\n            modal: true,\n        })\n    }\n\n    obtenerRadio(radio1, radio2, radio3, differ=null){\n        if (document.getElementById(radio1).checked) return radio1;\n        if (document.getElementById(radio2).checked) return differ == null ? radio2 : differ;\n        if (document.getElementById(radio3).checked) return radio3;\n    }\n\n    obtenerEstado(){\n        if (document.getElementById(\"iniciado\").checked) return 'iniciado';\n        if (document.getElementById(\"enProceso\").checked) return 'en proceso';\n        if (document.getElementById(\"finalizado\").checked) return 'finalizado';\n    }\n\n    validateRequiredEntries(nombreTarea, fechaInicio, prioridad){\n        let valid = true;\n        let nombreClassList = document.getElementById(\"nombre\").classList;\n        let fechaClassList = document.getElementById(\"startDate\").classList;\n        let prioridadClassList = document.getElementById(\"priority\").classList;\n\n        \n        valid &= this.validate(nombreTarea, nombreClassList);\n        valid &= this.validate(fechaInicio, fechaClassList);\n        valid &= this.validatePriority(prioridadClassList);\n        \n        return valid;\n    }\n\n    validatePriority(classList){\n\n        let baja = document.getElementById(\"baja\");\n        let media = document.getElementById(\"media\");\n        let alta = document.getElementById(\"alta\");\n\n        if (!baja.checked && !media.checked && !alta.checked){\n            classList.add(\"incorrect\");\n            return false\n        } else {\n            classList.remove(\"incorrect\");\n        }\n\n        return true\n    }\n\n    validate(element, classList){\n\n        if (element == ''){\n            classList.add(\"incorrect\");\n            return false;\n        } else {\n            classList.remove(\"incorrect\");\n        }\n\n        return true;\n    }\n\n    render() {\n        let self = this;\n        const toggleModal = () => self.setState({modalTotal:!self.state.modalTotal});\n        const toggleModalError = () => self.setState({modal: !self.state.modal});\n        return (\n            <div>\n                <Button color=\"secondary\" onClick={toggleModal}>Agregar Tarea</Button>\n\n                <Modal isOpen={this.state.modalTotal} toggle={toggleModal}>\n                    <ModalHeader id=\"header\" toggle={toggleModal}>Nueva Tarea</ModalHeader>\n                    <ModalBody>\n                        <FormGroup>\n                            <Label className='parametro' for=\"nombreTarea\" id='nombre'>Nombre Tarea *</Label>\n                            <Input type=\"string\" name=\"nombreTarea\" id=\"nombreTarea\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaInicio\" id='startDate'>Fecha Inicio *</Label>\n                            <Input type=\"date\" name=\"fechaInicio\" id=\"fechaInicio\" className='general fecha' required/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaFin\" >Fecha Fin</Label>\n                            <Input type=\"date\" name=\"fechaFin\" id=\"fechaFin\" className='general fecha' />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"recurso\" id='recursoLabel'>Código Recurso</Label>\n                            <Label id=\"labelRecurso\">{this.codigoRecurso == \"\" ? \"-\" : this.codigoRecurso}</Label>\n                            <Button id=\"botonRecurso\" onClick={() => self.asignarRecurso()}>Seleccionar Recurso</Button>\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\">\n                            <Label className='parametro'>Estado</Label>\n                                <FormGroup>\n                                <Label className=\"radio\" check>\n                                    <Input type=\"radio\" name='radio' id='iniciado'  />{' '}\n                                    Iniciado\n                                </Label>\n                                <Label className=\"radio\" check>\n                                    <Input type=\"radio\" name='radio' id='enProceso' />{' '}\n                                    En Proceso\n                                </Label>\n                                <Label className=\"radio\" check>\n                                    <Input type=\"radio\" name='radio' id='finalizado'  />{' '}\n                                    Finalizado\n                                </Label>\n                                </FormGroup>\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\">\n                            <Label className='parametro' id='priority'>Prioridad *</Label>\n                                <FormGroup>\n                                <Label className=\"radio2\" check>\n                                    <Input type=\"radio\" name='radio2' id='baja'  />{' '}\n                                    Baja\n                                </Label>\n                                <Label className=\"radio2\" check>\n                                    <Input type=\"radio\" name='radio2' id='media' />{' '}\n                                    Media\n                                </Label>\n                                <Label className=\"radio2\" check>\n                                    <Input type=\"radio\" name='radio2' id='alta'  />{' '}\n                                    Alta\n                                </Label>\n                                </FormGroup>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"descripcion\" id='desc'>Descripción </Label>\n                            <Input type=\"textarea\" name=\"descripcion\" id=\"descripcion\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <Button onClick={() => this.crearTarea()}>Crear Tarea</Button>\n                        <label id='requisitosLabel'>(*) para aquellos campos que sean requeridos obligatoriamente</label>\n                    </ModalBody>\n                </Modal>\n                <Modal isOpen={this.state.modal} toggle={toggleModalError} className='popupError' onClosed={this.state.modalOnClose}>\n                    <ModalHeader toggle={toggleModalError}>{this.state.modalHeader}</ModalHeader>\n                    <ModalBody>\n                        {this.state.modalBody}\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(ModalAgregarTarea);    \n","import React, { Component } from 'react';\nimport './MainTareasPage.css';\nimport {Button, Table, Row, Col, Card, CardBody, Container, CardHeader, Breadcrumb, BreadcrumbItem, Badge   } from 'reactstrap';\nimport {Link} from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport ModalAgregarTarea from '../../components/Proyectos/ModalAgregarTarea';\n\nexport default class MainTareasPage extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            tareas: [],\n            nombreProyecto: \"\",\n            isLoading: true,\n        }\n    }\n\n    componentDidMount()\n    {\n        this.loadTareas();\n    }\n\n    loadTareas(){\n        const id = this.props.match.params.id;\n        fetch(`https://proyectopsa.herokuapp.com/proyectos/${id}/tarea`)\n            .then(r => r.json())\n            .then((tareas) =>\n            {\n                this.setState({\n                    tareas: tareas,\n                    isLoading: false\n                });\n            }, (error) => {console.log(error)}\n        );\n\n        fetch(`https://proyectopsa.herokuapp.com/proyectos/${id}`)\n            .then(r => r.json())\n            .then((proyecto) =>\n            {   \n                console.log(proyecto)\n                this.setState({\n                    nombreProyecto: proyecto.proyecto.nombre\n                });\n            }, (error) => {console.log(error);}\n        );\n    }\n\n    getBadgeColor(estado){\n        switch (estado){\n            case \"Iniciado\":\n                return \"danger\"\n            case \"Finalizado\":\n                return \"success\"\n            case \"En proceso\":\n                return \"warning\"\n        }\n    }\n\n    render()\n    {\n        const id = this.props.match.params.id;\n        return  <div>\n                    <Row>\n                            <Col xl={12} lg={12}>\n                                <Breadcrumb>\n                                    <BreadcrumbItem><Link to=\"/\">Home</Link></BreadcrumbItem>\n                                    <BreadcrumbItem><Link to={`/proyectos/`}>Proyectos</Link></BreadcrumbItem>\n                                    <BreadcrumbItem active>Tareas</BreadcrumbItem>\n                                </Breadcrumb>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col xl={{size: 6, offset: 3}}>\n                                <Card>\n                                    <CardHeader tag=\"h2\">Tareas</CardHeader>\n\n                                    <CardBody>\n                                        <Container>\n\n                                            {this.state.isLoading ?\n                                                <Row>\n                                                    <Col className=\"text-center\">\n                                                        <Loader\n                                                            type=\"TailSpin\"\n                                                            color=\"#00BFFF\"\n                                                            height={50}\n                                                            width={50}></Loader>\n                                                    </Col>\n                                                </Row>\n                                                :\n                                                <Row>\n                                                    <Col>\n                                                        <Table striped>\n                                                            <thead>\n                                                            <tr>\n                                                                <th>Nombre</th>\n                                                                <th>Estado</th>\n                                                                <th><ModalAgregarTarea onClose={() => this.loadTareas()}></ModalAgregarTarea></th>\n                                                            </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                            \n                                                            {this.state.tareas.map((r) =>{\n                                                                let estadoString = r.estado.charAt(0).toUpperCase() + r.estado.slice(1);\n                                                                let badgeColor = this.getBadgeColor(estadoString);\n                                                                return <tr key={r.legajo}>\n                                                                    <td>{r.nombre}</td>\n                                                                    <td><Badge color={badgeColor}>{estadoString}</Badge></td>\n                                                                    <td>\n                                                                    <Link to={`/proyectos/${id}/tareas/${r.codigo}`}>\n                                                                        <Button color=\"info\">Ver Tarea</Button>\n                                                                    </Link>\n                                                                    </td>\n                                                                </tr>\n                                                            }\n                                                            )}\n                                                            </tbody>\n                                                        </Table>\n                                                    </Col>\n                                                </Row>\n                                            }\n                                        </Container>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                </div>\n    \n    }\n}\n","import './App.css';\nimport React from \"react\";\nimport CargaDeHorasPage from '../pages/CargaDeHoras/CargaDeHorasPage';\nimport MainProyectosPage from '../pages/Proyectos/MainProyectosPage';\nimport RecursosPage from './../pages/Recursos/RecursosPage';\nimport TareaPage from '../pages/Proyectos/TareaPage';\nimport Soporte from './../pages/Soporte/Soporte';\nimport TicketDetail from './../pages/Soporte/DetalleTicket';\nimport Main from './../pages/Main';\nimport {Route, Switch} from \"react-router\";\nimport { Col } from 'reactstrap';\nimport { useHistory} from \"react-router-dom\";\nimport MainTareasPage from \"../pages/Proyectos/MainTareasPage\";\nimport { FaHome } from \"react-icons/fa\";\n\nfunction App(props) {\n    const history = useHistory();\n\n  return (\n    <div className=\"App\">\n        <header className=\"App-header-ppal\">\n            <div id='headerContainer' className=\"MuiToolbar-root MuiToolbar-root App-subheader-height MuiToolbar-gutters\">\n                <div id='homeButton' onClick={() => history.push('/')}>\n                    <Col xl={12} lg={12}> {/*????*/}\n                        <FaHome/> HOME\n                    </Col>\n                </div>\n                <div id='companyName'>\n                    <Col xl={12} lg={12}>\n                        PSA\n                    </Col>\n                </div>\n            </div>\n        </header>\n\n        <main>\n            <Switch>\n                <Route exact path=\"/proyectos\" component={MainProyectosPage} />\n                <Route exact path=\"/proyectos/:id/tareas\" component={MainTareasPage} />\n                <Route exact path=\"/proyectos/:id/tareas/:idtarea\" component={TareaPage} />\n                <Route exact path=\"/\" component={Main} />\n                <Route exact path=\"/recursos\" component={RecursosPage} />\n                <Route exact path=\"/cargadehoras/:id\" component={CargaDeHorasPage} />\n                <Route exact path=\"/soporte\" component={Soporte} />\n                <Route path=\"/soporte/ticket_detail\" component={TicketDetail} />\n            </Switch>\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter  } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}