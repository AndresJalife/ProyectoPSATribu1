{"version":3,"sources":["models/CargaDeHoras/HoursModel.js","components/CargaDeHoras/ModalHours.js","components/CargaDeHoras/GridItemHours.js","components/CargaDeHoras/GridHours.js","pages/CargaDeHoras/CargaDeHorasPage.js","components/Proyectos/ProyectoCard.js","pages/Proyectos/MainProyectosPage.js","pages/Proyectos/AgregarProyectoPage.js","pages/Recursos/RecursosPage.js","pages/Proyectos/TareaPage.js","pages/Soporte.js","pages/Main.js","components/Proyectos/TareaCard.js","pages/Proyectos/MainTareasPage.js","pages/Proyectos/AgregarTareaPage.js","components/App.js","index.js"],"names":["HoursModel","id","file","idProject","idTask","quantityHours","quantityMinutes","date","loadingDate","nameProject","nameTask","this","newIdProject","newIdTask","dateString","toString","year","substr","mont","days","hours","minutes","ModalHours","props","state","isShow","hoursModel","lstProjects","lstTasks","isTaskDisabled","taskIsLoading","errorMessage","saveHours","bind","changeVisibility","saveHoursWithEnter","setState","e","key","isFormValid","data","dateAsString","getDateAsString","self","fetch","method","mode","headers","redirect","referrerPolicy","body","JSON","stringify","then","response","swal","text","icon","onReload","catch","error","newHours","setNewHours","parseInt","hour","minute","newDate","stringNewDate","replace","isNaN","completeData","r","json","projects","console","log","a","urlTask","getIdProject","tasks","setIdProject","shouldTaskDisabled","setIdTask","Button","color","onClick","Modal","isOpen","toggle","onKeyPress","ModalHeader","ModalBody","FormGroup","Label","Input","type","onChange","onProjectChange","target","value","map","p","codigo","nombre","Col","className","height","width","disabled","onTaskChange","t","Row","lg","theme","time","getHoursAsString","timeMode","timeConfig","from","to","step","unit","onTimeChange","max","Date","toISOString","split","onDateChange","check","row","sm","size","offset","Alert","Component","GridItemHours","isLoading","deleteHoursById","url","title","dangerMode","buttons","answerIsNo","taskByProject","tarea","nombreProyecto","colSpan","style","marginTop","GridHours","lstHours","onReloadGrid","hoursByFile","lstHoursModel","forEach","x","model","push","sort","b","Card","CardHeader","tag","display","xl","paddingLeft","CardBody","Container","length","Table","striped","hover","h","CargaDeHorasPage","resource","match","params","padding","Breadcrumb","BreadcrumbItem","active","Nombre","Apellido","CardTitle","CardText","legajo","ProyectoCard","estadoString","project","estado","charAt","toUpperCase","slice","Badge","descripcion","MainProyectosPage","AgregarProyectoPage","modalHeader","modalBody","modalOnClose","modal","document","getElementById","fechaInicio","fechaFin","horas","presupuesto","validateRequiredEntries","obtenerEstado","undefined","abrirModal","history","description","validation","message","header","onClose","checked","nombreClassList","classList","fechaClassList","descClassList","validate","element","valid","add","remove","toggleModal","Form","for","name","maxLength","required","crearProyecto","onClosed","withRouter","RecursosPage","lstResources","resources","TareaPage","errorModal","acceptModalButton","prioridad","codigoRecurso","content","validateInputText","validateRecurso","patch","validarRadio","obtenerRadio","fechaFinal","radio1","radio2","radio3","result1","result2","result3","elements","labelID","labelClassList","primero","segundo","tercero","classListId","acceptButton","tareaID","idtarea","proyectoID","trueTarea","closeBtn","codigoProyecto","asignarRecurso","modificarFechaFinal","modificarEstado","modificarPrioridad","close","Soporte","TareaCard","MainTareasPage","tareas","AgregarTareaPage","nombreTarea","differ","prioridadClassList","validatePriority","baja","media","alta","crearTarea","App","useHistory","exact","path","component","Main","ReactDOM","render","basename","process"],"mappings":"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","file":"static/js/main.64a1bc6c.chunk.js","sourcesContent":["export default class HoursModel {\n\n    id = 0\n    file = 0\n    idProject = 0\n    idTask = 0\n    quantityHours = 0\n    quantityMinutes = 0\n    date = 0\n    loadingDate = 0\n    nameProject = \"\"\n    nameTask = \"\";\n\n    constructor(){\n        this.id = 0;\n        this.file = 0;\n        this.idProject = 0;\n        this.idTask = 0;\n        this.quantityHours = 0;\n        this.quantityMinutes = 15;\n        this.date = 0;\n        this.loadingDate = 0;\n        this.nameProject = \"\";\n        this.nameTask = \"\";\n    }\n\n    HoursModel(otherHours){\n        this.id = otherHours.id;\n        this.file = otherHours.file;\n        this.idProject = otherHours.idProject;\n        this.idTask = otherHours.idTask;\n        this.quantityHours = otherHours.quantityHours;\n        this.quantityMinutes = otherHours.quantityMinutes;\n        this.date = otherHours.date;\n        this.loadingDate = otherHours.loadingDate;\n        this.nameProject = otherHours.nameProject;\n        this.nameTask = otherHours.nameTask;\n    }\n\n    HoursModel(id, file, idProject, idTask, quantityHours, quantityMinutes, date, loadingDate, nameProject, nameTask){\n        this.id = id;\n        this.file = file;\n        this.idProject = idProject;\n        this.idTask = idTask;\n        this.quantityHours = quantityHours;\n        this.quantityMinutes = quantityMinutes;\n        this.date = date;\n        this.loadingDate = loadingDate;\n        this.nameProject = nameProject;\n        this.nameTask = nameTask;\n    }\n\n    getIdProject(){\n        return this.idProject;\n    }\n\n    setIdProject(newIdProject){\n        this.idProject = newIdProject;\n    }\n\n    getIdTask(){\n        return this.idTask;\n    }\n\n    setIdTask(newIdTask){\n        this.idTask = newIdTask;\n    }\n\n    getHoursAsString(){\n        return this.quantityHours + \":\" + this.quantityMinutes;\n    }\n\n    getDateAsString(){\n        let dateString = this.date.toString();\n\n        let year = dateString.substr(0,4),\n            mont = dateString.substr(4,2),\n            days = dateString.substr(6,2);\n\n        return `${days}/${mont}/${year}`;\n    }\n\n    setNewHours(hours, minutes){\n        this.quantityHours = hours;\n        this.quantityMinutes = minutes;\n    }\n\n    completeData(){\n        if ((this.idTask === 0) ||\n            ((this.quantityHours === 0) && (this.quantityMinutes === 0)) ||\n            (this.date === 0))\n            return false;\n\n        return true;\n    }\n}","import React, { Component } from 'react';\nimport { Alert, Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport TimePicker from 'react-times';\nimport HoursModel from '../../models/CargaDeHoras/HoursModel';\n\nimport 'react-times/css/classic/default.css';\nimport './ModalHours.css'\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport PropTypes from \"prop-types\";\nimport swal from \"sweetalert\";\n\nexport default class ModalHours extends Component {\n\n    static propTypes = {\n        onReload: PropTypes.func.isRequired\n    };\n\n    constructor(props){\n        super(props);\n\n        let hours = new HoursModel();\n        hours.file = props.file;\n\n        this.state = {\n            isShow: false,\n            hoursModel: hours,\n            lstProjects: [],\n            lstTasks: [],\n            isTaskDisabled: true,\n            taskIsLoading: false,\n            //alert: false\n            errorMessage:\"\"\n        };\n\n        this.saveHours = this.saveHours.bind(this);\n        this.changeVisibility = this.changeVisibility.bind(this);\n\n        this.saveHoursWithEnter = this.saveHoursWithEnter.bind(this);\n    }\n\n    changeVisibility() {\n        this.setState({\n            isShow: !this.state.isShow,\n            //alert: false\n            errorMessage: \"\"\n        });\n\n    }\n\n    saveHoursWithEnter(e){\n        if(e.key === 'Enter'){\n            this.changeVisibility();\n        }\n    }\n\n    saveHours() {\n\n        if (!this.isFormValid()){\n            this.setState({\n                //alert: true\n                errorMessage: \"Por favor, complete todos los campos obligatorios\"\n            });\n            return;\n        }\n\n        let url = \"https://squad6-backend.herokuapp.com/hours\";\n\n        let data = {\n            file: this.state.hoursModel.file,\n            idProject: this.state.hoursModel.idProject,\n            idTask: this.state.hoursModel.idTask,\n            quantityHours: this.state.hoursModel.quantityHours,\n            quantityMinutes: this.state.hoursModel.quantityMinutes,\n            date: this.state.hoursModel.date\n        };\n\n        var dateAsString = this.state.hoursModel.getDateAsString();\n\n        let self = this;\n\n        fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        .then(function(response) {\n\n            swal({\n                text: \"Se cargaron \" + data.quantityHours + \":\" + data.quantityMinutes + \" horas del \" + dateAsString + \" con éxito.\",\n                icon: \"success\"\n            }).then(() => {\n                self.changeVisibility();\n                self.props.onReload();\n            });\n        })\n        .catch(function(error) {\n            self.setState({\n                //alert: true\n                errorMessage: \"Error\"\n            });\n        });\n    }\n\n    onTimeChange(newHours) {\n        this.state.hoursModel.setNewHours(parseInt(newHours.hour), parseInt(newHours.minute));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    onDateChange(newDate){\n        var stringNewDate = newDate.replace(/-/gi, \"\");\n\n        if (isNaN(parseInt(stringNewDate))){\n            this.state.hoursModel.date = 0;\n            return;\n        }\n        this.state.hoursModel.date = parseInt(stringNewDate);\n    }\n\n    isFormValid(){\n        return this.state.hoursModel.completeData();\n    }\n\n    componentDidMount()\n    {\n        //https://proyectopsa.herokuapp.com/proyectos/\n        fetch('https://proyectopsa.herokuapp.com/proyectos/')\n            .then(r => r.json())\n            .then((projects) =>\n            {\n                this.setState({\n                    lstProjects: projects\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    async getListTasks(){\n\n        let urlTask = 'https://proyectopsa.herokuapp.com/proyectos/' + this.state.hoursModel.getIdProject() + '/tarea/';\n\n        fetch(urlTask)\n            .then(r => r.json())\n            .then((tasks) =>\n            {\n                this.setState({\n                    lstTasks: tasks\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    onProjectChange(newIdProject){\n\n        this.setState({taskIsLoading: true});\n\n        this.state.hoursModel.setIdProject(newIdProject);\n\n        let shouldTaskDisabled = (newIdProject == 0);\n\n        if (shouldTaskDisabled){\n            this.setState({\n                hoursModel: this.state.hoursModel,\n                lstTasks: [],\n                isTaskDisabled: shouldTaskDisabled,\n                taskIsLoading: false\n            });\n        } else {\n            let urlTask = 'https://proyectopsa.herokuapp.com/proyectos/' + this.state.hoursModel.getIdProject() + '/tarea/';\n\n            fetch(urlTask)\n                .then(r => r.json())\n                .then((tasks) =>\n                {\n                    this.setState({\n                        hoursModel: this.state.hoursModel,\n                        lstTasks: tasks,\n                        isTaskDisabled: false,\n                        taskIsLoading: false\n                    });\n                }, (error) => {console.log(error);});\n        }\n    }\n\n    onTaskChange(newIdTask){\n        this.state.hoursModel.setIdTask(parseInt(newIdTask));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    render(){\n\n        return (\n            <div>\n\n                <Button color=\"primary\" onClick={this.changeVisibility}>Nueva</Button>\n\n                <Modal isOpen={this.state.isShow}\n                       toggle={this.changeVisibility}\n                       onKeyPress={this.saveHoursWithEnter}>\n\n                    <ModalHeader toggle={this.changeVisibility}>Carga de Horas</ModalHeader>\n\n                    <ModalBody onKeyPress={this.saveHoursWithEnter}>\n                        <FormGroup>\n                            <Label>Proyecto *</Label>\n                            <Input type=\"select\"\n                                   onChange={e => this.onProjectChange(e.target.value)}>\n                                <option value=\"0\"></option>\n                                {this.state.lstProjects.map((p) => <option key={p.codigo} value={p.codigo}>{p.nombre}</option>)}\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Tarea *</Label>\n                            {\n                                this.state.taskIsLoading ?\n                                    <Col className=\"text-center\">\n                                        <Loader\n                                            type=\"TailSpin\"\n                                            color=\"#00BFFF\"\n                                            height={30}\n                                            width={30}></Loader>\n                                    </Col>\n                                    :\n                                    <Input type=\"select\"\n                                           disabled={this.state.isTaskDisabled}\n                                           onChange={e => this.onTaskChange(e.target.value)}>\n                                        <option value=\"0\"></option>\n                                        {this.state.lstTasks.map((t) => <option key={t.codigo} value={t.codigo}>{t.nombre}</option>)}\n                                    </Input>\n                            }\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Row>\n                                <Col lg={6}>\n                                    <Label>Cantidad de Horas *</Label>\n                                    <TimePicker\n                                        theme=\"classic\"\n                                        time={this.state.hoursModel.getHoursAsString()}\n                                        timeMode=\"24\"\n                                        timeConfig={{\n                                            from: '0:15',\n                                            to: '23:45',\n                                            step: 15,\n                                            unit: 'minutes'\n                                        }}\n                                        onTimeChange={this.onTimeChange.bind(this)}/>\n                                </Col>\n\n                                <Col lg={6}>\n                                    <Label>Fecha *</Label>\n                                    <Input type=\"date\"\n                                           max={(new Date().toISOString().split(\"T\")[0])}\n                                           onChange={e => this.onDateChange(e.target.value)}></Input>\n                                </Col>\n                            </Row>\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Col className=\"col-datos-oblig\">\n                                (*) para aquellos campos que sean requeridos obligatoriamente\n                                <hr/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup check row>\n                            <Col sm={{ size: 10, offset: 9 }}>\n                                <Button color=\"primary\" onClick={this.saveHours}>Guardar</Button>\n                            </Col>\n                        </FormGroup>\n\n                        {this.state.errorMessage ? (\n                          <Alert id=\"alerta\" color=\"danger\"> {this.state.errorMessage} </Alert>\n                        ) : (\n                          null\n                        )}\n                    </ModalBody>\n\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {Button, Table, Row, Col, Card, CardBody, Container} from 'reactstrap';\nimport HoursModel from \"../../models/CargaDeHoras/HoursModel\";\nimport PropTypes from \"prop-types\";\nimport { FaTrashAlt, FaPencilAlt } from \"react-icons/fa\";\nimport {Link} from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport swal from \"sweetalert\";\n\nexport default class GridItemHours extends Component {\n    static propTypes = {\n        hours: PropTypes.object.isRequired,\n        onReload: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            nameProject: \"\",\n            nameTask: \"\"\n        };\n\n        this.deleteHoursById = this.deleteHoursById.bind(this);\n    }\n\n    deleteHoursById(){\n        let url = 'https://squad6-backend.herokuapp.com/hours/' + this.props.hours.id;\n\n        swal({\n            title: \"Eliminar la hora\",\n            text: \"¿Estás seguro que desea eliminar \" + this.props.hours.quantityHours + \":\" + this.props.hours.quantityMinutes + \" horas del \" + this.props.hours.getDateAsString() + \"?\",\n            icon: \"warning\",\n            dangerMode: \"true\",\n            buttons: [\"Si\", \"No\"]\n        }).then(answerIsNo=>{\n            if(!answerIsNo){\n\n                this.setState({isLoading: true});\n\n                fetch(url, {\n                    method: 'DELETE'}).then(() => {\n                    swal({text: \"Se borraron \" + this.props.hours.quantityHours + \":\" + this.props.hours.quantityMinutes + \" horas del \" + this.props.hours.getDateAsString() + \" con éxito.\" ,\n                        icon: \"success\"});\n                    this.setState({isLoading: false});\n                    this.props.onReload();\n                })\n            }\n        });\n    }\n\n    componentDidMount() {\n\n        let url = 'https://proyectopsa.herokuapp.com/proyectos/' +\n                   this.props.hours.idProject.toString() + '/tarea/' +\n                   this.props.hours.idTask.toString();\n\n        fetch(url)\n            .then(r => r.json())\n            .then((taskByProject) =>\n            {\n\n                let nameTask = \"-\",\n                    nameProject = \"-\";\n\n                if (taskByProject.tarea != null){\n                    nameTask = taskByProject.tarea.nombre;\n                    nameProject = taskByProject.tarea.nombreProyecto;\n                }\n\n                this.setState({\n                    isLoading: false,\n                    nameProject: nameProject,\n                    nameTask: nameTask\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render(){\n        return (\n\n            this.state.isLoading ?\n                    <tr>\n                        <td colSpan={7}>\n                            <Loader\n                                type=\"TailSpin\"\n                                color=\"#00BFFF\"\n                                height={15}\n                                width={15}></Loader>\n                        </td>\n                    </tr>\n                :\n                    <tr>\n                        <td>{this.state.nameProject}</td>\n                        <td>{this.state.nameTask}</td>\n                        <td>{this.props.hours.getDateAsString()}</td>\n                        <td>{this.props.hours.quantityHours}</td>\n                        <td>{this.props.hours.quantityMinutes}</td>\n                        <td>\n                            <button type=\"button\" className=\"btn btn-sm btn-rounded \" style={{marginTop: \"-7px\", color: \"blue\"}}>\n                                <FaPencilAlt/>\n                            </button>\n                        </td>\n                        <td>\n                            <button type=\"button\" className=\"btn btn-sm btn-rounded\" onClick = {this.deleteHoursById} style={{marginTop: \"-7px\", color: \"red\"}}>\n                                <FaTrashAlt/>\n                            </button>\n                        </td>\n                    </tr>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {Button, Table, Row, Col, Card, CardBody, Container, CardHeader, ButtonToolbar} from 'reactstrap';\nimport HoursModel from \"../../models/CargaDeHoras/HoursModel\";\nimport GridItemHours from \"./GridItemHours\";\nimport ModalHours from \"./ModalHours\";\nimport Loader from \"react-loader-spinner\";\nimport PropTypes from \"prop-types\";\n\nexport default class GridHours extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            lstHours: []\n        };\n\n        this.onReloadGrid = this.onReloadGrid.bind(this);\n    }\n\n    componentDidMount() {\n\n        fetch('https://squad6-backend.herokuapp.com/hoursFile/' + this.props.file.toString())\n            .then(r => r.json())\n            .then((hoursByFile) =>\n            {\n                let lstHoursModel = [];\n\n                hoursByFile.forEach(x => {\n                    let model = new HoursModel();\n\n                    model.id = x.id;\n                    model.file = x.file;\n                    model.idProject = x.idProject;\n                    model.idTask = x.idTask;\n                    model.quantityHours = x.quantityHours;\n                    model.quantityMinutes = x.quantityMinutes;\n                    model.date = x.date;\n                    model.loadingDate = x.loadingDate;\n\n                    lstHoursModel.push(model);\n                });\n\n                lstHoursModel.sort((a, b) => a.date < b.date ? 1 : -1);\n                this.setState({\n                    isLoading: false,\n                    lstHours: lstHoursModel\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    onReloadGrid(){\n        fetch('https://squad6-backend.herokuapp.com/hoursFile/' + this.props.file.toString())\n            .then(r => r.json())\n            .then((hoursByFile) =>\n            {\n                let lstHoursModel = [];\n\n                hoursByFile.forEach(x => {\n                    let model = new HoursModel();\n\n                    model.id = x.id;\n                    model.file = x.file;\n                    model.idProject = x.idProject;\n                    model.idTask = x.idTask;\n                    model.quantityHours = x.quantityHours;\n                    model.quantityMinutes = x.quantityMinutes;\n                    model.date = x.date;\n                    model.loadingDate = x.loadingDate;\n\n                    lstHoursModel.push(model);\n                });\n\n                lstHoursModel.sort((a, b) => a.date < b.date ? 1 : -1);\n                this.setState({\n                    isLoading: false,\n                    lstHours: lstHoursModel\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render(){\n        return (\n            <div>\n                <Card>\n\n                    <CardHeader tag=\"h2\" style={{display: \"flex\"}}>\n                        <Col xl={10} style={{paddingLeft: \"12%\"}}>\n                            Horas Cargadas\n                        </Col>\n\n                        <Col xl={2}>\n                            <ModalHours file={this.props.file} onReload={this.onReloadGrid}></ModalHours>\n                        </Col>\n                    </CardHeader>\n\n                    <CardBody>\n                        <Container>\n\n                            {this.state.isLoading ?\n                                <Col className=\"text-center\">\n                                    <Loader\n                                        type=\"TailSpin\"\n                                        color=\"#00BFFF\"\n                                        height={50}\n                                        width={50}></Loader>\n                                </Col>\n                            :\n                                this.state.lstHours.length ?\n                                    <Table striped hover size=\"sm\">\n                                        <thead>\n                                        <tr>\n                                            <th>Proyecto</th>\n                                            <th>Tarea</th>\n                                            <th>Fecha</th>\n                                            <th>Horas</th>\n                                            <th>Minutos</th>\n                                            <th>Modificar</th>\n                                            <th>Eliminar</th>\n                                        </tr>\n                                        </thead>\n\n                                        <tbody>\n                                        {this.state.lstHours.map((h) =>\n                                            <GridItemHours key={h.id} hours={h} onReload={this.onReloadGrid}></GridItemHours>\n                                        )}\n                                        </tbody>\n                                    </Table>\n                                    :\n                                    <h4>El recurso no posee horas cargadas.</h4>\n                            }\n                        </Container>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {\n    Breadcrumb, BreadcrumbItem, Card, CardImg, CardText, CardBody, CardHeader, CardTitle,\n    CardSubtitle, Button, Label, ButtonToolbar, Row, Col, Container, Badge\n} from 'reactstrap';\nimport ModalHours from '../../components/CargaDeHoras/ModalHours';\nimport {Link} from \"react-router-dom\";\nimport GridHours from \"../../components/CargaDeHoras/GridHours\";\nimport Loader from \"react-loader-spinner\";\n\nexport default class CargaDeHorasPage extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            resource: { },\n            isLoading: true,\n            lstHours: []\n        };\n    }\n\n    componentDidMount()\n    {\n        const id = this.props.match.params.id;\n        fetch(`https://squad6-backend.herokuapp.com/resources/${id}`)\n            .then(r => r.json())\n            .then((resource) =>\n            {\n                this.setState({\n                    isLoading: false,\n                    resource: resource\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render() {\n        return (\n            <div style={{padding: 10 + 'px'}}>\n                <Row>\n                    <Col xl={12} lg={12}>\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem><Link to=\"/recursos\">Recursos</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{this.state.resource.Nombre} {this.state.resource.Apellido}</BreadcrumbItem>\n                        </Breadcrumb>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={4} lg={4}> \n                        <Card>\n                            <CardHeader tag=\"h4\">Datos Principales</CardHeader>\n\n                            <CardBody>\n                                <Container>\n\n                                    {this.state.isLoading ?\n                                        <Row>\n                                            <Col className=\"text-center\">\n                                                <Loader\n                                                    type=\"TailSpin\"\n                                                    color=\"#00BFFF\"\n                                                    height={50}\n                                                    width={50}></Loader>\n                                            </Col>\n                                        </Row>\n\n                                        :\n                                        <Row>\n                                            <Col xl={4} lg={4}>\n                                                <CardTitle tag=\"h6\">Legajo</CardTitle>\n                                                <CardText>{this.state.resource.legajo}</CardText>\n                                            </Col>\n\n                                            <Col xl={4} lg={4}>\n                                                <CardTitle tag=\"h6\">Nombre</CardTitle>\n                                                <CardText>{this.state.resource.Nombre}</CardText>\n                                            </Col>\n\n                                            <Col xl={4} lg={4}>\n                                                <CardTitle tag=\"h6\">Apellido</CardTitle>\n                                                <CardText>{this.state.resource.Apellido}</CardText>\n                                            </Col>\n\n                                        </Row>\n                                    }\n                                </Container>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n                    <Col xl={8} lg={8}>\n                        <GridHours file={this.props.match.params.id}></GridHours>\n                    </Col>\n\n                </Row>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button, Col, Row, Container, Badge\n} from 'reactstrap';\n\nexport default function ProyectoCard (props)\n{\n    const estadoString = props.project.estado.charAt(0).toUpperCase() + props.project.estado.slice(1);\n    const estadoColor = \"success\";\n    return (\n        <div>\n            <Card>\n                <CardBody>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <CardTitle tag=\"h4\">{props.project.nombre}</CardTitle>\n                            </Col>\n                            <Col>\n                                <h4><Badge color={estadoColor}>{estadoString}</Badge></h4>\n                            </Col>\n                            <Col>\n                                <CardText>{props.project.descripcion}</CardText>\n                            </Col>\n                            <Col>\n                            </Col>\n                            <Col body className=\"text-center\">\n                                <Link to={`/proyectos/${props.project.codigo}/tareas`}>\n                                <Button color=\"info\">Ver Tareas</Button>\n                                </Link>\n                            </Col>\n                        </Row>\n                    </Container>\n                </CardBody>\n            </Card>\n            <br />\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport ProyectoCard from '../../components/Proyectos/ProyectoCard';\nimport './MainProyectosPage.css';\nimport { Button } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\n\nexport default class MainProyectosPage extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            projects: []\n        }\n    }\n\n    componentDidMount()\n    {\n        fetch('https://proyectopsa.herokuapp.com/proyectos/')\n            .then(r => r.json())\n            .then((projects) =>\n            {\n                this.setState({\n                    projects: projects\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render()\n    {\n        return  (<div className='paginaProyectos'>\n                    <h1 id='tituloProyectos'>Proyectos</h1>\n                    <br/>\n                    <div id='titlesContainer'>\n                        <p>Nombre Proyecto</p>\n                        <p id=\"estadoTitle\">Estado</p>\n                        <NavLink to=\"/nuevoProyecto\" className=\"botonAgregarProyectoContainer\">Agregar Proyecto</NavLink>\n                    </div>\n                    <br />\n                    {this.state.projects.map((p) => <ProyectoCard key={p.codigo} project={p} />)}\n                </div>);\n        \n    }\n}\n","import React, { Component } from 'react'\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\nimport './AgregarProyectoPage.css';\n\nclass AgregarProyectoPage extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            modalHeader: null,\n            modalBody: null,\n            modalOnClose: null,\n            modal: false,\n        }\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n    crearProyecto(){\n\n        let url = \"https://proyectopsa.herokuapp.com/proyectos/\";\n\n        let nombreProyecto = document.getElementById(\"nombreProyecto\").value;\n        let fechaInicio = document.getElementById(\"fechaInicio\").value;\n        let descripcion = document.getElementById(\"descripcion\").value;\n        let fechaFin = document.getElementById(\"fechaFin\").value;\n        let horas = document.getElementById(\"horas\").value;\n        let presupuesto = document.getElementById(\"presupuesto\").value;\n\n        if (!this.validateRequiredEntries(nombreProyecto, fechaInicio, descripcion)) return;\n\n        let estado = this.obtenerEstado();\n\n        let data = {\n            \"nombre\": nombreProyecto,\n            \"fechaInicio\": fechaInicio,\n            \"fechaFin\": fechaFin == '' ? undefined : fechaFin,\n            \"estado\": estado == null ? undefined : estado ,\n            \"horas\": horas == \"\" ? undefined : parseInt(horas) ,\n            \"presupuesto\": presupuesto == '' ? undefined : parseInt(presupuesto),\n            \"descripcion\": descripcion\n        };\n        \n        let self = this;\n\n        fetch(url, {\n            method: 'POST', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n            .then(response => response.json())\n            .then(function(json) {\n                if(json.codigo) {\n                    self.abrirModal(\"ÉXITO\", `El proyecto se generó exitosamente con código: ${json.codigo}`, () => self.props.history.push(`/proyectos/`));\n                } else {\n                    self.abrirModal(\"ERROR\", json.description +  json.validation, () => {});\n                }\n            })\n            .catch(function(error) {\n                self.abrirModal(\"ERROR\", error.message, () => {})\n            });\n    }\n\n    abrirModal(header, body, onClose){\n        this.setState({\n            modalHeader: header,\n            modalBody: body,\n            modalOnClose: onClose,\n            modal: true,\n        })\n    }\n\n    obtenerEstado(){\n        if (document.getElementById(\"iniciado\").checked) return 'iniciado';\n        if (document.getElementById(\"enProceso\").checked) return 'en proceso';\n        if (document.getElementById(\"finalizado\").checked) return 'finalizado';\n    }\n\n    validateRequiredEntries(nombreProyecto, fechaInicio, descripcion){\n        let valid = true;\n        let nombreClassList = document.getElementById(\"nombre\").classList;\n        let fechaClassList = document.getElementById(\"startDate\").classList;\n        let descClassList = document.getElementById(\"desc\").classList;\n        \n        valid = this.validate(nombreProyecto, nombreClassList);\n        valid = this.validate(fechaInicio, fechaClassList);\n        valid = this.validate(descripcion, descClassList);\n        return valid;\n    }\n\n    validate(element, classList){\n        let valid = true;\n\n        if (element == ''){\n            classList.add(\"incorrect\");\n            valid = false;\n        } else {\n            classList.remove(\"incorrect\");\n        }\n\n        return valid;\n    }\n\n    render() {\n        let self = this;\n        const toggleModal = () =>self.setState({modal:!self.state.modal});\n\n        return (\n            <div>\n                <div className='formContainer'>\n                    <Form>\n                        <FormGroup>\n                            <Label className='parametro' for=\"nombreProyecto\" id='nombre'>Nombre Proyecto *</Label>\n                            <Input type=\"string\" name=\"nombreProyecto\" id=\"nombreProyecto\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaInicio\" id='startDate'>Fecha Inicio *</Label>\n                            <Input type=\"date\" name=\"fechaInicio\" id=\"fechaInicio\" className='general fecha' required/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaFin\" >Fecha Fin</Label>\n                            <Input type=\"date\" name=\"fechaFin\" id=\"fechaFin\" className='general fecha' />\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\">\n                            <Label className='parametro'>Estado</Label>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='iniciado'  />{' '}\n                                    Iniciado\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='enProceso' />{' '}\n                                    En Proceso\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check >\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='finalizado'  />{' '}\n                                    Finalizado\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"horas\">Horas</Label>\n                            <Input type=\"number\" name=\"horas\" id=\"horas\" className='general' />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"presupuesto\" >Presupuesto</Label>\n                            <Input type=\"number\" name=\"presupuesto\" id=\"presupuesto\" className='general' />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"descripcion\" id='desc'>Descripción *</Label>\n                            <Input type=\"textarea\" name=\"descripcion\" id=\"descripcion\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <Button onClick={() => this.crearProyecto()}>Crear Proyecto</Button>\n                    </Form>\n                    <label id='requisitosLabel'>(*) para aquellos campos que sean requeridos obligatoriamente</label>\n                </div>\n                <Modal isOpen={this.state.modal} toggle={toggleModal} className='popupError' onClosed={this.state.modalOnClose}>\n                    <ModalHeader toggle={toggleModal}>{this.state.modalHeader}</ModalHeader>\n                    <ModalBody>\n                        {this.state.modalBody}\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AgregarProyectoPage);","import React, { Component } from 'react'\nimport {Button, Table, Row, Col, Card, CardBody, Container, CardHeader, Breadcrumb, BreadcrumbItem} from 'reactstrap';\nimport HoursModel from \"../../models/CargaDeHoras/HoursModel\";\nimport { FaRegHandPointer } from 'react-icons/fa'\nimport {Link} from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\n\nexport default class RecursosPage extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            lstResources: []\n        };\n    }\n\n    componentDidMount()\n    {\n        fetch('https://squad6-backend.herokuapp.com/resources')\n            .then(r => r.json())\n            .then((resources) =>\n            {\n                this.setState({\n                    isLoading: false,\n                    lstResources: resources\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render() {\n        return (\n            <div className=\"block\" style={{padding: 10 + 'px'}}>\n\n                <Row>\n                    <Col xl={12} lg={12}>\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Recursos</BreadcrumbItem>\n                        </Breadcrumb>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={{size: 6, offset: 3}}>\n                        <Card>\n                            <CardHeader tag=\"h2\">Recursos</CardHeader>\n\n                            <CardBody>\n                                <Container>\n\n                                    {this.state.isLoading ?\n                                        <Row>\n                                            <Col className=\"text-center\">\n                                                <Loader\n                                                    type=\"TailSpin\"\n                                                    color=\"#00BFFF\"\n                                                    height={50}\n                                                    width={50}></Loader>\n                                            </Col>\n                                        </Row>\n                                        :\n                                        <Row>\n                                            <Col>\n                                                <Table striped>\n                                                    <thead>\n                                                    <tr>\n                                                        <th>Legajo</th>\n                                                        <th>Nombre</th>\n                                                        <th>Apellido</th>\n                                                        <th>Seleccionar</th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n\n                                                    {this.state.lstResources.map((r) =>\n                                                        <tr key={r.legajo}>\n                                                            <td>{r.legajo}</td>\n                                                            <td>{r.Nombre}</td>\n                                                            <td>{r.Apellido}</td>\n                                                            <td>\n                                                                <Link to={`/cargadehoras/${r.legajo}`}>\n                                                                    <button type=\"button\" className=\"btn btn-sm btn-rounded \">\n                                                                        <FaRegHandPointer/>\n                                                                    </button>\n                                                                </Link>\n\n                                                            </td>\n                                                        </tr>\n\n                                                    )}\n                                                    </tbody>\n                                                </Table>\n                                            </Col>\n                                        </Row>\n                                    }\n\n\n                                </Container>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Row, Card, CardBody, CardTitle, CardText, Button,  Col } from 'reactstrap';\nimport {Form, FormGroup, Label, Input } from 'reactstrap';\nimport './TareaPage.css';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\n\n\nclass TareaPage extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            tarea: [],\n            modal: false,\n            errorModal: false,\n            modalBody: null,\n            modalHeader: null,\n            acceptModalButton: null,\n            errorMessage: \"\",\n            prioridad: \"\",\n            estado: \"\",\n            codigoRecurso: \"\",\n            fechaFin: \"\",\n        }\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n    asignarRecurso(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"codigoRecurso\" id=\"codigoRecursoLabel\">Código Recurso:</Label>\n                        <Input type=\"number\" name=\"codigoRecurso\" id=\"codigoRecurso\" />\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n        this.abrirModal(\n            \"Asignar Recurso\",\n            content,\n            () => {\n                let codigoRecurso = document.getElementById(\"codigoRecurso\").value;\n                if (!self.validateInputText(codigoRecurso, \"codigoRecursoLabel\")) return;\n\n                if (!self.validateRecurso(codigoRecurso)) {\n                    // self.setState({\n                    // })\n                    //TODO: validar que exista un recurso con ese código\n                    // si es valido asignarselo mediante el endpoint del squad6\n                    // si es invalido, pedirlo devuelta.\n                }\n\n                self.patch({\n\n                }, \"https://...\" /*pasarle la url del endpoint del squad6 para patch*/);\n\n                this.setState({modal:false});\n            }\n        )\n    }\n\n    modificarPrioridad(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup tag=\"fieldset\">\n                        <Label className='parametro' id='priorityLabel'>Prioridad</Label>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio2' id='bajaTarea'  />{' '}\n                                Baja\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio2' id='mediaTarea' />{' '}\n                                Media\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check >\n                            <Label check>\n                                <Input type=\"radio\" name='radio2' id='altaTarea'  />{' '}\n                                Alta\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n        this.abrirModal(\n            \"Modificar Prioridad\",\n            content,\n            () => {\n                if (!self.validarRadio([\"bajaTarea\", \"mediaTarea\", \"altaTarea\"], \"priorityLabel\")) return;\n                    let prioridad = self.obtenerRadio(\"bajaTarea\", \"mediaTarea\", \"altaTarea\", \n                                                            \"baja\", \"media\", \"alta\");\n                    self.patch({\n                        \"prioridad\":prioridad\n                    });\n    \n                    self.setState({modal:false});\n\n            }\n        )\n    }\n\n    modificarFechaFinal(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"fechaFinal\" id=\"fechaFinalLabel\" >Fecha Fin:</Label>\n                        <Input type=\"date\" name=\"fechaFinal\" id=\"fechaFinal\"/>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n\n        this.abrirModal(\n            \"Modificar Fecha Final\",\n            content,\n            () => {\n                let fechaFinal = document.getElementById(\"fechaFinal\").value;\n                if(!self.validateInputText(fechaFinal, \"fechaFinalLabel\")) return;\n                \n                self.patch({\n                    \"fechaFin\":fechaFinal\n                });\n\n                self.setState({modal:false});\n            }\n        )\n    }\n\n    modificarEstado(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup tag=\"fieldset\">\n                        <Label id=\"estadoLabel\">Estado</Label>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio' id='iniciadoTarea'  />{' '}\n                                Iniciado\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio' id='enProcesoTarea' />{' '}\n                                En Proceso\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check >\n                            <Label check>\n                                <Input type=\"radio\" name='radio' id='finalizadoTarea'  />{' '}\n                                Finalizado\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n        this.abrirModal(\n            \"Modificar Estado\",\n            content,\n            () => {\n                if (!self.validarRadio([\"iniciadoTarea\", \"enProcesoTarea\", \"finalizadoTarea\"], \"estadoLabel\")) return;\n                let estado = self.obtenerRadio(\"iniciadoTarea\", \"enProcesoTarea\", \"finalizadoTarea\", \n                                                      \"iniciado\", \"en proceso\", \"finalizado\");\n                self.patch({\n                    \"estado\":estado\n                });\n\n                self.setState({modal:false});\n            }\n        )\n    }\n    \n    patch(data, url){\n        if (url == null) {\n            url = `https://proyectopsa.herokuapp.com/proyectos/${this.state.tarea.nombreProyecto}/tarea/${this.state.tarea.codigo}`;\n        }\n        let self = this;\n        console.log(url);\n        fetch(url, {\n            method: 'PATCH', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n          .then(response => response.json())\n          .then(function(json) {\n              if(json.codigo) {\n                  self.setState(data);\n                  return;\n              } else {\n                    self.setState({\n                        errorMessage : json.descripcion + json.validation,\n                        errorModal: true,\n                    })\n              }\n          })\n          .catch(function(error) {\n                self.setState({\n                    errorMessage : error.message,\n                    errorModal: true,\n                })\n          });\n    }\n\n\n    obtenerRadio(radio1, radio2, radio3, result1, result2, result3){\n        if (document.getElementById(radio1).checked) return result1;\n        if (document.getElementById(radio2).checked) return result2;\n        if (document.getElementById(radio3).checked) return result3;\n    }\n\n    validarRadio(elements, labelID){\n        let labelClassList = document.getElementById(labelID).classList;\n\n        let primero = document.getElementById(elements[0]);\n        let segundo = document.getElementById(elements[1]);\n        let tercero = document.getElementById(elements[2]);\n\n        if (!primero.checked && !segundo.checked && !tercero.checked){\n            labelClassList.add(\"incorrect\");\n            return false\n        } else {\n            labelClassList.remove(\"incorrect\");\n        }\n\n        return true\n    }\n\n    \n    validateInputText(value, classListId){\n        if (value == null || value == ''){\n            let label = document.getElementById(classListId);\n            label.classList.add(\"incorrect\");\n            \n            return false;\n        }\n        return true;\n    }\n\n    abrirModal(header, body, acceptButton){\n        this.setState({\n            modalHeader: header,\n            modalBody: body,\n            acceptModalButton: acceptButton,\n            modal: true,\n        })\n    }\n\n    componentDidMount(){\n        this.tareaID = this.props.match.params.idtarea;\n        this.proyectoID = this.props.match.params.id;\n\n        fetch(`https://proyectopsa.herokuapp.com/proyectos/${this.proyectoID}/tarea/${this.tareaID}`)\n            .then(r => r.json())\n            .then((tarea) =>\n            {\n                let trueTarea = tarea['tarea'];\n                this.setState({\n                    tarea: trueTarea,\n                    prioridad: trueTarea.prioridad,\n                    estado: trueTarea.estado,\n                    fechaFin: trueTarea.fechaFin,\n                    codigoRecurso: trueTarea.codigoRecurso,\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render() {\n        const tarea = this.state.tarea;\n        let self = this;\n        const toggleModal = () =>self.setState({modal:!self.state.modal});\n        const toggleErrorModal = () => self.setState({errorModal: !self.state.errorModal});\n        const closeBtn = <Button id=\"closebtn\" onClick={() => self.setState({errorModal:false})}> X </Button>\n        return (\n            <div id='paginaTareas'>\n                <div id='subheaderTarea'>\n                    <br/>\n                    <h1>{tarea.nombre}</h1>\n                </div>\n                <div id='cardsContainer'> \n                    <Row>\n                        <Col sm=\"6\">\n                            <div id='cardGeneral' className='card'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">General</CardTitle>\n                            \n                                <CardText><b>Descripción:</b> {tarea.descripcion}</CardText>\n                                <div id='infoCodigos'>\n                                    <p className='cardText'><b>Código Tarea:</b> {tarea.codigo}.</p>\n                                    <p className='cardText'><b>Código Proyecto:</b> {tarea.codigoProyecto}.</p>\n                                    <p className='cardText'><b>Nombre Proyecto:</b> {tarea.nombreProyecto}</p>\n                                </div>\n                                \n                                </Card>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"6\">\n                            <div id='cardRecursos' className='card cardsLeft'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">Recursos</CardTitle>\n                                <CardText id=\"recursosText\"><b>Código Recurso:</b> {this.state.codigoRecurso == null ? \"Ningún recurso asignado\" : tarea.codigoRecurso}</CardText>\n                                <Button id=\"recursosButton\" onClick={() => this.asignarRecurso()}>Asignar Recurso</Button>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col sm=\"6\">\n                            <div id='cardFechas' className='card cardsRight'>\n                                <Card body>\n                                <CardTitle tag=\"h5\" className=\"cardTitle\">Fechas</CardTitle>\n                                <CardText><b>Fecha Inicial:</b> {tarea.fechaInicio}</CardText>\n                                <CardText><b>Fecha Final:</b> {this.state.fechaFin == null ? \"No hay fecha final\" : this.state.fechaFin}</CardText>\n                                <Button onClick={() => this.modificarFechaFinal()}>Modificar Fecha Final </Button>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col sm=\"6\">\n                            <div id='cardEstado' className='card cardsLeft'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">Estado</CardTitle>\n                                <CardText className={this.state.estado}>{this.state.estado}</CardText>\n                                <Button onClick={() => this.modificarEstado()}>Modificar Estado</Button>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col sm=\"6\">\n                            <div id='cardPrioridad' className='card cardsRight'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">Prioridad</CardTitle>\n                                <CardText className={this.state.prioridad + \" prioridadValue\"}>{this.state.prioridad}</CardText>\n                                <Button onClick={() => this.modificarPrioridad()}>Modificar Prioridad </Button>\n                                </Card>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n                <div id=\"modals\">\n                    <Modal isOpen={this.state.modal} toggle={toggleModal}>\n                        <ModalHeader toggle={toggleModal}>{this.state.modalHeader}</ModalHeader>\n                        <ModalBody>\n                            {this.state.modalBody}\n                        </ModalBody>\n                        <Button onClick={this.state.acceptModalButton} id=\"boton\">\n                            Aceptar\n                        </Button>\n                    </Modal>\n                    <Modal isOpen={this.state.errorModal} toggle={toggleErrorModal}>\n                        <ModalHeader toggle={toggleModal} close={closeBtn}>ERROR</ModalHeader>\n                        <ModalBody>\n                            {this.state.errorMessage}\n                        </ModalBody>\n                        <Button onClick={() => self.setState({errorModal:false})} id=\"boton\">\n                            Cancelar\n                        </Button>\n                    </Modal>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(TareaPage);\n","import React, { Component } from 'react'\n\nexport default class Soporte extends Component {\n    render() {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Route } from 'react-router';\nimport {Link} from \"react-router-dom\";\n\nexport default () => (\n    <header>\n        <nav>\n            <Link to='/'>Inicio</Link>\n            <br />\n            <Link to='/proyectos'>Proyectos</Link>\n            <br />\n            <Link to='/recursos'>Recursos</Link>\n            <br />\n            <Link to='/soporte'>Soporte</Link>\n            <br />\n        </nav>\n    </header>\n);","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport {\n    Card, CardText, CardBody,\n    CardTitle, Button, Col, Row, Container, Badge\n} from 'reactstrap';\n\nexport default function TareaCard (props)\n{\n    // const estadoString = props.project.estado.charAt(0).toUpperCase() + props.project.estado.slice(1);\n    const estadoColor = \"success\";\n    return (\n        <div>\n            <Card>\n                <CardBody>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <CardTitle tag=\"h3\">{props.tarea.nombre}</CardTitle>\n                            </Col>\n                            <Col>\n                                <h4><Badge color={estadoColor}>Iniciado{/*estadoString*/}</Badge></h4>\n                            </Col>\n                            <Col>\n                                <CardText>{props.tarea.descripcion}</CardText>\n                            </Col>\n                            <Col>\n                            </Col>\n                            <Col body className=\"text-center\">\n                                <Link to={`/proyectos/${props.codigoProyecto}/tareas/${props.tarea.codigo}`}>\n                                    <Button color=\"info\">Ver Tarea</Button>\n                                </Link>\n                            </Col>\n                        </Row>\n                    </Container>\n                </CardBody>\n            </Card>\n            <br />\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport './MainTareasPage.css';\nimport { NavLink } from 'react-router-dom';\nimport TareaCard from \"../../components/Proyectos/TareaCard\";\n\n\nexport default class MainTareasPage extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            tareas: []\n        }\n    }\n\n    componentDidMount()\n    {\n        const id = this.props.match.params.id;\n        fetch(`https://proyectopsa.herokuapp.com/proyectos/${id}/tarea`)\n            .then(r => r.json())\n            .then((tareas) =>\n            {\n                this.setState({\n                    tareas: tareas\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render()\n    {\n        const id = this.props.match.params.id;\n        return  (<div className='paginaProyectos'>\n                    <div id=\"subheader\"> \n                        <h1 id=\"proyectoName\">Proyecto: {}</h1>\n                        <h2 id='tituloProyectos2'>Tareas</h2>\n                    </div>\n                    \n                    <br/>\n                    <div id='titlesContainer2'>\n                        <p>Nombre Tarea</p>\n                        <p id=\"estadoTitle2\">Estado</p>\n                        <NavLink to={`/proyectos/${id}/nuevaTarea`} className=\"botonAgregarProyectoContainer\">Agregar Tarea</NavLink>\n                    </div>\n                    <br />\n                    {this.state.tareas.map((t) => <TareaCard key={t.codigo} codigoProyecto={id} tarea={t} />)}\n                </div>);\n        \n    }\n}\n","\nimport React, { Component } from 'react'\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\nimport './AgregarProyectoPage.css';\n\nclass AgregarTareaPage extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            modalHeader: null,\n            modalBody: null,\n            modalOnClose: null,\n            modal: false,\n        }\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n\n    crearTarea(){\n\n        let url = `https://proyectopsa.herokuapp.com/proyectos/${this.id}/tarea/`;\n\n        let nombreTarea = document.getElementById(\"nombreTarea\").value;\n        let fechaInicio = document.getElementById(\"fechaInicio\").value;\n        let descripcion = document.getElementById(\"descripcion\").value;\n        let fechaFin = document.getElementById(\"fechaFin\").value;\n        let prioridad = this.obtenerRadio(\"baja\", \"media\", \"alta\");\n\n        if (!this.validateRequiredEntries(nombreTarea, fechaInicio, prioridad)) return;\n\n        let estado = this.obtenerRadio(\"iniciado\", \"enProceso\", \"finalizado\", \"en proceso\");\n\n        let data = {\n            \"nombre\": nombreTarea,\n            \"fechaInicio\": fechaInicio,\n            \"prioridad\": prioridad,\n            \"fechaFin\": fechaFin == '' ? undefined : fechaFin,\n            \"estado\": estado == null ? undefined : estado ,\n            \"descripcion\": descripcion\n        };\n        \n        let self = this;\n\n        fetch(url, {\n            method: 'POST', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n            .then(response => response.json())\n            .then(function(json) {\n                if(json.codigo) {\n                    self.abrirModal(\"ÉXITO\", `La tarea se generó exitosamente con código: ${json.codigo}`, () => self.props.history.push(`/proyectos/${self.id}/tareas`));\n                } else {\n                    self.abrirModal(\"ERROR DE LA REQUEST\", json.description + json.validation, () => {});\n                }\n            })\n            .catch(function(error) {\n                self.abrirModal(\"ERROR DEL FETCH\", error.message)\n            });\n    }\n    \n    componentDidMount(){\n        this.id = this.props.match.params.id;\n    }\n\n    abrirModal(header, body, onClose){\n        this.setState({\n            modalHeader: header,\n            modalBody: body,\n            modalOnClose: onClose,\n            modal: true,\n        })\n    }\n\n    obtenerRadio(radio1, radio2, radio3, differ=null){\n        if (document.getElementById(radio1).checked) return radio1;\n        if (document.getElementById(radio2).checked) return differ == null ? radio2 : differ;\n        if (document.getElementById(radio3).checked) return radio3;\n    }\n\n    validateRequiredEntries(nombreTarea, fechaInicio, prioridad){\n        let valid = true;\n        let nombreClassList = document.getElementById(\"nombre\").classList;\n        let fechaClassList = document.getElementById(\"startDate\").classList;\n        let prioridadClassList = document.getElementById(\"priority\").classList;\n\n        \n        valid = this.validate(nombreTarea, nombreClassList);\n        valid = this.validate(fechaInicio, fechaClassList);\n        valid = this.validatePriority(prioridadClassList);\n        \n        return valid;\n    }\n\n    validatePriority(classList){\n\n        let baja = document.getElementById(\"baja\");\n        let media = document.getElementById(\"media\");\n        let alta = document.getElementById(\"alta\");\n\n        if (!baja.checked && !media.checked && !alta.checked){\n            classList.add(\"incorrect\");\n            return false\n        } else {\n            classList.remove(\"incorrect\");\n        }\n\n        return true\n    }\n\n    validate(element, classList){\n\n        if (element == ''){\n            classList.add(\"incorrect\");\n            return false;\n        } else {\n            classList.remove(\"incorrect\");\n        }\n\n        return true;\n    }\n\n    render() {\n        let self = this;\n        const toggleModal = () =>self.setState({modal:!self.state.modal});\n\n        return (\n            <div>\n                <div className='formContainer'>\n                    <Form>\n                        <FormGroup>\n                            <Label className='parametro' for=\"nombreTarea\" id='nombre'>Nombre Tarea *</Label>\n                            <Input type=\"string\" name=\"nombreTarea\" id=\"nombreTarea\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaInicio\" id='startDate'>Fecha Inicio *</Label>\n                            <Input type=\"date\" name=\"fechaInicio\" id=\"fechaInicio\" className='general fecha' required/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaFin\" >Fecha Fin</Label>\n                            <Input type=\"date\" name=\"fechaFin\" id=\"fechaFin\" className='general fecha' />\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\">\n                            <Label className='parametro'>Estado</Label>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='iniciado'  />{' '}\n                                    Iniciado\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='enProceso' />{' '}\n                                    En Proceso\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check >\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='finalizado'  />{' '}\n                                    Finalizado\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\">\n                            <Label className='parametro' id='priority'>Prioridad *</Label>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio2' id='baja'  />{' '}\n                                    Baja\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio2' id='media' />{' '}\n                                    Media\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check >\n                                <Label check>\n                                    <Input type=\"radio\" name='radio2' id='alta'  />{' '}\n                                    Alta\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"descripcion\" id='desc'>Descripción </Label>\n                            <Input type=\"textarea\" name=\"descripcion\" id=\"descripcion\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <Button onClick={() => this.crearTarea()}>Crear Tarea</Button>\n                    </Form>\n                    <label id='requisitosLabel'>(*) para aquellos campos que sean requeridos obligatoriamente</label>\n                </div>\n                <Modal isOpen={this.state.modal} toggle={toggleModal} className='popupError' onClosed={this.state.modalOnClose}>\n                    <ModalHeader toggle={toggleModal}>{this.state.modalHeader}</ModalHeader>\n                    <ModalBody>\n                        {this.state.modalBody}\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AgregarTareaPage);","import './App.css';\nimport React from \"react\";\nimport CargaDeHorasPage from '../pages/CargaDeHoras/CargaDeHorasPage';\nimport MainProyectosPage from '../pages/Proyectos/MainProyectosPage';\nimport AgregarProyectoPage from '../pages/Proyectos/AgregarProyectoPage';\nimport RecursosPage from './../pages/Recursos/RecursosPage';\nimport TareaPage from '../pages/Proyectos/TareaPage';\nimport Soporte from './../pages/Soporte';\nimport Main from './../pages/Main';\nimport {Route, Switch} from \"react-router\";\nimport { Col } from 'reactstrap';\nimport { useHistory} from \"react-router-dom\";\nimport MainTareasPage from \"../pages/Proyectos/MainTareasPage\";\nimport { FaHome } from \"react-icons/fa\";\nimport AgregarTareaPage from '../pages/Proyectos/AgregarTareaPage';\n\nfunction App(props) {\n    const history = useHistory();\n\n  return (\n    <div className=\"App\">\n        <header className=\"App-header-ppal\">\n            <div id='headerContainer' className=\"MuiToolbar-root MuiToolbar-root App-subheader-height MuiToolbar-gutters\">\n                <div id='homeButton' onClick={() => history.push('/')}>\n                    <Col xl={12} lg={12}> {/*????*/}\n                        <FaHome/> HOME\n                    </Col>\n                </div>\n                <div id='companyName'>\n                    <Col xl={12} lg={12}>\n                        PSA\n                    </Col>\n                </div>\n            </div>\n            \n        </header>\n\n        <main>\n            <Switch>\n                <Route exact path=\"/proyectos\" component={MainProyectosPage} />\n                <Route exact path=\"/nuevoProyecto\" component={AgregarProyectoPage}/>\n                <Route exact path=\"/proyectos/:id/tareas\" component={MainTareasPage} />\n                <Route exact path=\"/proyectos/:id/tareas/:idtarea\" component={TareaPage} />\n                <Route exact path=\"/\" component={Main} />\n                <Route exact path=\"/recursos\" component={RecursosPage} />\n                <Route exact path=\"/cargadehoras/:id\" component={CargaDeHorasPage} />\n                <Route exact path=\"/soporte\" component={Soporte} />\n                <Route exact path=\"/proyectos/:id/nuevaTarea\" component={AgregarTareaPage} />\n            </Switch>\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter  } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}