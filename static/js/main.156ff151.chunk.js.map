{"version":3,"sources":["logo.svg","models/CargaDeHoras/HoursModel.js","components/CargaDeHoras/ModalHours.js","pages/CargaDeHoras/CargaDeHorasPage.js","components/Proyectos/ProyectoCard.js","pages/Proyectos/MainProyectosPage.js","pages/Proyectos/AgregarProyectoPage.js","pages/Recursos/RecursosPage.js","pages/Soporte.js","pages/Main.js","pages/Proyectos/ProyectoPage.js","components/Proyectos/TareaCard.js","pages/Proyectos/MainTareasPage.js","components/App.js","index.js"],"names":["HoursModel","id","file","idProject","idTask","quantityHours","quantityMinutes","date","loadingDate","nameProject","nameTask","this","otherHours","newIdProject","newIdTask","hours","minutes","ModalHours","props","state","isShow","hoursModel","lstProjects","lstTasks","isTaskDisabled","taskIsLoading","errorMessage","saveHours","bind","changeVisibility","saveHoursWithEnter","setState","e","key","isFormValid","data","self","fetch","method","mode","headers","redirect","referrerPolicy","body","JSON","stringify","then","response","catch","error","newHours","setNewHours","parseInt","hour","minute","newDate","stringNewDate","replace","isNaN","completeData","r","json","projects","console","log","a","urlTask","getIdProject","tasks","setIdProject","shouldTaskDisabled","setIdTask","Button","color","onClick","Modal","isOpen","toggle","onKeyPress","ModalHeader","ModalBody","FormGroup","Label","Input","type","onChange","onProjectChange","target","value","map","p","codigo","nombre","Col","className","height","width","disabled","onTaskChange","t","Row","lg","theme","time","getHoursAsString","timeMode","timeConfig","from","to","step","unit","onTimeChange","max","Date","toISOString","split","onDateChange","check","row","sm","size","offset","Alert","Component","CargaDeHorasPage","resource","lstHours","match","params","toString","style","padding","xl","Breadcrumb","BreadcrumbItem","active","Nombre","Apellido","Card","CardHeader","tag","CardBody","Container","CardTitle","CardText","legajo","ButtonToolbar","length","ProyectoCard","estadoString","project","estado","charAt","toUpperCase","slice","Badge","descripcion","MainProyectosPage","process","href","AgregarProyectoPage","modalHeader","modalBody","modalOnClose","modal","nombreProyecto","document","getElementById","fechaInicio","fechaFin","horas","presupuesto","validateRequiredEntries","obtenerEstado","undefined","abrirModal","history","push","description","validation","message","header","onClose","checked","valid","nombreClassList","classList","fechaClassList","descClassList","add","remove","toggleModal","Form","for","name","maxLength","required","crearProyecto","onClosed","withRouter","RecursosPage","lstResources","resources","Table","striped","Soporte","ProyectoPage","proyecto","tab","fluid","Nav","tabs","NavItem","NavLink","classnames","TabContent","activeTab","TabPane","tabId","TareaCard","tarea","codigoProyecto","MainTareasPage","tareas","App","useHistory","exact","path","component","Main","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.156ff151.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a37528bb.svg\";","export default class HoursModel {\n\n    id = 0\n    file = 0\n    idProject = 0\n    idTask = 0\n    quantityHours = 0\n    quantityMinutes = 0\n    date = 0\n    loadingDate = 0\n    nameProject = \"\"\n    nameTask = \"\";\n\n    constructor(){\n        this.id = 0;\n        this.file = 0;\n        this.idProject = 0;\n        this.idTask = 0;\n        this.quantityHours = 0;\n        this.quantityMinutes = 15;\n        this.date = 0;\n        this.loadingDate = 0;\n        this.nameProject = \"\";\n        this.nameTask = \"\";\n    }\n\n    HoursModel(otherHours){\n        this.id = otherHours.id;\n        this.file = otherHours.file;\n        this.idProject = otherHours.idProject;\n        this.idTask = otherHours.idTask;\n        this.quantityHours = otherHours.quantityHours;\n        this.quantityMinutes = otherHours.quantityMinutes;\n        this.date = otherHours.date;\n        this.loadingDate = otherHours.loadingDate;\n        this.nameProject = otherHours.nameProject;\n        this.nameTask = otherHours.nameTask;\n    }\n\n    getIdProject(){\n        return this.idProject;\n    }\n\n    setIdProject(newIdProject){\n        this.idProject = newIdProject;\n    }\n\n    getIdTask(){\n        return this.idTask;\n    }\n\n    setIdTask(newIdTask){\n        this.idTask = newIdTask;\n    }\n\n    getHoursAsString(){\n        return this.quantityHours + \":\" + this.quantityMinutes;\n    }\n\n    setNewHours(hours, minutes){\n        this.quantityHours = hours;\n        this.quantityMinutes = minutes;\n    }\n\n    completeData(){\n        if ((this.idTask === 0) ||\n            ((this.quantityHours === 0) && (this.quantityMinutes === 0)) ||\n            (this.date === 0))\n            return false;\n\n        return true;\n    }\n}","import React, { Component } from 'react';\nimport { Alert, Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport TimePicker from 'react-times';\nimport HoursModel from '../../models/CargaDeHoras/HoursModel';\n\nimport 'react-times/css/classic/default.css';\nimport './ModalHours.css'\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nexport default class ModalHours extends Component {\n\n    constructor(props){\n        super(props);\n\n        var hours = new HoursModel();\n        hours.file = props.file;\n\n        this.state = {\n            isShow: false,\n            hoursModel: hours,\n            lstProjects: [],\n            lstTasks: [],\n            isTaskDisabled: true,\n            taskIsLoading: false,\n            //alert: false\n            errorMessage:\"\"\n        };\n\n        this.saveHours = this.saveHours.bind(this);\n        this.changeVisibility = this.changeVisibility.bind(this);\n\n        this.saveHoursWithEnter = this.saveHoursWithEnter.bind(this);\n    }\n\n    changeVisibility() {\n        this.setState({\n            isShow: !this.state.isShow,\n            //alert: false\n            errorMessage: \"\"\n        });\n\n    }\n\n    saveHoursWithEnter(e){\n        if(e.key === 'Enter'){\n            this.changeVisibility();\n        }\n    }\n\n    saveHours() {\n\n        if (!this.isFormValid()){\n            this.setState({\n                //alert: true\n                errorMessage: \"Por favor, complete todos los campos obligatorios\"\n            });\n            return;\n        }\n\n        let url = \"https://squad6-backend.herokuapp.com/hours\";\n\n        let data = {\n            file: this.state.hoursModel.file,\n            idTask: this.state.hoursModel.idTask,\n            quantityHours: this.state.hoursModel.quantityHours,\n            quantityMinutes: this.state.hoursModel.quantityMinutes,\n            date: this.state.hoursModel.date\n        };\n\n        let self = this;\n\n        fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        .then(function(response) {\n            self.changeVisibility();\n        })\n        .catch(function(error) {\n            this.setState({\n                //alert: true\n                errorMessage: \"asdasd\"\n            });\n        });\n    }\n\n    onTimeChange(newHours) {\n        this.state.hoursModel.setNewHours(parseInt(newHours.hour), parseInt(newHours.minute));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    onDateChange(newDate){\n        var stringNewDate = newDate.replace(/-/gi, \"\");\n\n        if (isNaN(parseInt(stringNewDate))){\n            this.state.hoursModel.date = 0;\n            return;\n        }\n        this.state.hoursModel.date = parseInt(stringNewDate);\n    }\n\n    isFormValid(){\n        return this.state.hoursModel.completeData();\n    }\n\n    componentDidMount()\n    {\n        //https://proyectopsa.herokuapp.com/proyectos/\n        fetch('https://proyectopsa.herokuapp.com/proyectos/')\n            .then(r => r.json())\n            .then((projects) =>\n            {\n                this.setState({\n                    lstProjects: projects\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    async getListTasks(){\n\n        let urlTask = 'https://proyectopsa.herokuapp.com/proyectos/' + this.state.hoursModel.getIdProject() + '/tarea/';\n\n        fetch(urlTask)\n            .then(r => r.json())\n            .then((tasks) =>\n            {\n                this.setState({\n                    lstTasks: tasks\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    onProjectChange(newIdProject){\n\n        this.setState({taskIsLoading: true});\n\n        this.state.hoursModel.setIdProject(newIdProject);\n\n        let shouldTaskDisabled = (newIdProject == 0);\n\n        if (shouldTaskDisabled){\n            this.setState({\n                hoursModel: this.state.hoursModel,\n                lstTasks: [],\n                isTaskDisabled: shouldTaskDisabled,\n                taskIsLoading: false\n            });\n        } else {\n            let urlTask = 'https://proyectopsa.herokuapp.com/proyectos/' + this.state.hoursModel.getIdProject() + '/tarea/';\n\n            fetch(urlTask)\n                .then(r => r.json())\n                .then((tasks) =>\n                {\n                    this.setState({\n                        hoursModel: this.state.hoursModel,\n                        lstTasks: tasks,\n                        isTaskDisabled: false,\n                        taskIsLoading: false\n                    });\n                }, (error) => {console.log(error);});\n        }\n    }\n\n    onTaskChange(newIdTask){\n        this.state.hoursModel.setIdTask(parseInt(newIdTask));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    render(){\n\n        return (\n            <div>\n\n                <Button color=\"primary\" onClick={this.changeVisibility}>Nueva</Button>\n\n                <Modal isOpen={this.state.isShow}\n                       toggle={this.changeVisibility}\n                       onKeyPress={this.saveHoursWithEnter}>\n\n                    <ModalHeader toggle={this.changeVisibility}>Carga de Horas</ModalHeader>\n\n                    <ModalBody onKeyPress={this.saveHoursWithEnter}>\n                        <FormGroup>\n                            <Label>Proyecto *</Label>\n                            <Input type=\"select\"\n                                   onChange={e => this.onProjectChange(e.target.value)}>\n                                <option value=\"0\"></option>\n                                {this.state.lstProjects.map((p) => <option key={p.codigo} value={p.codigo}>{p.nombre}</option>)}\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Tarea *</Label>\n                            {\n                                this.state.taskIsLoading ?\n                                    <Col className=\"text-center\">\n                                        <Loader\n                                            type=\"TailSpin\"\n                                            color=\"#00BFFF\"\n                                            height={30}\n                                            width={30}></Loader>\n                                    </Col>\n                                    :\n                                    <Input type=\"select\"\n                                           disabled={this.state.isTaskDisabled}\n                                           onChange={e => this.onTaskChange(e.target.value)}>\n                                        <option value=\"0\"></option>\n                                        {this.state.lstTasks.map((t) => <option key={t.codigo} value={t.codigo}>{t.nombre}</option>)}\n                                    </Input>\n                            }\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Row>\n                                <Col lg={6}>\n                                    <Label>Cantidad de Horas *</Label>\n                                    <TimePicker\n                                        theme=\"classic\"\n                                        time={this.state.hoursModel.getHoursAsString()}\n                                        timeMode=\"24\"\n                                        timeConfig={{\n                                            from: '0:15',\n                                            to: '23:45',\n                                            step: 15,\n                                            unit: 'minutes'\n                                        }}\n                                        onTimeChange={this.onTimeChange.bind(this)}/>\n                                </Col>\n\n                                <Col lg={6}>\n                                    <Label>Fecha *</Label>\n                                    <Input type=\"date\"\n                                           max={(new Date().toISOString().split(\"T\")[0])}\n                                           onChange={e => this.onDateChange(e.target.value)}></Input>\n                                </Col>\n                            </Row>\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Col className=\"col-datos-oblig\">\n                                (*) para aquellos campos que sean requeridos obligatoriamente\n                                <hr/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup check row>\n                            <Col sm={{ size: 10, offset: 9 }}>\n                                <Button color=\"primary\" onClick={this.saveHours}>Guardar</Button>\n                            </Col>\n                        </FormGroup>\n\n                        {this.state.errorMessage ? (\n                          <Alert id=\"alerta\" color=\"danger\"> {this.state.errorMessage} </Alert>\n                        ) : (\n                          null\n                        )}\n                    </ModalBody>\n\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {\n    Breadcrumb, BreadcrumbItem, Card, CardImg, CardText, CardBody, CardHeader, CardTitle,\n    CardSubtitle, Button, Label, ButtonToolbar, Row, Col, Container, Badge\n} from 'reactstrap';\nimport ModalHours from '../../components/CargaDeHoras/ModalHours';\nimport {Link} from \"react-router-dom\";\n\nexport default class CargaDeHorasPage extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            resource: { },\n            lstHours: []\n        };\n    }\n\n    componentDidMount()\n    {\n        const id = this.props.match.params.id;\n        fetch(`https://squad6-backend.herokuapp.com/resources/${id}`)\n            .then(r => r.json())\n            .then((resource) =>\n            {\n                this.setState({\n                   resource: resource\n                });\n            }, (error) => {console.log(error);});\n\n        const file = id;\n        fetch(\"https://squad6-backend.herokuapp.com/hoursFile/\" + file.toString())\n            .then(r => r.json())\n            .then((resource) =>\n            {\n                this.setState({\n                    resource: resource\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render() {\n        return (\n            <div style={{padding: 10 + 'px'}}>\n                <Row>\n                    <Col xl={4} lg={4}>\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/recursos\">Recursos</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{this.state.resource.Nombre} {this.state.resource.Apellido}</BreadcrumbItem>\n                        </Breadcrumb>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={4} lg={4}> \n                        <Card>\n                            <CardHeader tag=\"h4\">Datos Principales</CardHeader>\n\n                            <CardBody>\n                                <Container>\n                                    <Row>\n                                        <Col xl={4} lg={4}>\n                                            <CardTitle tag=\"h6\">Legajo</CardTitle>\n                                            <CardText>{this.state.resource.legajo}</CardText>\n                                        </Col>\n\n                                        <Col xl={4} lg={4}>\n                                            <CardTitle tag=\"h6\">Nombre</CardTitle>\n                                            <CardText>{this.state.resource.Nombre}</CardText>\n                                        </Col>\n\n                                        <Col xl={4} lg={4}>\n                                            <CardTitle tag=\"h6\">Apellido</CardTitle>\n                                            <CardText>{this.state.resource.Apellido}</CardText>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n                    <Col xl={4} lg={4}>\n                        <ButtonToolbar>\n                            <ModalHours file={this.state.resource.legajo}></ModalHours>\n                        </ButtonToolbar>\n                    </Col>\n                    <Col xl={4} lg={4}>\n                        <h2>Horas Cargadas</h2>\n                        {this.state.lstHours.length ? (\n                          null\n                        ) : (\n                          <h3>El recurso no posee horas cargadas.</h3>\n                        )}\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button, Col, Row, Container, Badge\n} from 'reactstrap';\n\nexport default function ProyectoCard (props)\n{\n    const estadoString = props.project.estado.charAt(0).toUpperCase() + props.project.estado.slice(1);\n    const estadoColor = \"success\";\n    return (\n        <div>\n            <Card>\n                <CardBody>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <CardTitle tag=\"h4\">{props.project.nombre}</CardTitle>\n                            </Col>\n                            <Col>\n                                <h4><Badge color={estadoColor}>{estadoString}</Badge></h4>\n                            </Col>\n                            <Col>\n                                <CardText>{props.project.descripcion}</CardText>\n                            </Col>\n                            <Col>\n                            </Col>\n                            <Col body className=\"text-center\">\n                                <Link to={`/ProyectoPSATribu1/proyectos/${props.project.codigo}/tareas`}>\n                                <Button color=\"info\">Ver Tareas</Button>\n                                </Link>\n                            </Col>\n                        </Row>\n                    </Container>\n                </CardBody>\n            </Card>\n            <br />\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport ProyectoCard from '../../components/Proyectos/ProyectoCard';\nimport './MainProyectosPage.css';\nimport { Button } from 'reactstrap';\n\n\nexport default class MainProyectosPage extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            projects: []\n        }\n    }\n\n    componentDidMount()\n    {\n        fetch('https://proyectopsa.herokuapp.com/proyectos/')\n            .then(r => r.json())\n            .then((projects) =>\n            {\n                this.setState({\n                    projects: projects\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render()\n    {\n        console.log(process.env.PUBLIC_URL)\n        return  (<div className='paginaProyectos'>\n                    <h1 id='tituloProyectos'>Proyectos</h1>\n                    <br/>\n                    <div id='titlesContainer'>\n                        <p>Nombre Proyecto</p>\n                        <p id=\"estadoTitle\">Estado</p>\n                        <a className='botonAgregarProyectoContainer' href='/ProyectoPSATribu1/nuevoProyecto'>\n                            <Button>Agregar Proyecto</Button>\n                        </a>\n                    </div>\n                    <br />\n                    {this.state.projects.map((p) => <ProyectoCard key={p.codigo} project={p} />)}\n                </div>);\n        \n    }\n}\n","import React, { Component } from 'react'\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\nimport './AgregarProyectoPage.css';\n\nclass AgregarProyectoPage extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            modalHeader: null,\n            modalBody: null,\n            modalOnClose: null,\n            modal: false,\n        }\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n    crearProyecto(){\n\n        let url = \"https://proyectopsa.herokuapp.com/proyectos/\";\n\n        let nombreProyecto = document.getElementById(\"nombreProyecto\").value;\n        let fechaInicio = document.getElementById(\"fechaInicio\").value;\n        let descripcion = document.getElementById(\"descripcion\").value;\n        let fechaFin = document.getElementById(\"fechaFin\").value;\n        let horas = document.getElementById(\"horas\").value;\n        let presupuesto = document.getElementById(\"presupuesto\").value;\n\n        let isValid = this.validateRequiredEntries(nombreProyecto, fechaInicio, descripcion);\n        if (!isValid) return;\n\n        let estado = this.obtenerEstado();\n\n        let data = {\n            \"nombre\": nombreProyecto,\n            \"fechaInicio\": fechaInicio,\n            \"fechaFin\": fechaFin == '' ? undefined : fechaFin,\n            \"estado\": estado == null ? undefined : estado ,\n            \"horas\": horas == \"\" ? undefined : parseInt(horas) ,\n            \"presupuesto\": presupuesto == '' ? undefined : parseInt(presupuesto),\n            \"descripcion\": descripcion\n        };\n        \n        let self = this;\n\n        fetch(url, {\n            method: 'POST', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n            .then(response => response.json())\n            .then(function(json) {\n                if(json.codigo) {\n                    self.abrirModal(\"ÉXITO\", `El proyecto se realizó exitosamente con código: ${json.codigo}`, () => self.props.history.push(`/proyectos/`));\n                } else {\n                    self.abrirModal(\"ERROR\", json.description, json.validation);\n                }\n            })\n            .catch(function(error) {\n                self.abrirModal(\"ERROR\", error.message)\n            });\n    }\n\n    abrirModal(header, body, onClose=null){\n        this.setState({\n            modalHeader: header,\n            modalBody: body,\n            modalOnClose: onClose,\n            modal: true,\n        })\n    }\n\n    obtenerEstado(){\n        if (document.getElementById(\"iniciado\").checked) return 'iniciado';\n        if (document.getElementById(\"enProceso\").checked) return 'en proceso';\n        if (document.getElementById(\"finalizado\").checked) return 'finalizado';\n    }\n\n    validateRequiredEntries(nombreProyecto, fechaInicio, descripcion){\n        let valid = true;\n        let nombreClassList = document.getElementById(\"nombre\").classList;\n        let fechaClassList = document.getElementById(\"startDate\").classList;\n        let descClassList = document.getElementById(\"desc\").classList;\n        \n        if (nombreProyecto == ''){\n            nombreClassList.add(\"incorrect\");\n            valid = false;\n        } else {\n            nombreClassList.remove(\"incorrect\");\n        }\n\n        if (fechaInicio == ''){\n            fechaClassList.add(\"incorrect\");\n            valid = false;\n        } else {\n            fechaClassList.remove(\"incorrect\");\n        }\n\n        if (descripcion == ''){\n            descClassList.add(\"incorrect\");\n            valid = false;\n        } else {\n            descClassList.remove(\"incorrect\");\n        }\n        \n        return valid;\n    }\n\n    render() {\n        let self = this;\n        const toggleModal = () =>self.setState({modal:!self.state.modal});\n\n        return (\n            <div>\n                <div className='formContainer'>\n                    <Form>\n                        <FormGroup>\n                            <Label className='parametro' for=\"nombreProyecto\" id='nombre'>Nombre Proyecto *</Label>\n                            <Input type=\"string\" name=\"nombreProyecto\" id=\"nombreProyecto\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaInicio\" id='startDate'>Fecha Inicio *</Label>\n                            <Input type=\"date\" name=\"fechaInicio\" id=\"fechaInicio\" className='general fecha' required/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaFin\" >Fecha Fin</Label>\n                            <Input type=\"date\" name=\"fechaFin\" id=\"fechaFin\" className='general fecha' />\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\">\n                            <Label className='parametro'>Estado</Label>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='iniciado'  />{' '}\n                                    Iniciado\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='enProceso' />{' '}\n                                    En Proceso\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check >\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='finalizado'  />{' '}\n                                    Finalizado\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"horas\">Horas</Label>\n                            <Input type=\"number\" name=\"horas\" id=\"horas\" className='general' />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"presupuesto\" >Presupuesto</Label>\n                            <Input type=\"number\" name=\"presupuesto\" id=\"presupuesto\" className='general' />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"descripcion\" id='desc'>Descripción *</Label>\n                            <Input type=\"textarea\" name=\"descripcion\" id=\"descripcion\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <Button onClick={() => this.crearProyecto()}>Crear Proyecto</Button>\n                    </Form>\n                    <label id='requisitosLabel'>(*) para aquellos campos que sean requeridos obligatoriamente</label>\n                </div>\n                <Modal isOpen={this.state.modal} toggle={toggleModal} className='popupError' onClosed={this.state.modalOnClose}>\n                    <ModalHeader toggle={toggleModal}>{this.state.modalHeader}</ModalHeader>\n                    <ModalBody>\n                        {this.state.modalBody}\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AgregarProyectoPage);","import React, { Component } from 'react'\nimport {Button, Table, Row, Col, Card, CardBody, Container} from 'reactstrap';\nimport HoursModel from \"../../models/CargaDeHoras/HoursModel\";\nimport { FaRegHandPointer } from 'react-icons/fa'\nimport {Link} from \"react-router-dom\";\n\nexport default class RecursosPage extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            lstResources: []\n        };\n    }\n\n    componentDidMount()\n    {\n        fetch('https://squad6-backend.herokuapp.com/resources')\n            .then(r => r.json())\n            .then((resources) =>\n            {\n                this.setState({\n                    lstResources: resources\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render() {\n        return (\n            <div className=\"block\" style={{padding: 10 + 'px'}}>\n                <Row>\n                    <Col xl={{size: 6, offset: 3}}>\n                        <Card>\n                            <CardBody>\n                                <Container>\n                                    <Row>\n                                        <Col>\n                                            <Table striped>\n                                                <thead>\n                                                <tr>\n                                                    <th>Legajo</th>\n                                                    <th>Nombre</th>\n                                                    <th>Apellido</th>\n                                                    <th>Seleccionar</th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n\n                                                {this.state.lstResources.map((r) =>\n                                                    <tr key={r.legajo}>\n                                                        <td>{r.legajo}</td>\n                                                        <td>{r.Nombre}</td>\n                                                        <td>{r.Apellido}</td>\n                                                        <td>\n                                                            <Link to={`/cargadehoras/${r.legajo}`}>\n                                                                <button type=\"button\" className=\"btn btn-sm btn-rounded \">\n                                                                    <FaRegHandPointer/>\n                                                                </button>\n                                                            </Link>\n\n                                                        </td>\n                                                    </tr>\n\n                                                )}\n                                                </tbody>\n                                            </Table>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Soporte extends Component {\n    render() {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Route } from 'react-router';\nimport {Link} from \"react-router-dom\";\n\nexport default () => (\n    <header>\n        <nav>\n            <Link to='/'>Inicio</Link>\n            <br />\n            <Link to='/proyectos'>Proyectos</Link>\n            <br />\n            <Link to='/recursos'>Recursos</Link>\n            <br />\n            <Link to='/soporte'>Soporte</Link>\n            <br />\n        </nav>\n    </header>\n);","import React, { Component } from 'react'\nimport {\n    TabContent,\n    TabPane,\n    Nav,\n    NavItem,\n    NavLink,\n    Card,\n    Button,\n    CardTitle,\n    CardText,\n    Row,\n    Col,\n    Container\n} from 'reactstrap';\nimport classnames from 'classnames';\n\nexport default class ProyectoPage extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            project: {},\n            active: '1',\n        }\n    }\n\n    componentDidMount()\n    {\n        const id = this.props.match.params.id;\n        fetch(`https://proyectopsa.herokuapp.com/proyectos/${id}`)\n            .then(r => r.json())\n            .then(r => {\n                this.setState({\n                    project: r.proyecto\n                })\n            });\n    }\n\n\n    render()\n    {\n\n        const toggle = tab => {\n            if(this.state.active !== tab) this.setState({\n                active:tab\n            });\n        }\n\n        return (\n            <div>\n                <br />\n                <Container className=\"themed-container\" fluid=\"xl\">\n                <Nav tabs>\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: this.state.active === '1' })}\n                            onClick={() => { toggle('1'); }}\n                        >\n                            General\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: this.state.active === '2' })}\n                            onClick={() => { toggle('2'); }}\n                        >\n                            Tareas\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={this.state.active}>\n                    <TabPane tabId=\"1\">\n                        <Row>\n                            <Col sm=\"12\">\n                                <h4>Tab 1 Contents</h4>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                    <TabPane tabId=\"2\">\n                        <Row>\n                            <Col sm=\"6\">\n                                <Card body>\n                                    <CardTitle>Special Title Treatment</CardTitle>\n                                    <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\n                                    <Button>Go somewhere</Button>\n                                </Card>\n                            </Col>\n                            <Col sm=\"6\">\n                                <Card body>\n                                    <CardTitle>Special Title Treatment</CardTitle>\n                                    <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\n                                    <Button>Go somewhere</Button>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                </TabContent>\n                </Container>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button, Col, Row, Container, Badge\n} from 'reactstrap';\n\nexport default function TareaCard (props)\n{\n    const estadoString = props.project.estado.charAt(0).toUpperCase() + props.project.estado.slice(1);\n    const estadoColor = \"success\";\n    return (\n        <div>\n            <Card>\n                <CardBody>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <CardTitle tag=\"h3\">{props.tarea.nombre}</CardTitle>\n                            </Col>\n                            <Col>\n                                <h4><Badge color={estadoColor}>{estadoString}</Badge></h4>\n                            </Col>\n                            <Col>\n                                <CardText>{props.tarea.descripcion}</CardText>\n                            </Col>\n                            <Col>\n                            </Col>\n                            <Col body className=\"text-center\">\n                                <Link to={`/ProyectoPSATribu1/proyectos/${props.codigoProyecto}/tarea/${props.tarea.codigo}`}>\n                                    <Button color=\"info\">Ver Tarea</Button>\n                                </Link>\n                            </Col>\n                        </Row>\n                    </Container>\n                </CardBody>\n            </Card>\n            <br />\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport ProyectoCard from '../../components/Proyectos/ProyectoCard';\nimport './MainTareasPage.css';\nimport { Button } from 'reactstrap';\nimport TareaCard from \"../../components/Proyectos/TareaCard\";\n\n\nexport default class MainTareasPage extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            tareas: []\n        }\n    }\n\n    componentDidMount()\n    {\n        const id = this.props.match.params.id;\n        fetch(`https://proyectopsa.herokuapp.com/proyectos/${id}/tarea`)\n            .then(r => r.json())\n            .then((tareas) =>\n            {\n                this.setState({\n                    tareas: tareas\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render()\n    {\n        const id = this.props.match.params.id;\n        return  (<div className='paginaProyectos'>\n                    <h1 id='tituloProyectos'>Tareas</h1>\n                    <br/>\n                    <div id='titlesContainer'>\n                        <p>Nombre Tarea</p>\n                        <p id=\"estadoTitle\">Estado</p>\n                        <a className='botonAgregarProyectoContainer' href={`/ProyectoPSATribu1/proyectos/${id}/nuevaTarea`}>\n                            <Button>Agregar Tarea</Button>\n                        </a>\n                    </div>\n                    <br />\n                    {this.state.tareas.map((t) => <TareaCard key={t.codigo} codigoProyecto={id} tarea={t} />)}\n                </div>);\n        \n    }\n}\n","import logo from '../logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport CargaDeHorasPage from '../pages/CargaDeHoras/CargaDeHorasPage';\nimport MainProyectosPage from '../pages/Proyectos/MainProyectosPage';\nimport AgregarProyectoPage from '../pages/Proyectos/AgregarProyectoPage';\nimport RecursosPage from './../pages/Recursos/RecursosPage';\nimport Soporte from './../pages/Soporte';\nimport Main from './../pages/Main';\nimport {Route, Switch} from \"react-router\";\nimport { Button, ButtonToolbar, Row, Col } from 'reactstrap';\nimport ProyectoPage from \"../pages/Proyectos/ProyectoPage\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport MainTareasPage from \"../pages/Proyectos/MainTareasPage\";\nimport { FaHome } from \"react-icons/fa\";\n\nfunction App(props) {\n    const history = useHistory();\n\n  return (\n    <div className=\"App\">\n        <header className=\"App-header-ppal\">\n            <div id='headerContainer' className=\"MuiToolbar-root MuiToolbar-root App-subheader-height MuiToolbar-gutters\">\n                <div id='homeButton' onClick={() => history.push('/')}>\n                    <Col xl={12} lg={12}> {/*????*/}\n                        <FaHome/> HOME\n                    </Col>\n                </div>\n                <div id='companyName'>\n                    <Col xl={12} lg={12}>\n                        PSA\n                    </Col>\n                </div>\n            </div>\n            \n        </header>\n\n        <main>\n            <Switch>\n                <Route exact path=\"/proyectos\" component={MainProyectosPage} />\n                <Route exact path=\"/nuevoProyecto\" component={AgregarProyectoPage}/>\n                <Route exact path=\"/proyectos/:id\" component={ProyectoPage} />\n                <Route exact path=\"/proyectos/:id/tareas\" component={MainTareasPage} />\n                <Route exact path=\"/\" component={Main} />\n                <Route exact path=\"/recursos\" component={RecursosPage} />\n                <Route exact path=\"/cargadehoras/:id\" component={CargaDeHorasPage} />\n                <Route exact path=\"/soporte\" component={Soporte} />\n            </Switch>\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter  } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}