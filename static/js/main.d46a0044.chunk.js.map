{"version":3,"sources":["models/CargaDeHoras/HoursModel.js","components/CargaDeHoras/ModalHours.js","components/CargaDeHoras/ModalModifyHours.js","components/CargaDeHoras/GridItemHours.js","components/CargaDeHoras/GridHours.js","pages/CargaDeHoras/CargaDeHorasPage.js","components/Proyectos/ProyectoCard.js","pages/Proyectos/MainProyectosPage.js","pages/Proyectos/AgregarProyectoPage.js","pages/Recursos/RecursosPage.js","pages/Proyectos/TareaPage.js","components/CargaDeTickets/ModalTickets.js","components/CargaDeTickets/TicketCard.js","pages/Soporte.js","components/CargaDeTickets/ModalEdit.js","pages/Soporte/DetalleTicket.js","pages/Main.js","components/Proyectos/TareaCard.js","pages/Proyectos/MainTareasPage.js","pages/Proyectos/AgregarTareaPage.js","components/App.js","index.js"],"names":["HoursModel","id","file","idProject","idTask","quantityHours","quantityMinutes","date","loadingDate","nameProject","nameTask","this","newIdProject","newIdTask","minutesAsString","hoursAsString","dateString","toString","year","substr","mont","days","hours","minutes","ModalHours","props","state","isShow","hoursModel","lstProjects","lstTasks","isTaskDisabled","taskIsLoading","errorMessage","saveHours","bind","changeVisibility","saveHoursWithEnter","setState","setIdProject","setIdTask","e","key","isFormValid","data","dateAsString","getDateAsString","getHoursAsString","self","fetch","method","mode","headers","redirect","referrerPolicy","body","JSON","stringify","then","response","ok","Error","swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","dangerMode","confirmButtonText","cancelButtonText","answer","isConfirmed","onReload","catch","error","newHours","setNewHours","parseInt","hour","minute","newDate","stringNewDate","replace","isNaN","completeData","r","json","projects","console","log","a","urlTask","getIdProject","tasks","shouldTaskDisabled","Button","color","onClick","Modal","isOpen","toggle","onKeyPress","ModalHeader","ModalBody","FormGroup","Label","Input","type","onChange","onProjectChange","target","value","map","p","codigo","nombre","Col","className","height","width","disabled","onTaskChange","t","Row","lg","theme","time","timeMode","timeConfig","from","to","step","unit","onTimeChange","max","Date","toISOString","split","onDateChange","check","row","sm","size","offset","Alert","Component","ModalModifyHours","hoursAux","saveHoursById","getListTasks","url","style","marginTop","GridItemHours","isLoading","deleteHoursById","taskByProject","tarea","nombreProyecto","colSpan","GridHours","lstHours","onReloadGrid","hoursByFile","lstHoursModel","forEach","x","model","push","sort","b","Card","CardHeader","tag","display","xl","paddingLeft","CardBody","Container","length","Table","striped","hover","h","CargaDeHorasPage","resource","match","params","padding","Breadcrumb","BreadcrumbItem","active","Nombre","Apellido","CardTitle","CardText","legajo","ProyectoCard","estadoString","project","estado","charAt","toUpperCase","slice","Badge","descripcion","MainProyectosPage","AgregarProyectoPage","modalHeader","modalBody","modalOnClose","modal","document","getElementById","fechaInicio","fechaFin","horas","presupuesto","validateRequiredEntries","obtenerEstado","undefined","abrirModal","history","description","validation","message","header","onClose","checked","nombreClassList","classList","fechaClassList","descClassList","validate","element","valid","add","remove","toggleModal","Form","for","name","maxLength","required","crearProyecto","onClosed","withRouter","RecursosPage","lstResources","resources","TareaPage","errorModal","acceptModalButton","prioridad","codigoRecurso","recursosXhoras","content","validateInputText","validateRecursoAndAct","validarRadio","obtenerRadio","patch","fechaFinal","proyectoID","radio1","radio2","radio3","result1","result2","result3","elements","labelID","labelClassList","primero","segundo","tercero","classListId","acceptButton","tareaID","idtarea","obtenerTareas","obtenerRecursosPorTarea","obtenerHorasDeTarea","hora","recurso","trueTarea","closeBtn","codigoProyecto","noResources","asignarRecurso","modificarFechaFinal","modificarEstado","modificarPrioridad","close","ModalTickets","task_id","priority","resource_id","saveTicket","saveTicketWithEnter","handleTypeChange","handlePriorityChange","handleTaskChange","handleDescriptionChange","handleSubmit","handleResourceChange","event","handleNameChange","TicketCard","item","status","Soporte","tickets","ButtonToolbar","ticket_original_data","handleStatusChange","resource_name","task","TicketDetail","splitted_url","window","location","href","ticket_id","ticket","project_name","task_name","task_description","creation_date","limit_date","modal_edit","ref","styles","backgroundColor","borderColor","inverse","TareaCard","MainTareasPage","tareas","proyecto","AgregarTareaPage","nombreTarea","differ","prioridadClassList","validatePriority","baja","media","alta","crearTarea","App","useHistory","exact","path","component","Main","ReactDOM","render","basename","process"],"mappings":"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","file":"static/js/main.d46a0044.chunk.js","sourcesContent":["export default class HoursModel {\n\n    id = 0\n    file = 0\n    idProject = 0\n    idTask = 0\n    quantityHours = 0\n    quantityMinutes = 0\n    date = 0\n    loadingDate = 0\n    nameProject = \"\"\n    nameTask = \"\";\n\n    constructor(){\n        this.id = 0;\n        this.file = 0;\n        this.idProject = 0;\n        this.idTask = 0;\n        this.quantityHours = 0;\n        this.quantityMinutes = 15;\n        this.date = 0;\n        this.loadingDate = 0;\n        this.nameProject = \"\";\n        this.nameTask = \"\";\n    }\n\n    HoursModel(otherHours){\n        this.id = otherHours.id;\n        this.file = otherHours.file;\n        this.idProject = otherHours.idProject;\n        this.idTask = otherHours.idTask;\n        this.quantityHours = otherHours.quantityHours;\n        this.quantityMinutes = otherHours.quantityMinutes;\n        this.date = otherHours.date;\n        this.loadingDate = otherHours.loadingDate;\n        this.nameProject = otherHours.nameProject;\n        this.nameTask = otherHours.nameTask;\n    }\n\n    HoursModel(id, file, idProject, idTask, quantityHours, quantityMinutes, date, loadingDate, nameProject, nameTask){\n        this.id = id;\n        this.file = file;\n        this.idProject = idProject;\n        this.idTask = idTask;\n        this.quantityHours = quantityHours;\n        this.quantityMinutes = quantityMinutes;\n        this.date = date;\n        this.loadingDate = loadingDate;\n        this.nameProject = nameProject;\n        this.nameTask = nameTask;\n    }\n\n    getIdProject(){\n        return this.idProject;\n    }\n\n    setIdProject(newIdProject){\n        this.idProject = newIdProject;\n    }\n\n    getIdTask(){\n        return this.idTask;\n    }\n\n    setIdTask(newIdTask){\n        this.idTask = newIdTask;\n    }\n\n    getHoursAsString(){\n        var minutesAsString = this.quantityMinutes;\n        var hoursAsString = this.quantityHours;\n\n        if (minutesAsString == 0){\n            minutesAsString = \"00\";\n        }\n\n        if (hoursAsString < 10){\n            hoursAsString = \"0\"+hoursAsString;\n        }\n\n        return hoursAsString + \":\" + minutesAsString;\n    }\n\n    getDateAsString(){\n        let dateString = this.date.toString();\n\n        let year = dateString.substr(0,4),\n            mont = dateString.substr(4,2),\n            days = dateString.substr(6,2);\n\n        return `${days}/${mont}/${year}`;\n    }\n\n    setNewHours(hours, minutes){\n        this.quantityHours = hours;\n        this.quantityMinutes = minutes;\n    }\n\n    completeData(){\n        if ((this.idTask === 0) ||\n            ((this.quantityHours === 0) && (this.quantityMinutes === 0)) ||\n            (this.date === 0))\n            return false;\n\n        return true;\n    }\n}","import React, { Component } from 'react';\nimport { Alert, Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport TimePicker from 'react-times';\nimport HoursModel from '../../models/CargaDeHoras/HoursModel';\n\nimport 'react-times/css/classic/default.css';\nimport './ModalHours.css'\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport PropTypes from \"prop-types\";\nimport swal from \"sweetalert2\";\n\nexport default class ModalHours extends Component {\n\n    static propTypes = {\n        onReload: PropTypes.func.isRequired\n    };\n\n    constructor(props){\n        super(props);\n\n        let hours = new HoursModel();\n        hours.file = props.file;\n\n        this.state = {\n            isShow: false,\n            hoursModel: hours,\n            lstProjects: [],\n            lstTasks: [],\n            isTaskDisabled: true,\n            taskIsLoading: false,\n            errorMessage:\"\"\n        };\n\n        this.saveHours = this.saveHours.bind(this);\n        this.changeVisibility = this.changeVisibility.bind(this);\n\n        this.saveHoursWithEnter = this.saveHoursWithEnter.bind(this);\n    }\n\n    changeVisibility() {\n        this.setState({\n            isShow: !this.state.isShow,\n            errorMessage: \"\",\n            isTaskDisabled: true\n        });\n        \n        this.state.hoursModel.setIdProject(0);\n        this.state.hoursModel.setIdTask(0);\n        this.state.hoursModel.date = 0;\n    }\n\n    saveHoursWithEnter(e){\n        if(e.key === 'Enter'){\n            this.changeVisibility();\n        }\n    }\n\n    saveHours() {\n\n        if (!this.isFormValid()){\n            this.setState({\n                errorMessage: \"Por favor, complete todos los campos obligatorios\"\n            });\n            return;\n        }\n\n        let url = \"https://squad6-backend.herokuapp.com/hours\";\n\n        let data = {\n            file: this.state.hoursModel.file,\n            idProject: this.state.hoursModel.idProject,\n            idTask: this.state.hoursModel.idTask,\n            quantityHours: this.state.hoursModel.quantityHours,\n            quantityMinutes: this.state.hoursModel.quantityMinutes,\n            date: this.state.hoursModel.date\n        };\n\n        var dateAsString = this.state.hoursModel.getDateAsString();\n        var hoursAsString = this.state.hoursModel.getHoursAsString();\n\n        let self = this;\n\n        fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        .then(function(response) {\n\n            if(!response.ok)\n                throw new Error();\n\n            swal.fire({\n                title: 'Cargar horas',\n                text: \"¿Está seguro que desea agregar \" + hoursAsString + \" horas del \" + dateAsString + \"?\",\n                icon: 'question',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                dangerMode: 'true',\n                confirmButtonText: 'Confirmar',\n                cancelButtonText: 'Cancelar'\n            }).then(answer=>{\n                if(answer.isConfirmed){\n                    self.changeVisibility();\n                    self.props.onReload();\n                    swal.fire({\n                        title: \"Se agregaron \" + hoursAsString + \" horas del \" + dateAsString + \".\",\n                        icon: \"success\"\n                    })\n                }\n            });\n        })\n        .catch(function(error) {\n            self.setState({\n                errorMessage: \"No se puede cargar más de 24 horas un mismo día\"\n            });\n        });\n    }\n\n    onTimeChange(newHours) {\n        this.state.hoursModel.setNewHours(parseInt(newHours.hour), parseInt(newHours.minute));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    onDateChange(newDate){\n        var stringNewDate = newDate.replace(/-/gi, \"\");\n\n        if (isNaN(parseInt(stringNewDate))){\n            this.state.hoursModel.date = 0;\n            return;\n        }\n        this.state.hoursModel.date = parseInt(stringNewDate);\n    }\n\n    isFormValid(){\n        return this.state.hoursModel.completeData();\n    }\n\n    componentDidMount()\n    {\n        //https://proyectopsa.herokuapp.com/proyectos/\n        fetch('https://proyectopsa.herokuapp.com/proyectos/')\n            .then(r => r.json())\n            .then((projects) =>\n            {\n                this.setState({\n                    lstProjects: projects\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    async getListTasks(){\n\n        let urlTask = 'https://proyectopsa.herokuapp.com/proyectos/' + this.state.hoursModel.getIdProject() + '/tarea/';\n\n        fetch(urlTask)\n            .then(r => r.json())\n            .then((tasks) =>\n            {\n                this.setState({\n                    lstTasks: tasks\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    onProjectChange(newIdProject){\n\n        this.setState({taskIsLoading: true});\n\n        this.state.hoursModel.setIdProject(newIdProject);\n\n        let shouldTaskDisabled = (newIdProject == 0);\n\n        if (shouldTaskDisabled){\n            this.setState({\n                hoursModel: this.state.hoursModel,\n                lstTasks: [],\n                isTaskDisabled: shouldTaskDisabled,\n                taskIsLoading: false\n            });\n        } else {\n            let urlTask = 'https://proyectopsa.herokuapp.com/proyectos/' + this.state.hoursModel.getIdProject() + '/tarea/';\n\n            fetch(urlTask)\n                .then(r => r.json())\n                .then((tasks) =>\n                {\n                    this.setState({\n                        hoursModel: this.state.hoursModel,\n                        lstTasks: tasks,\n                        isTaskDisabled: false,\n                        taskIsLoading: false\n                    });\n                }, (error) => {console.log(error);});\n        }\n    }\n\n    onTaskChange(newIdTask){\n        this.state.hoursModel.setIdTask(parseInt(newIdTask));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    render(){\n\n        return (\n            <div>\n\n                <Button color=\"primary\" onClick={this.changeVisibility}>Nueva</Button>\n\n                <Modal isOpen={this.state.isShow}\n                       toggle={this.changeVisibility}\n                       onKeyPress={this.saveHoursWithEnter}>\n\n                    <ModalHeader toggle={this.changeVisibility}>Carga de Horas</ModalHeader>\n\n                    <ModalBody onKeyPress={this.saveHoursWithEnter}>\n                        <FormGroup>\n                            <Label>Proyecto *</Label>\n                            <Input type=\"select\"\n                                   onChange={e => this.onProjectChange(e.target.value)}>\n                                <option value=\"0\"></option>\n                                {this.state.lstProjects.map((p) => <option key={p.codigo} value={p.codigo}>{p.nombre}</option>)}\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Tarea *</Label>\n                            {\n                                this.state.taskIsLoading ?\n                                    <Col className=\"text-center\">\n                                        <Loader\n                                            type=\"TailSpin\"\n                                            color=\"#00BFFF\"\n                                            height={30}\n                                            width={30}></Loader>\n                                    </Col>\n                                    :\n                                    <Input type=\"select\"\n                                           disabled={this.state.isTaskDisabled}\n                                           onChange={e => this.onTaskChange(e.target.value)}>\n                                        <option value=\"0\"></option>\n                                        {this.state.lstTasks.map((t) => <option key={t.codigo} value={t.codigo}>{t.nombre}</option>)}\n                                    </Input>\n                            }\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Row>\n                                <Col lg={6}>\n                                    <Label>Cantidad de Horas *</Label>\n                                    <TimePicker\n                                        theme=\"classic\"\n                                        time={this.state.hoursModel.getHoursAsString()}\n                                        timeMode=\"24\"\n                                        timeConfig={{\n                                            from: '0:15',\n                                            to: '23:45',\n                                            step: 15,\n                                            unit: 'minutes'\n                                        }}\n                                        onTimeChange={this.onTimeChange.bind(this)}/>\n                                </Col>\n\n                                <Col lg={6}>\n                                    <Label>Fecha *</Label>\n                                    <Input type=\"date\"\n                                           max={(new Date().toISOString().split(\"T\")[0])}\n                                           onChange={e => this.onDateChange(e.target.value)}></Input>\n                                </Col>\n                            </Row>\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Col className=\"col-datos-oblig\">\n                                (*) Campos obligatorios\n                                <hr/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup check row>\n                            <Col sm={{ size: 10, offset: 9 }}>\n                                <Button color=\"primary\" onClick={this.saveHours}>Guardar</Button>\n                            </Col>\n                        </FormGroup>\n\n                        {this.state.errorMessage ? (\n                          <Alert id=\"alerta\" color=\"danger\"> {this.state.errorMessage} </Alert>\n                        ) : (\n                          null\n                        )}\n                    </ModalBody>\n\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Alert, Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport TimePicker from 'react-times';\nimport HoursModel from '../../models/CargaDeHoras/HoursModel';\n\nimport 'react-times/css/classic/default.css';\nimport './ModalHours.css'\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport PropTypes from \"prop-types\";\nimport swal from \"sweetalert2\";\n\nimport { FaPencilAlt } from \"react-icons/fa\";\n\nexport default class ModalModifyHours extends Component {\n\n    static propTypes = {\n        hours: PropTypes.object.isRequired,\n        onReload: PropTypes.func.isRequired,\n    };\n\n    constructor(props){\n        super(props);\n\n        let hoursAux = new HoursModel();\n        hoursAux.file = props.hours.file;\n\n        this.state = {\n            isShow: false,\n            hoursModel: hoursAux,\n            lstProjects: [],\n            lstTasks: [],\n            isTaskDisabled: false,\n            taskIsLoading: false,\n            errorMessage:\"\"\n        };\n\n        this.state.hoursModel.setIdProject(this.props.hours.idProject);\n        this.state.hoursModel.setIdTask(this.props.hours.idTask);\n        this.state.hoursModel.setNewHours(this.props.hours.quantityHours, this.props.hours.quantityMinutes);\n        this.state.hoursModel.date = this.props.hours.date;\n\n        this.saveHoursById = this.saveHoursById.bind(this);\n        this.changeVisibility = this.changeVisibility.bind(this);\n        this.saveHoursWithEnter = this.saveHoursWithEnter.bind(this);\n        this.getListTasks = this.getListTasks.bind(this);\n        this.getListTasks();\n    }\n\n    changeVisibility() {\n        this.setState({\n            isShow: !this.state.isShow,\n            errorMessage: \"\",\n        });\n    }\n\n    saveHoursWithEnter(e){\n        if(e.key === 'Enter'){\n            this.changeVisibility();\n        }\n    }\n\n    saveHoursById() {\n\n        if (!this.isFormValid()){\n            this.setState({\n                errorMessage: \"Por favor, complete todos los campos obligatorios\"\n            });\n            return;\n        }\n\n        let url = 'https://squad6-backend.herokuapp.com/hours/' + this.props.hours.id;\n\n        let data = {\n            id: this.props.hours.id,\n            file: this.props.hours.file,\n            idProject: this.state.hoursModel.idProject,\n            idTask: this.state.hoursModel.idTask,\n            quantityHours: this.state.hoursModel.quantityHours,\n            quantityMinutes: this.state.hoursModel.quantityMinutes,\n            date: this.state.hoursModel.date,\n            loadingDate: this.props.hours.loadingDate\n        };\n\n        var dateAsString = this.state.hoursModel.getDateAsString();\n        var hoursAsString = this.state.hoursModel.getHoursAsString();\n\n        let self = this;\n\n        fetch(url, {\n            method: 'PUT',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        })\n        .then(function(response) {\n\n           \n            if(!response.ok)\n                throw new Error();\n\n            swal.fire({\n                title: 'Modificar horas',\n                text: \n                \"¿Está seguro que desea modificar estas horas?\",\n                icon: 'question',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                dangerMode: 'true',\n                confirmButtonText: 'Confirmar',\n                cancelButtonText: 'Cancelar'\n            }).then(answer=>{\n                if(answer.isConfirmed){\n                    self.changeVisibility();\n                    self.props.onReload();\n                    swal.fire({\n                        title: \"Se modificaron las horas correctamente.\",\n                        icon: \"success\"\n                    })\n                }\n            });\n        })\n        .catch(function(error) {\n            self.setState({\n                errorMessage: \"No se puede cargar más de 24 horas un mismo día\"\n            });\n        });\n    }\n\n    onTimeChange(newHours) {\n        this.state.hoursModel.setNewHours(parseInt(newHours.hour), parseInt(newHours.minute));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    onDateChange(newDate){\n        var stringNewDate = newDate.replace(/-/gi, \"\");\n\n        if (isNaN(parseInt(stringNewDate))){\n            this.state.hoursModel.date = 0;\n            return;\n        }\n        this.state.hoursModel.date = parseInt(stringNewDate);\n    }\n\n    isFormValid(){\n        return this.state.hoursModel.completeData();\n    }\n\n    componentDidMount()\n    {\n        //https://proyectopsa.herokuapp.com/proyectos/\n        fetch('https://proyectopsa.herokuapp.com/proyectos/')\n            .then(r => r.json())\n            .then((projects) =>\n            {\n                this.setState({\n                    lstProjects: projects\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    getListTasks(){\n\n        let urlTask = 'https://proyectopsa.herokuapp.com/proyectos/' + this.state.hoursModel.getIdProject() + '/tarea/';\n\n        fetch(urlTask)\n            .then(r => r.json())\n            .then((tasks) =>\n            {\n                this.setState({\n                    hoursModel: this.state.hoursModel,\n                    lstTasks: tasks,\n                    isTaskDisabled: false,\n                    taskIsLoading: false\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    onProjectChange(newIdProject){\n\n        this.setState({taskIsLoading: true});\n\n        this.state.hoursModel.setIdProject(newIdProject);\n        this.state.hoursModel.setIdTask(0);\n        let shouldTaskDisabled = (newIdProject == 0);\n\n        if (shouldTaskDisabled){\n            this.setState({\n                hoursModel: this.state.hoursModel,\n                lstTasks: [],\n                isTaskDisabled: shouldTaskDisabled,\n                taskIsLoading: false\n            });\n            \n        } else {\n            this.getListTasks();\n        }\n    }\n\n    onTaskChange(newIdTask){\n        this.state.hoursModel.setIdTask(parseInt(newIdTask));\n\n        this.setState({\n            hoursModel: this.state.hoursModel\n        })\n    }\n\n    render(){\n\n        return (\n            <div>\n\n                <button type=\"button\" className=\"btn btn-sm btn-rounded \" onClick = {this.changeVisibility} style={{marginTop: \"-7px\", color: \"blue\"}}>\n                                <FaPencilAlt/>\n                            </button>\n\n                <Modal isOpen={this.state.isShow}\n                       toggle={this.changeVisibility}\n                       onKeyPress={this.saveHoursWithEnter}>\n\n                    <ModalHeader toggle={this.changeVisibility}>Modificar hora cargada</ModalHeader>\n\n                    <ModalBody onKeyPress={this.saveHoursWithEnter}>\n                        <FormGroup>\n                            <Label>Proyecto *</Label>\n                            <Input type=\"select\"\n                                   onChange={e => this.onProjectChange(e.target.value)}\n                                   value={this.state.hoursModel.idProject.toString()}>\n                                <option value=\"0\"></option>\n                                {this.state.lstProjects.map((p) => <option key={p.codigo} value={p.codigo}>{p.nombre}</option>)}\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Tarea *</Label>\n                            {\n                                this.state.taskIsLoading ?\n                                    <Col className=\"text-center\">\n                                        <Loader\n                                            type=\"TailSpin\"\n                                            color=\"#00BFFF\"\n                                            height={30}\n                                            width={30}></Loader>\n                                    </Col>\n                                    :\n                                    <Input type=\"select\"\n                                           disabled={this.state.isTaskDisabled}\n                                           onChange={e => this.onTaskChange(e.target.value)} \n                                           value={this.state.hoursModel.idTask.toString()}>\n                                        <option value=\"0\"></option>\n                                        {this.state.lstTasks.map((t) => <option key={t.codigo} value={t.codigo}>{t.nombre}</option>)}\n                                    </Input>\n                            }\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Row>\n                                <Col lg={6}>\n                                    <Label>Cantidad de Horas *</Label>\n                                    <TimePicker\n                                        theme=\"classic\"\n                                        time={this.state.hoursModel.getHoursAsString()}\n                                        timeMode=\"24\"\n                                        timeConfig={{\n                                            from: '0:15',\n                                            to: '23:45',\n                                            step: 15,\n                                            unit: 'minutes'\n                                        }}\n                                        onTimeChange={this.onTimeChange.bind(this)}\n                                        />\n                                </Col>\n\n                                <Col lg={6}>\n                                    <Label>Fecha *</Label>\n                                    <Input type=\"date\"\n                                           max={(new Date().toISOString().split(\"T\")[0])}\n                                           onChange={e => this.onDateChange(e.target.value)}\n                                           value={\n                                            this.state.hoursModel.date.toString().substr(0,4) + \"-\" + \n                                            this.state.hoursModel.date.toString().substr(4,2) + \"-\" + \n                                            this.state.hoursModel.date.toString().substr(6,2)}></Input>\n                                </Col>\n                            </Row>\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Col className=\"col-datos-oblig\">\n                                (*) para aquellos campos que sean requeridos obligatoriamente\n                                <hr/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup check row>\n                            <Col sm={{ size: 10, offset: 9 }}>\n                                <Button color=\"primary\" onClick={this.saveHoursById}>Guardar</Button>\n                            </Col>\n                        </FormGroup>\n\n                        {this.state.errorMessage ? (\n                          <Alert id=\"alerta\" color=\"danger\"> {this.state.errorMessage} </Alert>\n                        ) : (\n                          null\n                        )}\n                    </ModalBody>\n\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {Button, Table, Row, Col, Card, CardBody, Container} from 'reactstrap';\nimport HoursModel from \"../../models/CargaDeHoras/HoursModel\";\nimport PropTypes from \"prop-types\";\nimport { FaTrashAlt, FaPencilAlt } from \"react-icons/fa\";\nimport {Link} from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport swal from \"sweetalert2\";\nimport ModalModifyHours from \"./ModalModifyHours\";\n\nexport default class GridItemHours extends Component {\n    static propTypes = {\n        hours: PropTypes.object.isRequired,\n        onReload: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            nameProject: \"\",\n            nameTask: \"\"\n        };\n\n        this.deleteHoursById = this.deleteHoursById.bind(this);\n    }\n\n    deleteHoursById(){\n        let url = 'https://squad6-backend.herokuapp.com/hours/' + this.props.hours.id;\n\n        swal.fire({\n            title: 'Eliminar la hora',\n            text: \"¿Está seguro que desea eliminar \" + this.props.hours.getHoursAsString() + \" horas del \" + this.props.hours.getDateAsString() + \"?\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            dangerMode: 'true',\n            confirmButtonText: 'Confirmar',\n            cancelButtonText: 'Cancelar'\n        }).then(answer=>{\n            if(answer.isConfirmed){\n                this.setState({isLoading: true});\n                fetch(url, {\n                    method: 'DELETE'}).then(() => {\n                    swal.fire({\n                        title: \"Se borraron \" + this.props.hours.getHoursAsString() + \" horas del \" + this.props.hours.getDateAsString() + \" con éxito.\" ,\n                        icon: \"success\"});\n                    this.setState({isLoading: false});\n                    this.props.onReload();\n                })\n            }\n        });\n    }\n    \n    componentDidMount() {\n\n        let url = 'https://proyectopsa.herokuapp.com/proyectos/' +\n                   this.props.hours.idProject.toString() + '/tarea/' +\n                   this.props.hours.idTask.toString();\n\n        fetch(url)\n            .then(r => r.json())\n            .then((taskByProject) =>\n            {\n\n                let nameTask = \"-\",\n                    nameProject = \"-\";\n\n                if (taskByProject.tarea != null){\n                    nameTask = taskByProject.tarea.nombre;\n                    nameProject = taskByProject.tarea.nombreProyecto;\n                }\n\n                this.setState({\n                    isLoading: false,\n                    nameProject: nameProject,\n                    nameTask: nameTask\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render(){\n        return (\n\n            this.state.isLoading ?\n                    <tr>\n                        <td colSpan={7}>\n                            <Loader\n                                type=\"TailSpin\"\n                                color=\"#00BFFF\"\n                                height={15}\n                                width={15}></Loader>\n                        </td>\n                    </tr>\n                :\n                    <tr>\n                        <td>{this.state.nameProject}</td>\n                        <td>{this.state.nameTask}</td>\n                        <td>{this.props.hours.getDateAsString()}</td>\n                        <td>{this.props.hours.quantityHours}</td>\n                        <td>{this.props.hours.quantityMinutes}</td>\n                        <td>\n                            <ModalModifyHours hours={this.props.hours} onReload={this.props.onReload}> </ModalModifyHours>\n                        </td>\n                        <td>\n                            <button type=\"button\" className=\"btn btn-sm btn-rounded\" onClick = {this.deleteHoursById} style={{marginTop: \"-7px\", color: \"red\"}}>\n                                <FaTrashAlt/>\n                            </button>\n                        </td>\n                    </tr>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {Button, Table, Row, Col, Card, CardBody, Container, CardHeader, ButtonToolbar} from 'reactstrap';\nimport HoursModel from \"../../models/CargaDeHoras/HoursModel\";\nimport GridItemHours from \"./GridItemHours\";\nimport ModalHours from \"./ModalHours\";\nimport Loader from \"react-loader-spinner\";\nimport PropTypes from \"prop-types\";\n\nexport default class GridHours extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            lstHours: []\n        };\n\n        this.onReloadGrid = this.onReloadGrid.bind(this);\n    }\n\n    componentDidMount() {\n\n        fetch('https://squad6-backend.herokuapp.com/hoursFile/' + this.props.file.toString())\n            .then(r => r.json())\n            .then((hoursByFile) =>\n            {\n                let lstHoursModel = [];\n\n                hoursByFile.forEach(x => {\n                    let model = new HoursModel();\n\n                    model.id = x.id;\n                    model.file = x.file;\n                    model.idProject = x.idProject;\n                    model.idTask = x.idTask;\n                    model.quantityHours = x.quantityHours;\n                    model.quantityMinutes = x.quantityMinutes;\n                    model.date = x.date;\n                    model.loadingDate = x.loadingDate;\n\n                    lstHoursModel.push(model);\n                });\n\n                lstHoursModel.sort((a, b) => a.date < b.date ? 1 : -1);\n                this.setState({\n                    isLoading: false,\n                    lstHours: lstHoursModel\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    onReloadGrid(){\n        fetch('https://squad6-backend.herokuapp.com/hoursFile/' + this.props.file.toString())\n            .then(r => r.json())\n            .then((hoursByFile) =>\n            {\n                let lstHoursModel = [];\n\n                hoursByFile.forEach(x => {\n                    let model = new HoursModel();\n\n                    model.id = x.id;\n                    model.file = x.file;\n                    model.idProject = x.idProject;\n                    model.idTask = x.idTask;\n                    model.quantityHours = x.quantityHours;\n                    model.quantityMinutes = x.quantityMinutes;\n                    model.date = x.date;\n                    model.loadingDate = x.loadingDate;\n\n                    lstHoursModel.push(model);\n                });\n\n                lstHoursModel.sort((a, b) => a.date < b.date ? 1 : -1);\n                this.setState({\n                    isLoading: false,\n                    lstHours: lstHoursModel\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render(){\n        return (\n            <div>\n                <Card>\n\n                    <CardHeader tag=\"h2\" style={{display: \"flex\"}}>\n                        <Col xl={10} style={{paddingLeft: \"12%\"}}>\n                            Horas Cargadas\n                        </Col>\n\n                        <Col xl={2}>\n                            <ModalHours file={this.props.file} onReload={this.onReloadGrid}></ModalHours>\n                        </Col>\n                    </CardHeader>\n\n                    <CardBody>\n                        <Container>\n\n                            {this.state.isLoading ?\n                                <Col className=\"text-center\">\n                                    <Loader\n                                        type=\"TailSpin\"\n                                        color=\"#00BFFF\"\n                                        height={50}\n                                        width={50}></Loader>\n                                </Col>\n                            :\n                                this.state.lstHours.length ?\n                                    <Table striped hover size=\"sm\">\n                                        <thead>\n                                        <tr>\n                                            <th>Proyecto</th>\n                                            <th>Tarea</th>\n                                            <th>Fecha</th>\n                                            <th>Horas</th>\n                                            <th>Minutos</th>\n                                            <th>Modificar</th>\n                                            <th>Eliminar</th>\n                                        </tr>\n                                        </thead>\n\n                                        <tbody>\n                                        {this.state.lstHours.map((h) =>\n                                            <GridItemHours key={h.id} hours={h} onReload={this.onReloadGrid}></GridItemHours>\n                                        )}\n                                        </tbody>\n                                    </Table>\n                                    :\n                                    <h4>El recurso no posee horas cargadas.</h4>\n                            }\n                        </Container>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {\n    Breadcrumb, BreadcrumbItem, Card, CardImg, CardText, CardBody, CardHeader, CardTitle,\n    CardSubtitle, Button, Label, ButtonToolbar, Row, Col, Container, Badge\n} from 'reactstrap';\nimport ModalHours from '../../components/CargaDeHoras/ModalHours';\nimport {Link} from \"react-router-dom\";\nimport GridHours from \"../../components/CargaDeHoras/GridHours\";\nimport Loader from \"react-loader-spinner\";\n\nexport default class CargaDeHorasPage extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            resource: { },\n            isLoading: true,\n            lstHours: []\n        };\n    }\n\n    componentDidMount()\n    {\n        const id = this.props.match.params.id;\n        fetch(`https://squad6-backend.herokuapp.com/resources/${id}`)\n            .then(r => r.json())\n            .then((resource) =>\n            {\n                this.setState({\n                    isLoading: false,\n                    resource: resource\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render() {\n        return (\n            <div style={{padding: 10 + 'px'}}>\n                <Row>\n                    <Col xl={12} lg={12}>\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem><Link to=\"/recursos\">Recursos</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{this.state.resource.Nombre} {this.state.resource.Apellido}</BreadcrumbItem>\n                        </Breadcrumb>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={4} lg={4}> \n                        <Card>\n                            <CardHeader tag=\"h4\">Datos Principales</CardHeader>\n\n                            <CardBody>\n                                <Container>\n\n                                    {this.state.isLoading ?\n                                        <Row>\n                                            <Col className=\"text-center\">\n                                                <Loader\n                                                    type=\"TailSpin\"\n                                                    color=\"#00BFFF\"\n                                                    height={50}\n                                                    width={50}></Loader>\n                                            </Col>\n                                        </Row>\n\n                                        :\n                                        <Row>\n                                            <Col xl={4} lg={4}>\n                                                <CardTitle tag=\"h6\">Legajo</CardTitle>\n                                                <CardText>{this.state.resource.legajo}</CardText>\n                                            </Col>\n\n                                            <Col xl={4} lg={4}>\n                                                <CardTitle tag=\"h6\">Nombre</CardTitle>\n                                                <CardText>{this.state.resource.Nombre}</CardText>\n                                            </Col>\n\n                                            <Col xl={4} lg={4}>\n                                                <CardTitle tag=\"h6\">Apellido</CardTitle>\n                                                <CardText>{this.state.resource.Apellido}</CardText>\n                                            </Col>\n\n                                        </Row>\n                                    }\n                                </Container>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n                    <Col xl={8} lg={8}>\n                        <GridHours file={this.props.match.params.id}></GridHours>\n                    </Col>\n\n                </Row>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button, Col, Row, Container, Badge\n} from 'reactstrap';\n\nexport default function ProyectoCard (props)\n{\n    const estadoString = props.project.estado.charAt(0).toUpperCase() + props.project.estado.slice(1);\n    const estadoColor = \"success\";\n    return (\n        <div>\n            <Card>\n                <CardBody>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <CardTitle tag=\"h4\">{props.project.nombre}</CardTitle>\n                            </Col>\n                            <Col>\n                                <h4><Badge color={estadoColor}>{estadoString}</Badge></h4>\n                            </Col>\n                            <Col>\n                                <CardText>{props.project.descripcion}</CardText>\n                            </Col>\n                            <Col>\n                            </Col>\n                            <Col body className=\"text-center\">\n                                <Link to={`/proyectos/${props.project.codigo}/tareas`}>\n                                <Button color=\"info\">Ver Tareas</Button>\n                                </Link>\n                            </Col>\n                        </Row>\n                    </Container>\n                </CardBody>\n            </Card>\n            <br />\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport ProyectoCard from '../../components/Proyectos/ProyectoCard';\nimport './MainProyectosPage.css';\nimport { Button } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\n\nexport default class MainProyectosPage extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            projects: []\n        }\n    }\n\n    componentDidMount()\n    {\n        fetch('https://proyectopsa.herokuapp.com/proyectos/')\n            .then(r => r.json())\n            .then((projects) =>\n            {\n                this.setState({\n                    projects: projects\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render()\n    {\n        return  (<div className='paginaProyectos'>\n                    <h1 id='tituloProyectos'>Proyectos</h1>\n                    <br/>\n                    <div id='titlesContainer'>\n                        <p>Nombre Proyecto</p>\n                        <p id=\"estadoTitle\">Estado</p>\n                        <NavLink to=\"/nuevoProyecto\" className=\"botonAgregarProyectoContainer\">Agregar Proyecto</NavLink>\n                    </div>\n                    <br />\n                    {this.state.projects.map((p) => <ProyectoCard key={p.codigo} project={p} />)}\n                </div>);\n        \n    }\n}\n","import React, { Component } from 'react'\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\nimport './AgregarProyectoPage.css';\n\nclass AgregarProyectoPage extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            modalHeader: null,\n            modalBody: null,\n            modalOnClose: null,\n            modal: false,\n        }\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n    crearProyecto(){\n\n        let url = \"https://proyectopsa.herokuapp.com/proyectos/\";\n\n        let nombreProyecto = document.getElementById(\"nombreProyecto\").value;\n        let fechaInicio = document.getElementById(\"fechaInicio\").value;\n        let descripcion = document.getElementById(\"descripcion\").value;\n        let fechaFin = document.getElementById(\"fechaFin\").value;\n        let horas = document.getElementById(\"horas\").value;\n        let presupuesto = document.getElementById(\"presupuesto\").value;\n\n        if (!this.validateRequiredEntries(nombreProyecto, fechaInicio, descripcion)) return;\n\n        let estado = this.obtenerEstado();\n\n        let data = {\n            \"nombre\": nombreProyecto,\n            \"fechaInicio\": fechaInicio,\n            \"fechaFin\": fechaFin == '' ? undefined : fechaFin,\n            \"estado\": estado == null ? undefined : estado ,\n            \"horas\": horas == \"\" ? undefined : parseInt(horas) ,\n            \"presupuesto\": presupuesto == '' ? undefined : parseInt(presupuesto),\n            \"descripcion\": descripcion\n        };\n        \n        let self = this;\n\n        fetch(url, {\n            method: 'POST', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n            .then(response => response.json())\n            .then(function(json) {\n                if(json.codigo) {\n                    self.abrirModal(\"ÉXITO\", `El proyecto se generó exitosamente con código: ${json.codigo}`, () => self.props.history.push(`/proyectos/`));\n                } else {\n                    self.abrirModal(\"ERROR\", json.description +  json.validation, () => {});\n                }\n            })\n            .catch(function(error) {\n                self.abrirModal(\"ERROR\", error.message, () => {})\n            });\n    }\n\n    abrirModal(header, body, onClose){\n        this.setState({\n            modalHeader: header,\n            modalBody: body,\n            modalOnClose: onClose,\n            modal: true,\n        })\n    }\n\n    obtenerEstado(){\n        if (document.getElementById(\"iniciado\").checked) return 'iniciado';\n        if (document.getElementById(\"enProceso\").checked) return 'en proceso';\n        if (document.getElementById(\"finalizado\").checked) return 'finalizado';\n    }\n\n    validateRequiredEntries(nombreProyecto, fechaInicio, descripcion){\n        let valid = true;\n        let nombreClassList = document.getElementById(\"nombre\").classList;\n        let fechaClassList = document.getElementById(\"startDate\").classList;\n        let descClassList = document.getElementById(\"desc\").classList;\n        \n        valid = this.validate(nombreProyecto, nombreClassList);\n        valid = this.validate(fechaInicio, fechaClassList);\n        valid = this.validate(descripcion, descClassList);\n        return valid;\n    }\n\n    validate(element, classList){\n        let valid = true;\n\n        if (element == ''){\n            classList.add(\"incorrect\");\n            valid = false;\n        } else {\n            classList.remove(\"incorrect\");\n        }\n\n        return valid;\n    }\n\n    render() {\n        let self = this;\n        const toggleModal = () =>self.setState({modal:!self.state.modal});\n\n        return (\n            <div>\n                <div className='formContainer'>\n                    <Form>\n                        <FormGroup>\n                            <Label className='parametro' for=\"nombreProyecto\" id='nombre'>Nombre Proyecto *</Label>\n                            <Input type=\"string\" name=\"nombreProyecto\" id=\"nombreProyecto\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaInicio\" id='startDate'>Fecha Inicio *</Label>\n                            <Input type=\"date\" name=\"fechaInicio\" id=\"fechaInicio\" className='general fecha' required/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaFin\" >Fecha Fin</Label>\n                            <Input type=\"date\" name=\"fechaFin\" id=\"fechaFin\" className='general fecha' />\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\">\n                            <Label className='parametro'>Estado</Label>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='iniciado'  />{' '}\n                                    Iniciado\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='enProceso' />{' '}\n                                    En Proceso\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check >\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='finalizado'  />{' '}\n                                    Finalizado\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"horas\">Horas</Label>\n                            <Input type=\"number\" name=\"horas\" id=\"horas\" className='general' />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"presupuesto\" >Presupuesto</Label>\n                            <Input type=\"number\" name=\"presupuesto\" id=\"presupuesto\" className='general' />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"descripcion\" id='desc'>Descripción *</Label>\n                            <Input type=\"textarea\" name=\"descripcion\" id=\"descripcion\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <Button onClick={() => this.crearProyecto()}>Crear Proyecto</Button>\n                    </Form>\n                    <label id='requisitosLabel'>(*) para aquellos campos que sean requeridos obligatoriamente</label>\n                </div>\n                <Modal isOpen={this.state.modal} toggle={toggleModal} className='popupError' onClosed={this.state.modalOnClose}>\n                    <ModalHeader toggle={toggleModal}>{this.state.modalHeader}</ModalHeader>\n                    <ModalBody>\n                        {this.state.modalBody}\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AgregarProyectoPage);","import React, { Component } from 'react'\nimport {Button, Table, Row, Col, Card, CardBody, Container, CardHeader, Breadcrumb, BreadcrumbItem} from 'reactstrap';\nimport HoursModel from \"../../models/CargaDeHoras/HoursModel\";\nimport { FaRegHandPointer } from 'react-icons/fa'\nimport {Link} from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\n\nexport default class RecursosPage extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            lstResources: []\n        };\n    }\n\n    componentDidMount()\n    {\n        fetch('https://squad6-backend.herokuapp.com/resources')\n            .then(r => r.json())\n            .then((resources) =>\n            {\n                this.setState({\n                    isLoading: false,\n                    lstResources: resources\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    render() {\n        return (\n            <div className=\"block\" style={{padding: 10 + 'px'}}>\n\n                <Row>\n                    <Col xl={12} lg={12}>\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Recursos</BreadcrumbItem>\n                        </Breadcrumb>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={{size: 6, offset: 3}}>\n                        <Card>\n                            <CardHeader tag=\"h2\">Recursos</CardHeader>\n\n                            <CardBody>\n                                <Container>\n\n                                    {this.state.isLoading ?\n                                        <Row>\n                                            <Col className=\"text-center\">\n                                                <Loader\n                                                    type=\"TailSpin\"\n                                                    color=\"#00BFFF\"\n                                                    height={50}\n                                                    width={50}></Loader>\n                                            </Col>\n                                        </Row>\n                                        :\n                                        <Row>\n                                            <Col>\n                                                <Table striped>\n                                                    <thead>\n                                                    <tr>\n                                                        <th>Legajo</th>\n                                                        <th>Nombre</th>\n                                                        <th>Apellido</th>\n                                                        <th>Seleccionar</th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n\n                                                    {this.state.lstResources.map((r) =>\n                                                        <tr key={r.legajo}>\n                                                            <td>{r.legajo}</td>\n                                                            <td>{r.Nombre}</td>\n                                                            <td>{r.Apellido}</td>\n                                                            <td>\n                                                                <Link to={`/cargadehoras/${r.legajo}`}>\n                                                                    <button type=\"button\" className=\"btn btn-sm btn-rounded \">\n                                                                        <FaRegHandPointer/>\n                                                                    </button>\n                                                                </Link>\n\n                                                            </td>\n                                                        </tr>\n\n                                                    )}\n                                                    </tbody>\n                                                </Table>\n                                            </Col>\n                                        </Row>\n                                    }\n\n\n                                </Container>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Row, Card, CardBody, CardTitle, CardText, Button,  Col } from 'reactstrap';\nimport {Form, FormGroup, Label, Input } from 'reactstrap';\nimport './TareaPage.css';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\n\n\nclass TareaPage extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            tarea: [],\n            modal: false,\n            errorModal: false,\n            modalBody: null,\n            modalHeader: null,\n            acceptModalButton: null,\n            errorMessage: \"\",\n            prioridad: \"\",\n            estado: \"\",\n            codigoRecurso: \"\",\n            fechaFin: \"\",\n            recursosXhoras: [],\n        }\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n    asignarRecurso(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"codigoRecurso\" id=\"codigoRecursoLabel\">Código Recurso:</Label>\n                        <Input type=\"number\" name=\"codigoRecurso\" id=\"codigoRecurso\" />\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n        this.abrirModal(\n            \"Asignar Recurso\",\n            content,\n            () => {\n                let codigoRecurso = document.getElementById(\"codigoRecurso\").value;\n                if (!self.validateInputText(codigoRecurso, \"codigoRecursoLabel\")) return;\n\n                self.validateRecursoAndAct(codigoRecurso);\n            }\n        )\n    }\n\n    validateRecursoAndAct(codigoRecurso){\n        let self = this;\n        fetch(`https://squad6-backend.herokuapp.com/resources/${codigoRecurso}`)\n            .then(r => r.json())\n            .then(function(json) {\n                if(json.Nombre) {\n                    self.props.history.push(\"/cargadehoras/\" + codigoRecurso)\n                    this.setState({modal:false});\n                } else {\n                    self.setState({\n                        errorMessage: \"ERROR: \" + json.description +  json.validation + \" Verificar que sea un recurso válido\",\n                        errorModal: true,\n            \n                    })\n                }\n            })\n            .catch(function(error) {\n                self.setState({\n                    errorMessage: \"ERROR: \" + error.message,\n                    errorModal: true,\n                })\n            });\n    }\n\n    modificarPrioridad(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup tag=\"fieldset\">\n                        <Label className='parametro' id='priorityLabel'>Prioridad</Label>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio2' id='bajaTarea'  />{' '}\n                                Baja\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio2' id='mediaTarea' />{' '}\n                                Media\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check >\n                            <Label check>\n                                <Input type=\"radio\" name='radio2' id='altaTarea'  />{' '}\n                                Alta\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n        this.abrirModal(\n            \"Modificar Prioridad\",\n            content,\n            () => {\n                if (!self.validarRadio([\"bajaTarea\", \"mediaTarea\", \"altaTarea\"], \"priorityLabel\")) return;\n                    let prioridad = self.obtenerRadio(\"bajaTarea\", \"mediaTarea\", \"altaTarea\", \n                                                            \"baja\", \"media\", \"alta\");\n                    self.patch({\n                        \"prioridad\":prioridad\n                    });\n                    \n                    self.setState({modal:false});\n\n            }\n        )\n    }\n\n    modificarFechaFinal(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"fechaFinal\" id=\"fechaFinalLabel\" >Fecha Fin:</Label>\n                        <Input type=\"date\" name=\"fechaFinal\" id=\"fechaFinal\"/>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n\n        this.abrirModal(\n            \"Modificar Fecha Final\",\n            content,\n            () => {\n                let fechaFinal = document.getElementById(\"fechaFinal\").value;\n                if(!self.validateInputText(fechaFinal, \"fechaFinalLabel\")) return;\n                \n                self.patch({\n                    \"fechaFin\":fechaFinal\n                });\n\n                self.setState({modal:false});\n            }\n        )\n    }\n\n    modificarEstado(){\n        let self = this;\n        let content = (\n            <div>\n                <Form>\n                    <FormGroup tag=\"fieldset\">\n                        <Label id=\"estadoLabel\">Estado</Label>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio' id='iniciadoTarea'  />{' '}\n                                Iniciado\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name='radio' id='enProcesoTarea' />{' '}\n                                En Proceso\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check >\n                            <Label check>\n                                <Input type=\"radio\" name='radio' id='finalizadoTarea'  />{' '}\n                                Finalizado\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n        this.abrirModal(\n            \"Modificar Estado\",\n            content,\n            () => {\n                if (!self.validarRadio([\"iniciadoTarea\", \"enProcesoTarea\", \"finalizadoTarea\"], \"estadoLabel\")) return;\n                let estado = self.obtenerRadio(\"iniciadoTarea\", \"enProcesoTarea\", \"finalizadoTarea\", \n                                                      \"iniciado\", \"en proceso\", \"finalizado\");\n                self.patch({\n                    \"estado\":estado\n                });\n\n                self.setState({modal:false});\n            }\n        )\n    }\n    \n    patch(data, url){\n        if (url == null) {\n            url = `https://proyectopsa.herokuapp.com/proyectos/${this.state.tarea.proyectoID}/tarea/${this.state.tarea.codigo}`;\n        }\n        let self = this;\n        fetch(url, {\n            method: 'PATCH', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n          .then(response => response.json())\n          .then(function(json) {\n              if(json.codigo) {\n                  self.setState(data);\n                  return;\n              } else {\n                    self.setState({\n                        errorMessage : json.descripcion + json.validation,\n                        errorModal: true,\n                    })\n              }\n          })\n          .catch(function(error) {\n                self.setState({\n                    errorMessage : error.message,\n                    errorModal: true,\n                })\n          });\n    }\n\n\n    obtenerRadio(radio1, radio2, radio3, result1, result2, result3){\n        if (document.getElementById(radio1).checked) return result1;\n        if (document.getElementById(radio2).checked) return result2;\n        if (document.getElementById(radio3).checked) return result3;\n    }\n\n    validarRadio(elements, labelID){\n        let labelClassList = document.getElementById(labelID).classList;\n\n        let primero = document.getElementById(elements[0]);\n        let segundo = document.getElementById(elements[1]);\n        let tercero = document.getElementById(elements[2]);\n\n        if (!primero.checked && !segundo.checked && !tercero.checked){\n            labelClassList.add(\"incorrect\");\n            return false\n        } else {\n            labelClassList.remove(\"incorrect\");\n        }\n\n        return true\n    }\n\n    \n    validateInputText(value, classListId){\n        if (value == null || value == ''){\n            let label = document.getElementById(classListId);\n            label.classList.add(\"incorrect\");\n            \n            return false;\n        }\n        return true;\n    }\n\n    abrirModal(header, body, acceptButton){\n        this.setState({\n            modalHeader: header,\n            modalBody: body,\n            acceptModalButton: acceptButton,\n            modal: true,\n        })\n    }\n\n    componentDidMount(){\n        this.tareaID = this.props.match.params.idtarea;\n        this.proyectoID = this.props.match.params.id;\n\n        this.obtenerTareas();\n        this.obtenerRecursosPorTarea();\n    }\n\n    obtenerRecursosPorTarea(){\n        let self = this;\n        fetch(`https://squad6-backend.herokuapp.com/hours`)\n            .then(r => r.json())\n            .then((horas) => {\n                self.obtenerHorasDeTarea(horas)\n            })\n    }\n\n    obtenerHorasDeTarea(horas){\n        for(let hora in horas){\n            if(horas[hora].idProject == this.proyectoID && horas[hora].idTask == this.tareaID){\n                \n                fetch(`https://squad6-backend.herokuapp.com/resources/${horas[hora].file}`)\n                    .then(r => r.json())\n                    .then((recurso) => {\n\n                        this.setState({\n                            recursosXhoras: [...this.state.recursosXhoras, {\n                                nombre: recurso.Nombre + \" \" + recurso.Apellido,\n                                codigo: horas[hora].file,\n                                horas: horas[hora].quantityHours +  (horas[hora].quantityMinutes == 0 ? \"\" : \":\" + horas[hora].quantityMinutes)\n                            }]\n                        })\n                    })\n            }\n        }\n    }\n\n    obtenerTareas(){\n        fetch(`https://proyectopsa.herokuapp.com/proyectos/${this.proyectoID}/tarea/${this.tareaID}`)\n            .then(r => r.json())\n            .then((tarea) =>\n            {\n                let trueTarea = tarea['tarea'];\n                this.setState({\n                    tarea: trueTarea,\n                    prioridad: trueTarea.prioridad,\n                    estado: trueTarea.estado,\n                    fechaFin: trueTarea.fechaFin,\n                    codigoRecurso: trueTarea.codigoRecurso,\n                });\n            }, (error) => {console.log(error);});\n    }\n\n    noResources(){\n        if(this.state.recursosXhoras.length == 0){\n            return <div id=\"sinAsignados\">\n                No hay recursos asignados a esta tarea.\n            </div>                          \n        }\n    }\n\n    render() {\n        const tarea = this.state.tarea;\n        let self = this;\n        const toggleModal = () =>self.setState({modal:!self.state.modal});\n        const toggleErrorModal = () => self.setState({errorModal: !self.state.errorModal});\n        const closeBtn = <Button id=\"closebtn\" onClick={() => self.setState({errorModal:false})}> X </Button>\n        return (\n            <div id='paginaTareas'>\n                <div id='subheaderTarea'>\n                    <br/>\n                    <h1>{tarea.nombre}</h1>\n                </div>\n                <div id='cardsContainer'> \n                    <Row>\n                        <Col sm=\"6\">\n                            <div id='cardGeneral' className='card'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">General</CardTitle>\n                            \n                                <CardText><b>Descripción:</b> {tarea.descripcion}</CardText>\n                                <div id='infoCodigos'>\n                                    <p className='cardText'><b>Código Tarea:</b> {tarea.codigo}.</p>\n                                    <p className='cardText'><b>Código Proyecto:</b> {tarea.codigoProyecto}.</p>\n                                    <p className='cardText'><b>Nombre Proyecto:</b> {tarea.nombreProyecto}</p>\n                                </div>\n                                \n                                </Card>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"6\">\n                            <div id='cardRecursos' className='card cardsLeft cardsTop'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">Horas Asignadas A Recursos</CardTitle>\n                                <div id =\"recursosConHoras\">\n                                    {this.noResources()}\n                                    {this.state.recursosXhoras.map((p) => {\n                                        return (<div className=\"recursosHoras\">\n                                                    <p id=\"codigoRecursoCard\"><b>Código Recurso:</b> {p.codigo}&nbsp;&nbsp;&nbsp;&nbsp;<b>Nombre Recurso:</b> {p.nombre}&nbsp;&nbsp;&nbsp;&nbsp; <b>Horas asignadas:</b> {p.horas}</p>\n                                                </div>\n                                        )})}\n                                </div> \n                                \n                                {/* <CardText id=\"recursosText\"><b>Código Recurso:</b> {this.state.codigoRecurso == null ? \"Ningún recurso asignado\" : tarea.codigoRecurso}</CardText> */}\n                                <Button id=\"recursosButton\" onClick={() => this.asignarRecurso()}>Asignar Horas a Recurso</Button>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col sm=\"6\">\n                            <div id='cardFechas' className='card cardsRight cardsTop'>\n                                <Card body>\n                                <CardTitle tag=\"h5\" className=\"cardTitle\">Fechas</CardTitle>\n                                <div id=\"fechasTareas\">\n                                    <CardText><b>Fecha Inicial:</b> {tarea.fechaInicio}</CardText>\n                                    <CardText><b>Fecha Final:</b> {this.state.fechaFin == null ? \"No hay fecha final\" : this.state.fechaFin}</CardText>\n                                </div>\n                                <Button id=\"fechaButton\" onClick={() => this.modificarFechaFinal()}>Modificar Fecha Final </Button>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col sm=\"6\">\n                            <div id='cardEstado' className='card cardsLeft'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">Estado</CardTitle>\n                                <CardText className={this.state.estado}>{this.state.estado}</CardText>\n                                <Button onClick={() => this.modificarEstado()}>Modificar Estado</Button>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col sm=\"6\">\n                            <div id='cardPrioridad' className='card cardsRight'>\n                                <Card body>\n                                <CardTitle className=\"cardTitle\" tag=\"h5\">Prioridad</CardTitle>\n                                <CardText className={this.state.prioridad + \" prioridadValue\"}>{this.state.prioridad}</CardText>\n                                <Button onClick={() => this.modificarPrioridad()}>Modificar Prioridad </Button>\n                                </Card>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n                <div id=\"modals\">\n                    <Modal isOpen={this.state.modal} toggle={toggleModal}>\n                        <ModalHeader toggle={toggleModal}>{this.state.modalHeader}</ModalHeader>\n                        <ModalBody>\n                            {this.state.modalBody}\n                        </ModalBody>\n                        <Button onClick={this.state.acceptModalButton} id=\"boton\">\n                            Aceptar\n                        </Button>\n                    </Modal>\n                    <Modal isOpen={this.state.errorModal} toggle={toggleErrorModal}>\n                        <ModalHeader toggle={toggleModal} close={closeBtn}>ERROR</ModalHeader>\n                        <ModalBody>\n                            {this.state.errorMessage}\n                        </ModalBody>\n                        <Button onClick={() => self.setState({errorModal:false})} id=\"boton\">\n                            Cancelar\n                        </Button>\n                    </Modal>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(TareaPage);\n","import React, { Component } from 'react';\nimport { Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport TimePicker from 'react-times';\n\nimport 'react-times/css/classic/default.css';\nimport './ModalTickets.css'\n\nexport default class ModalTickets extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isShow: false,\n            resources: [{}],\n            tasks: [{}],\n            description: \"\",\n            task_id: null,\n            type: \"consulta\",\n            priority: 1,\n            resource_id: null,\n            name: \"\"\n        };\n\n        this.saveTicket = this.saveTicket.bind(this);\n        this.changeVisibility = this.changeVisibility.bind(this);\n\n        this.saveTicketWithEnter = this.saveTicketWithEnter.bind(this);\n\n        this.handleTypeChange = this.handleTypeChange.bind(this);\n        this.handlePriorityChange = this.handlePriorityChange.bind(this);\n        this.handleTaskChange = this.handleTaskChange.bind(this);\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleResourceChange = this.handleResourceChange.bind(this);\n\n    }\n\n    changeVisibility() {\n        this.setState({\n            isShow: !this.state.isShow\n        });\n\n    }\n\n    saveTicketWithEnter(e){\n        if(e.key === 'Enter'){\n            this.changeVisibility();\n        }\n\n    }\n\n    saveTicket() {\n        this.changeVisibility();\n        var url = 'https://aninfo-soporte.herokuapp.com/create_ticket';\n        var data = {\n            \"type\" : this.state.type,\n            \"description\": this.state.description,\n            \"task_id\": this.state.task_id,\n            \"priority\": this.state.priority,\n            \"resource_id\": this.state.resource_id,\n            \"name\": this.state.name\n        };\n        console.log(data)\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            mode:'cors'\n        })\n\n    }\n\n    handleTypeChange(event) {\n        this.setState({type: event.target.value});\n        console.log(event.target.value)\n    }\n    handleTaskChange(event) {\n        this.setState({task_id: event.target.value});\n        console.log(event.target.value)\n    }\n    handlePriorityChange(event) {\n        this.setState({priority: event.target.value});\n        console.log(event.target.value)\n    }\n    handleDescriptionChange(event) {\n        this.setState({description: event.target.value});\n        console.log(event.target.value)\n    }\n    handleNameChange(event) {\n        this.setState({name: event.target.value});\n        console.log(event.target.value)\n    }\n    handleResourceChange(event) {\n        this.setState({resource_id: event.target.value});\n        console.log(event.target.value)\n    }\n\n    handleSubmit(event) {\n        //alert('A name was submitted: ' + this.state.value);\n        //event.preventDefault();\n      }\n\n\n    componentDidMount() {\n        var url_resources = 'https://squad6-backend.herokuapp.com/resources';\n        fetch(url_resources, {\n            method: 'GET'\n        }).then(response => response.json().then(data => {\n            this.setState({resources: data});\n            if (data.length > 0){\n                this.state.resource_id = data[0].legajo\n            }\n        }));\n        var url_tasks = 'https://aninfo-soporte.herokuapp.com/tasks';\n        fetch(url_tasks, {\n            method: 'GET'\n        }).then(response => response.json().then(data => {\n            this.setState({tasks: data});\n            if (data.length > 0){\n                this.state.task_id = data[0].codigo\n            }\n        }\n        ))\n\n    }\n\n    render(){\n\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.changeVisibility}>Crear Ticket</Button>\n\n                <Modal isOpen={this.state.isShow}\n                       toggle={this.changeVisibility}\n                       onKeyPress={this.saveTicketWithEnter}>\n\n                    <ModalHeader toggle={this.changeVisibility}>Crear Ticket</ModalHeader>\n\n                    <ModalBody>\n                        <FormGroup>\n                            <Label>Nombre</Label>\n                            <Input type=\"text\" value={this.state.name} onChange={this.handleNameChange}></Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Tarea</Label>\n                            <Input type=\"select\"  onChange={this.handleTaskChange}>\n                                    {this.state.tasks.map((p) => <option key={p.codigo} value={p.codigo}>{p.nombre} </option>)} </Input>\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Recurso</Label>\n                                <Input type=\"select\" onChange={this.handleResourceChange} >\n                                    {this.state.resources.map((p) => <option key={p.legajo} value={p.legajo}>{p.Nombre} {p.Apellido}</option>)} </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Tipo</Label>\n                            <Input type=\"select\" value={this.state.type} onChange={this.handleTypeChange}>\n                                <option value=\"consulta\">Consulta</option>\n                                <option value=\"error\">Error</option>\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Descripcion</Label>\n                            <Input type=\"text\" value={this.state.description} onChange={this.handleDescriptionChange}></Input>\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Prioridad</Label>\n                            <Input type=\"select\" value={this.state.priority} onChange={this.handlePriorityChange}>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n\n                        </FormGroup>\n                        <FormGroup check row>\n                            <Col sm={{ size: 10, offset: 9 }}>\n                                <Button color=\"primary\" onClick={this.saveTicket}>Guardar</Button>\n                            </Col>\n                        </FormGroup>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\nimport {ButtonToolbar, Col, Row} from \"reactstrap\";\nimport ModalTickets from \"./ModalTickets\";\nimport {Link} from \"react-router-dom\";\n\nexport default function TicketCard (props)\n{\n    return (\n        <div>\n            <Row>\n                <Col>\n                    <Link to={`/soporte/ticket_detail/${props.item.id}`}>Ticket {props.item.name}</Link>\n                </Col>\n                <Col>\n                    <Row>\n                        Proyecto: {props.item['project name']}\n                    </Row>\n                    <Row>\n                        Estado: {props.item.status}\n                    </Row>\n                    <Row>\n                        Prioridad: {props.item.priority}\n                    </Row>\n                    <Row>\n                        Fecha Limite: {props.item['limit date']}\n                    </Row>\n                </Col>\n            </Row>\n        </div>)\n}\n","import React, { Component } from 'react'\nimport { Button, ButtonToolbar, Row, Col } from 'reactstrap';\nimport {NavLink} from \"react-router-dom\";\nimport TicketCard from \"../components/CargaDeTickets/TicketCard\";\nimport ModalTickets from '../components/CargaDeTickets/ModalTickets';\n\n\nexport default class Soporte extends Component {\n\n     constructor(props)\n    {\n        super(props);\n        this.state = {\n            tickets: []\n        }\n    }\n\n    componentDidMount() {\n        var url = 'https://aninfo-soporte.herokuapp.com/tickets_main_data';\n        var data = {};\n\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            mode:'cors'\n        }).then(response => response.json().then(data => this.setState({\n            tickets: data\n        })));\n\n    }\n\n\n\n    render()\n    {\n        return  (<div className='paginaTickets'>\n                    <div id='ticketsHeader'>\n                        <p id='tituloTickets'>Tickets</p>\n                    </div>\n                    <div>\n                        <Row>\n                            <Col>\n                                <ButtonToolbar>\n                                    <ModalTickets></ModalTickets>\n                                </ButtonToolbar>\n                            </Col>\n                        </Row>\n                    </div>\n                    <div id='ticketsList'>\n                        <p id='tituloTickets'>TicketsDisponibles</p>\n                    </div>\n                    <div id='ticketsContainer'>\n                                {this.state.tickets.map((item) => <TicketCard  key={item.name} item={item} />)}\n                    </div>\n                </div>);\n\n    }\n\n\n}","import React, { Component } from 'react';\nimport { Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport TimePicker from 'react-times';\n\nimport 'react-times/css/classic/default.css';\nimport './ModalTickets.css'\n\nexport default class ModalTickets extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            isShow: false,\n            ticket_original_data: props.data,\n            resources: [{}]\n        };\n\n        this.saveTicket = this.saveTicket.bind(this);\n        this.changeVisibility = this.changeVisibility.bind(this);\n\n        this.saveTicketWithEnter = this.saveTicketWithEnter.bind(this);\n\n        this.handleTypeChange = this.handleTypeChange.bind(this);\n        this.handlePriorityChange = this.handlePriorityChange.bind(this);\n        this.handleTaskChange = this.handleTaskChange.bind(this);\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this)\n        this.handleStatusChange = this.handleStatusChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleResourceChange = this.handleResourceChange.bind(this);\n\n    }\n    componentDidMount() {\n        var url = 'https://squad6-backend.herokuapp.com/resources';\n\n        fetch(url, {\n            method: 'GET'\n        }).then(response => response.json().then(data => this.setState({\n            resources: data\n        })));\n    }\n\n    changeVisibility() {\n        this.setState({\n            isShow: !this.state.isShow\n        });\n\n    }\n\n    saveTicketWithEnter(e){\n        if(e.key === 'Enter'){\n            this.changeVisibility();\n        }\n\n    }\n\n    saveTicket() {\n        this.changeVisibility();\n        var url = 'https://aninfo-soporte.herokuapp.com/edit_ticket';\n        var data = {\n            \"ticket_id\": this.state.id,\n            \"description\": this.state.description,\n            \"task_id\": this.state.task_id,\n            \"priority\": this.state.priority,\n            \"status\": this.state.status,\n            \"resource_id\": this.state.resource_id,\n            \"resource_name\": this.state.resource_name\n        };\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            mode:'cors'\n        })\n        console.log(data)\n\n    }\n\n    handleTypeChange(event) {\n        this.setState({type: event.target.value});\n        console.log(event.target.value)\n    }\n    handleTaskChange(event) {\n        this.setState({task: event.target.value});\n        console.log(event.target.value)\n    }\n    handlePriorityChange(event) {\n        this.setState({priority: event.target.value});\n        console.log(event.target.value)\n    }\n    handleDescriptionChange(event) {\n        this.setState({description: event.target.value});\n        console.log(event.target.value)\n    }\n    handleStatusChange(event) {\n        this.setState({status: event.target.value});\n        console.log(event.target.value)\n    }\n    handleResourceChange(event) {\n        this.setState({resource_id: event.target.value});\n        console.log(event.target.value)\n    }\n\n\n    handleSubmit(event) {\n        //alert('A name was submitted: ' + this.state.value);\n        //event.preventDefault();\n    }\n\n    render(){\n\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.changeVisibility}>Editar Ticket</Button>\n\n                <Modal isOpen={this.state.isShow}\n                       toggle={this.changeVisibility}\n                       onKeyPress={this.saveTicketWithEnter}>\n\n                    <ModalHeader toggle={this.changeVisibility}>Editar Ticket</ModalHeader>\n\n                    <ModalBody>\n                        <FormGroup>\n                            <Label>Descripcion</Label>\n                            <Input type=\"text\" value={this.state.description} onChange={this.handleDescriptionChange}></Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Prioridad </Label>\n                            <Input type=\"select\" value={this.state.priority} onChange={this.handlePriorityChange}>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Status </Label>\n                            <Input type=\"select\" value={this.state.status} onChange={this.handleStatusChange}>\n                                <option value=\"en progreso soporte\">en progreso soporte</option>\n                                <option value=\"escalado en ingeneria\">escalado en ingeneria</option>\n                                <option value=\"esperando respuesta del cliente\">esperando respuesta del cliente</option>\n                                <option value=\"resuelto\">resuelto</option>\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Recurso</Label>\n                                <Input type=\"select\" value={this.state.resource_id} onChange={this.handleResourceChange} >\n                                    {this.state.resources.map((p) => <option key={p.legajo} value={p.legajo}>{p.Nombre} {p.Apellido}</option>)}                                </Input>\n                        </FormGroup>\n                        <FormGroup check row>\n                            <Col sm={{ size: 10, offset: 9 }}>\n                                <Button color=\"primary\" onClick={this.saveTicket}>Guardar</Button>\n                            </Col>\n                        </FormGroup>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}","import {ButtonToolbar, Col, Row} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport React, {Component} from \"react\";\nimport ModalEdit from '../../components/CargaDeTickets/ModalEdit';\n\n\nexport default class TicketDetail extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n\n    }\n    componentDidMount() {\n        var splitted_url = window.location.href.split('/');\n        var ticket_id = splitted_url[splitted_url.length - 1];\n        var ticket_data_url = 'https://aninfo-soporte.herokuapp.com/ticket_data'\n        var data = {ticket_id: ticket_id}\n        fetch(ticket_data_url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            mode:'cors'\n        }).then(response => response.json().then(ticket => {\n            this.setState({\n            id: ticket[\"id\"],\n            name: ticket[\"name\"],\n            description: ticket[\"description\"],\n            status: ticket[\"status\"],\n            priority: ticket[\"priority\"],\n            type: ticket[\"type\"],\n            project_name: ticket[\"project name\"],\n            task_name: ticket[\"task name\"],\n            task_description: ticket[\"description\"],\n            creation_date: ticket[\"creation date\"],\n            limit_date:  ticket[\"limit date\"],\n            resource_id: ticket[\"resource id\"],\n            resource_name: ticket[\"resource name\"]\n        });\n            this.modal_edit.setState({\n                id: ticket[\"id\"],\n                name: ticket[\"name\"],\n                description: ticket[\"description\"],\n                status: ticket[\"status\"],\n                priority: ticket[\"priority\"],\n                type: ticket[\"type\"],\n                project_name: ticket[\"project name\"],\n                task_name: ticket[\"task name\"],\n                task_description: ticket[\"description\"],\n                creation_date: ticket[\"creation date\"],\n                limit_date:  ticket[\"limit date\"],\n                resource_id: ticket[\"resource id\"],\n                resource_name: ticket[\"resource name\"]});\n\n    }));\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                Detalle de ticket\n                <Row>\n                    <Col>\n                        <ButtonToolbar>\n                            <ModalEdit data={this.state} ref={ref => (this.modal_edit = ref)}></ModalEdit>\n                        </ButtonToolbar>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                       {this.state.name}\n                    </Col>\n                    <Col>\n                        <Row>\n                            Proyecto: {this.state.project_name}\n                        </Row>\n                        <Row>\n                            Estado: {this.state.status}\n                        </Row>\n                        <Row>\n                            Prioridad: {this.state.priority}\n                        </Row>\n                        <Row>\n                            Descripcion: {this.state.description}\n                        </Row>\n                        <Row>\n                            Tipo: {this.state.type}\n                        </Row>\n                        <Row>\n                            Tarea: {this.state.task_name}\n                        </Row>\n                        <Row>\n                            Descripcion de tarea: {this.state.task_description}\n                        </Row>\n                        <Row>\n                            Fecha Creacion: {this.state.creation_date}\n                        </Row>\n                        <Row>\n                            Fecha Limite: {this.state.limit_date}\n                        </Row>\n                    </Col>\n                </Row>\n            </div>)\n    }\n}","import React from 'react';\nimport { Route } from 'react-router';\nimport {Link} from \"react-router-dom\";\nimport \"./Main.css\";\nimport { Card, CardTitle, CardText, Col } from 'reactstrap';\n\nconst styles = {\n    backgroundColor: '#343a40',\n    borderColor: 'rgb(112 170 255)'\n}\n\nexport default () => (\n\n\n    <header>\n        <nav>\n            <br/>\n            <Col xl={{size: 6, offset: 3}}>\n                <div style={{display: \"flex\"}}>\n                    <Col xl={6} lg={6} className=\"col-link-inicial\">\n                        <Link to='/'>\n                            <Card body inverse style={styles}>\n                                <CardTitle tag=\"h5\">Inicio</CardTitle>\n                            </Card>\n                        </Link>\n                    </Col>\n\n                    <Col xl={6} lg={6} className=\"col-link-inicial\">\n                        <Link to='/proyectos'>\n                            <Card body inverse style={styles}>\n                                <CardTitle tag=\"h5\">Proyectos</CardTitle>\n                            </Card>\n                        </Link>\n                    </Col>\n                </div>\n            </Col>\n\n            <br />\n\n            <Col xl={{size: 6, offset: 3}}>\n                <div style={{display: \"flex\"}}>\n                    <Col xl={6} lg={6} className=\"col-link-inicial\">\n                        <Link to='/recursos'>\n                            <Card body inverse style={styles}>\n                                <CardTitle tag=\"h5\">Recursos</CardTitle>\n                            </Card>\n                        </Link>\n                    </Col>\n\n                    <Col xl={6} lg={6} className=\"col-link-inicial\">\n                        <Link to='/soporte'>\n                            <Card body inverse style={styles}>\n                                <CardTitle tag=\"h5\">Soporte</CardTitle>\n                            </Card>\n                        </Link>\n                    </Col>\n                </div>\n            </Col>\n        </nav>\n    </header>\n);\n","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport {\n    Card, CardText, CardBody,\n    CardTitle, Button, Col, Row, Container, Badge\n} from 'reactstrap';\n\nexport default function TareaCard (props)\n{\n    const estadoString = props.tarea.estado.charAt(0).toUpperCase() + props.tarea.estado.slice(1);\n    const estadoColor = \"success\";\n    return (\n        <div>\n            <Card>\n                <CardBody>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <CardTitle tag=\"h3\">{props.tarea.nombre}</CardTitle>\n                            </Col>\n                            <Col>\n                                <h4><Badge color={estadoColor}>Iniciado{/*estadoString*/}</Badge></h4>\n                            </Col>\n                            <Col>\n                                <CardText>{props.tarea.descripcion}</CardText>\n                            </Col>\n                            <Col>\n                            </Col>\n                            <Col body className=\"text-center\">\n                                <Link to={`/proyectos/${props.codigoProyecto}/tareas/${props.tarea.codigo}`}>\n                                    <Button color=\"info\">Ver Tarea</Button>\n                                </Link>\n                            </Col>\n                        </Row>\n                    </Container>\n                </CardBody>\n            </Card>\n            <br />\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport './MainTareasPage.css';\nimport { NavLink } from 'react-router-dom';\nimport TareaCard from \"../../components/Proyectos/TareaCard\";\n\n\nexport default class MainTareasPage extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            tareas: [],\n            nombreProyecto: \"\"\n        }\n    }\n\n    componentDidMount()\n    {\n        const id = this.props.match.params.id;\n        fetch(`https://proyectopsa.herokuapp.com/proyectos/${id}/tarea`)\n            .then(r => r.json())\n            .then((tareas) =>\n            {\n                this.setState({\n                    tareas: tareas\n                });\n            }, (error) => {console.log(error)}\n        );\n\n        fetch(`https://proyectopsa.herokuapp.com/proyectos/${id}`)\n            .then(r => r.json())\n            .then((proyecto) =>\n            {   \n                console.log(proyecto)\n                this.setState({\n                    nombreProyecto: proyecto.proyecto.nombre\n                });\n            }, (error) => {console.log(error);}\n        );\n    }\n\n    render()\n    {\n        const id = this.props.match.params.id;\n        return  (<div className='paginaProyectos'>\n                    <div id=\"subheader\"> \n                        <h1 id=\"proyectoName\"><b>Proyecto:</b> {this.state.nombreProyecto}</h1>\n                        <h2 id='tituloProyectos2'>Tareas del proyecto:</h2>\n                        <br/>\n                        \n                    </div>\n                    \n                    <br/>\n                    <div id='titlesContainer2'>\n                        <p>Nombre Tarea</p>\n                        <p id=\"estadoTitle2\">Estado</p>\n                        <NavLink to={`/proyectos/${id}/nuevaTarea`} className=\"botonAgregarProyectoContainer\">Agregar Tarea</NavLink>\n                    </div>\n                    <br />\n                    {this.state.tareas.map((t) => <TareaCard key={t.codigo} codigoProyecto={id} tarea={t} />)}\n                </div>);\n        \n    }\n}\n","\nimport React, { Component } from 'react'\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\nimport './AgregarProyectoPage.css';\n\nclass AgregarTareaPage extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            modalHeader: null,\n            modalBody: null,\n            modalOnClose: null,\n            modal: false,\n        }\n    }\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n\n    crearTarea(){\n\n        let url = `https://proyectopsa.herokuapp.com/proyectos/${this.id}/tarea/`;\n\n        let nombreTarea = document.getElementById(\"nombreTarea\").value;\n        let fechaInicio = document.getElementById(\"fechaInicio\").value;\n        let descripcion = document.getElementById(\"descripcion\").value;\n        let fechaFin = document.getElementById(\"fechaFin\").value;\n        let prioridad = this.obtenerRadio(\"baja\", \"media\", \"alta\");\n\n        if (!this.validateRequiredEntries(nombreTarea, fechaInicio, prioridad)) return;\n\n        let estado = this.obtenerRadio(\"iniciado\", \"enProceso\", \"finalizado\", \"en proceso\");\n\n        let data = {\n            \"nombre\": nombreTarea,\n            \"fechaInicio\": fechaInicio,\n            \"prioridad\": prioridad,\n            \"fechaFin\": fechaFin == '' ? undefined : fechaFin,\n            \"estado\": estado == null ? undefined : estado ,\n            \"descripcion\": descripcion\n        };\n        \n        let self = this;\n\n        fetch(url, {\n            method: 'POST', \n            mode: 'cors', \n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n            .then(response => response.json())\n            .then(function(json) {\n                if(json.codigo) {\n                    self.abrirModal(\"ÉXITO\", `La tarea se generó exitosamente con código: ${json.codigo}`, () => self.props.history.push(`/proyectos/${self.id}/tareas`));\n                } else {\n                    self.abrirModal(\"ERROR DE LA REQUEST\", json.description + json.validation, () => {});\n                }\n            })\n            .catch(function(error) {\n                self.abrirModal(\"ERROR DEL FETCH\", error.message)\n            });\n    }\n    \n    componentDidMount(){\n        this.id = this.props.match.params.id;\n    }\n\n    abrirModal(header, body, onClose){\n        this.setState({\n            modalHeader: header,\n            modalBody: body,\n            modalOnClose: onClose,\n            modal: true,\n        })\n    }\n\n    obtenerRadio(radio1, radio2, radio3, differ=null){\n        if (document.getElementById(radio1).checked) return radio1;\n        if (document.getElementById(radio2).checked) return differ == null ? radio2 : differ;\n        if (document.getElementById(radio3).checked) return radio3;\n    }\n\n    validateRequiredEntries(nombreTarea, fechaInicio, prioridad){\n        let valid = true;\n        let nombreClassList = document.getElementById(\"nombre\").classList;\n        let fechaClassList = document.getElementById(\"startDate\").classList;\n        let prioridadClassList = document.getElementById(\"priority\").classList;\n\n        \n        valid = this.validate(nombreTarea, nombreClassList);\n        valid = this.validate(fechaInicio, fechaClassList);\n        valid = this.validatePriority(prioridadClassList);\n        \n        return valid;\n    }\n\n    validatePriority(classList){\n\n        let baja = document.getElementById(\"baja\");\n        let media = document.getElementById(\"media\");\n        let alta = document.getElementById(\"alta\");\n\n        if (!baja.checked && !media.checked && !alta.checked){\n            classList.add(\"incorrect\");\n            return false\n        } else {\n            classList.remove(\"incorrect\");\n        }\n\n        return true\n    }\n\n    validate(element, classList){\n\n        if (element == ''){\n            classList.add(\"incorrect\");\n            return false;\n        } else {\n            classList.remove(\"incorrect\");\n        }\n\n        return true;\n    }\n\n    render() {\n        let self = this;\n        const toggleModal = () =>self.setState({modal:!self.state.modal});\n\n        return (\n            <div>\n                <div className='formContainer'>\n                    <Form>\n                        <FormGroup>\n                            <Label className='parametro' for=\"nombreTarea\" id='nombre'>Nombre Tarea *</Label>\n                            <Input type=\"string\" name=\"nombreTarea\" id=\"nombreTarea\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaInicio\" id='startDate'>Fecha Inicio *</Label>\n                            <Input type=\"date\" name=\"fechaInicio\" id=\"fechaInicio\" className='general fecha' required/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"fechaFin\" >Fecha Fin</Label>\n                            <Input type=\"date\" name=\"fechaFin\" id=\"fechaFin\" className='general fecha' />\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\">\n                            <Label className='parametro'>Estado</Label>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='iniciado'  />{' '}\n                                    Iniciado\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='enProceso' />{' '}\n                                    En Proceso\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check >\n                                <Label check>\n                                    <Input type=\"radio\" name='radio' id='finalizado'  />{' '}\n                                    Finalizado\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup tag=\"fieldset\">\n                            <Label className='parametro' id='priority'>Prioridad *</Label>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio2' id='baja'  />{' '}\n                                    Baja\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"radio\" name='radio2' id='media' />{' '}\n                                    Media\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check >\n                                <Label check>\n                                    <Input type=\"radio\" name='radio2' id='alta'  />{' '}\n                                    Alta\n                                </Label>\n                            </FormGroup>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label className='parametro' for=\"descripcion\" id='desc'>Descripción </Label>\n                            <Input type=\"textarea\" name=\"descripcion\" id=\"descripcion\" className='general' maxLength=\"256\" required />\n                        </FormGroup>\n                        <Button onClick={() => this.crearTarea()}>Crear Tarea</Button>\n                    </Form>\n                    <label id='requisitosLabel'>(*) para aquellos campos que sean requeridos obligatoriamente</label>\n                </div>\n                <Modal isOpen={this.state.modal} toggle={toggleModal} className='popupError' onClosed={this.state.modalOnClose}>\n                    <ModalHeader toggle={toggleModal}>{this.state.modalHeader}</ModalHeader>\n                    <ModalBody>\n                        {this.state.modalBody}\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AgregarTareaPage);","import './App.css';\nimport React from \"react\";\nimport CargaDeHorasPage from '../pages/CargaDeHoras/CargaDeHorasPage';\nimport MainProyectosPage from '../pages/Proyectos/MainProyectosPage';\nimport AgregarProyectoPage from '../pages/Proyectos/AgregarProyectoPage';\nimport RecursosPage from './../pages/Recursos/RecursosPage';\nimport TareaPage from '../pages/Proyectos/TareaPage';\nimport Soporte from './../pages/Soporte';\nimport TicketDetail from './../pages/Soporte/DetalleTicket';\nimport Main from './../pages/Main';\nimport {Route, Switch} from \"react-router\";\nimport { Col } from 'reactstrap';\nimport { useHistory} from \"react-router-dom\";\nimport MainTareasPage from \"../pages/Proyectos/MainTareasPage\";\nimport { FaHome } from \"react-icons/fa\";\nimport AgregarTareaPage from '../pages/Proyectos/AgregarTareaPage';\n\nfunction App(props) {\n    const history = useHistory();\n\n  return (\n    <div className=\"App\">\n        <header className=\"App-header-ppal\">\n            <div id='headerContainer' className=\"MuiToolbar-root MuiToolbar-root App-subheader-height MuiToolbar-gutters\">\n                <div id='homeButton' onClick={() => history.push('/')}>\n                    <Col xl={12} lg={12}> {/*????*/}\n                        <FaHome/> HOME\n                    </Col>\n                </div>\n                <div id='companyName'>\n                    <Col xl={12} lg={12}>\n                        PSA\n                    </Col>\n                </div>\n            </div>\n            \n        </header>\n\n        <main>\n            <Switch>\n                <Route exact path=\"/proyectos\" component={MainProyectosPage} />\n                <Route exact path=\"/nuevoProyecto\" component={AgregarProyectoPage}/>\n                <Route exact path=\"/proyectos/:id/tareas\" component={MainTareasPage} />\n                <Route exact path=\"/proyectos/:id/tareas/:idtarea\" component={TareaPage} />\n                <Route exact path=\"/\" component={Main} />\n                <Route exact path=\"/recursos\" component={RecursosPage} />\n                <Route exact path=\"/cargadehoras/:id\" component={CargaDeHorasPage} />\n                <Route exact path=\"/soporte\" component={Soporte} />\n                <Route path=\"/soporte/ticket_detail\" component={TicketDetail} />\n                <Route exact path=\"/proyectos/:id/nuevaTarea\" component={AgregarTareaPage} />\n            </Switch>\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter  } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}